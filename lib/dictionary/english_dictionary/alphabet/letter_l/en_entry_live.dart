import 'package:flutter/material.dart';
import 'package:flutter_tts/flutter_tts.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:zeetionary/constants.dart';

enum TtsState { playing }

class EnglishEntrylive extends StatefulWidget {
  const EnglishEntrylive({super.key});

  @override
  State<EnglishEntrylive> createState() => _EnglishEntryliveState();
}

class _EnglishEntryliveState extends State<EnglishEntrylive> {
  @override
  void initState() {
    super.initState();
    flutterTts = FlutterTts();
    flutterTts.setLanguage("en-GB");
    flutterTts.setLanguage("en-US");
    fetchSentences();
  }

  FlutterTts flutterTts = FlutterTts();

  bool isSpeaking = false;

  Future<void> startSpeaking(
      String languageCode, EnglishMeaningConst englishMeaningConst) async {
    String textToSpeak = """
${englishMeaningConst.text}
""";

    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak(textToSpeak);

    setState(() {
      isSpeaking = true;
    });
  }

  Future<void> stopSpeaking() async {
    await flutterTts.stop();

    setState(() {
      isSpeaking = false;
    });
  }

  final EnglishMeaningConst englishMeaningConst = const EnglishMeaningConst(
    text: """
- Verb: live (Derived forms: lives, living, lived)
1. Be an inhabitant of; spend most of one's life in (- populate, dwell, inhabit)
"People lived in Africa millions of years ago";
 
2. Lead a certain kind of life; live in a certain style
"we had to live frugally after the war"
 
3. Continue to live and avoid dying (- survive, last, live on, go, endure, hold up, hold out)
"The race car driver lived through several very serious accidents"; "One crash victim died, the other lived"; "These superstitions live on in the backwaters of America";
 
4. Support oneself, esp. at a minimal level (- exist, survive, subsist)
"Can you live on Â£2000 a month in New York City?";
 
5. Have life, be alive (- be)
"My grandfather lived until the end of war";
 
6. Have firsthand knowledge of states, situations, emotions, or sensations (- know, experience)
"I have lived a kind of hell when I was a drug addict"; "The holocaust survivors have lived a nightmare"; "I lived through two divorces";
 
7. Pursue a positive and satisfying existence
"You must accept yourself and others if you really want to live"

- Adjective: live (Derived forms: liver, livest)
1. Actually being performed at the time of hearing or viewing (- unrecorded)
"a live television program"; "brought to you live from Lincoln Center"; "live entertainment involves performers actually in the physical presence of a live audience";
 
2. Highly reverberant
"a live concert hall"
 
3. Charged with an explosive
"live ammunition"; "a live bomb"
 
4. Elastic; rebounds readily (- bouncy, lively, resilient, springy)
"clean live hair";
 
5. Abounding with life and energy
"the club members are a really live bunch"
 
6. (printing) in current use or ready for use
"live copy is ready to be set in type or already set but not yet proofread"
 
7. Of current relevance
"a live issue"; "still a live option"
 
8. (electricity) charged or energized with electricity (- hot [informal])
"a live wire";
 
9. Capable of erupting (- alive)
"a live volcano";
 
10. Exerting force or containing energy
"live coals"; "tossed a live cigarette out the window"; "got a shock from a live wire"; "live ore is unmined ore"; "a live bomb"; "a live ball is one in play"
 
11. Possessing life (- alive)
"a live canary";

- Adverb: live
1. Not recorded
"the opera was broadcast live"
""",
  );

  final String keyword = "live";
  List<Map<String, dynamic>> filteredSentences = [];

  Future<void> fetchSentences() async {
    final sentences =
        await DatabaseUtils.instance.fetchFilteredSentences(keyword: keyword);
    setState(() {
      filteredSentences = sentences;
    });
  }

  void speakEnglish(String text, {String? languageCode}) async {
    await flutterTts.setLanguage(languageCode ?? "en-GB");
    await flutterTts.speak(text);
  }

  Future<void> speakheadword(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""live""");
  }

  Future<void> speaksentence1(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""We used to live in London.""");
  }

  Future<void> speaksentence2(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak(
        """We live in a world where technological advance is the norm.""");
  }

  Future<void> speaksentence3(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""Where do you live?""");
  }

  Future<void> speaksentence4(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""She needs to find somewhere to live.""");
  }

  Future<void> speaksentence5(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""It's a great place to live.""");
  }

  Future<void> speaksentence6(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""Both her children still live at home.""");
  }

  Future<void> speaksentence7(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts
        .speak("""He lived and worked there until his death in 2015.""");
  }

  Future<void> speaksentence8(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""She lives quite near here.""");
  }

  Future<void> speaksentence9(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""He lives in Cape Town.""");
  }

  Future<void> speaksentence10(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""I'm not going to live here permanently.""");
  }

  Future<void> speaksentence11(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""The doctors said he only had six months to live.""");
  }

  Future<void> speaksentence12(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""Spiders can live for several days without food.""");
  }

  Future<void> speaksentence13(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""Women live longer than men in general.""");
  }

  Future<void> speaksentence14(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""Who wants to live forever? I don't.""");
  }

  Future<void> speaksentence15(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""When did Handel live?""");
  }

  Future<void> speaksentence16(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""He's the greatest player who ever lived.""");
  }

  Future<void> speaksentence17(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""He lived in poverty most of his life.""");
  }

  Future<void> speaksentence18(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""She lived a very peaceful life.""");
  }

  Future<void> speaksentence19(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""She lived and died a single woman.""");
  }

  Future<void> speaksentence20(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""He was living quietly with his family.""");
  }

  Future<void> speaksentence21(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""All she wanted was to get married and live happily ever after.""");
  }

  Future<void> speaksentence22(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""He's now living a life of luxury in Australia.""");
  }

  Future<void> speaksentence23(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""They'll have enough money to live comfortably.""");
  }

  Future<void> speaksentence24(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""Tonight she felt like living dangerously.""");
  }

  Future<void> speaksentence25(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""This moment will live in our memory for many years to come.""");
  }

  Future<void> speaksentence26(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""Her words have lived with me all my life.""");
  }

  Future<void> speaksentence27(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""I don't want to be stuck in an office all my lifeâI want to live!""");
  }

  Future<void> speaksentence28(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""I need to talk to a live person.""");
  }

  Future<void> speaksentence29(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""We saw a real live shark!""");
  }

  Future<void> speaksentence30(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""You're looking at live pictures from a Las Vegas courtroom.""");
  }

  Future<void> speaksentence31(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""Is the show live or recorded?""");
  }

  Future<void> speaksentence32(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""The club has live music most nights.""");
  }

  Future<void> speaksentence33(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""It was the first interview I'd done in front of a live audience.""");
  }

  Future<void> speaksentence34(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""Youâd better test the electric outlet first to see if itâs live.""");
  }

  Future<void> speaksentence35(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""The army is using live ammunition on these maneuvers.""");
  }

  Future<void> speaksentence36(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""We'll be reporting live from Beijing.""");
  }

  Future<void> speaksentence37(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""The show is going out live.""");
  }

  Future<void> speaksentence38(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence3800""");
  }

  Future<void> speaksentence39(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence3900""");
  }

  Future<void> speaksentence40(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_4000""");
  }

  Future<void> speaksentence41(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence4100""");
  }

  Future<void> speaksentence42(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence4200""");
  }

  Future<void> speaksentence43(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence4300""");
  }

  Future<void> speaksentence44(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence4400""");
  }

  Future<void> speaksentence45(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence4500""");
  }

  Future<void> speaksentence46(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence4600""");
  }

  Future<void> speaksentence47(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence4700""");
  }

  Future<void> speaksentence48(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence4800""");
  }

  Future<void> speaksentence49(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence4900""");
  }

  Future<void> speaksentence50(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_5000""");
  }

  Future<void> speaksentence51(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence5100""");
  }

  Future<void> speaksentence52(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence5200""");
  }

  Future<void> speaksentence53(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence5300""");
  }

  Future<void> speaksentence54(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence5400""");
  }

  Future<void> speaksentence55(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence5500""");
  }

  Future<void> speaksentence56(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence5600""");
  }

  Future<void> speaksentence57(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence5700""");
  }

  Future<void> speaksentence58(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence5800""");
  }

  Future<void> speaksentence59(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence5900""");
  }

  Future<void> speaksentence60(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_6000""");
  }

  Future<void> speaksentence61(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence6100""");
  }

  Future<void> speaksentence62(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence6200""");
  }

  Future<void> speaksentence63(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence6300""");
  }

  Future<void> speaksentence64(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence6400""");
  }

  Future<void> speaksentence65(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence6500""");
  }

  Future<void> speaksentence66(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence6600""");
  }

  Future<void> speaksentence67(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence6700""");
  }

  Future<void> speaksentence68(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence6800""");
  }

  Future<void> speaksentence69(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence6900""");
  }

  Future<void> speaksentence70(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_7000""");
  }

  Future<void> speaksentence71(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence7100""");
  }

  Future<void> speaksentence72(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence7200""");
  }

  Future<void> speaksentence73(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence7300""");
  }

  Future<void> speaksentence74(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence7400""");
  }

  Future<void> speaksentence75(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence7500""");
  }

  Future<void> speaksentence76(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence7600""");
  }

  Future<void> speaksentence77(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence7700""");
  }

  Future<void> speaksentence78(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence7800""");
  }

  Future<void> speaksentence79(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence7900""");
  }

  Future<void> speaksentence80(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_8000""");
  }

  Future<void> speaksentence81(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence8100""");
  }

  Future<void> speaksentence82(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence8200""");
  }

  Future<void> speaksentence83(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence8300""");
  }

  Future<void> speaksentence84(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence8400""");
  }

  Future<void> speaksentence85(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence8500""");
  }

  Future<void> speaksentence86(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence8600""");
  }

  Future<void> speaksentence87(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence8700""");
  }

  Future<void> speaksentence88(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence8800""");
  }

  Future<void> speaksentence89(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence8900""");
  }

  Future<void> speaksentence90(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_9000""");
  }

  Future<void> speaksentence91(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence9100""");
  }

  Future<void> speaksentence92(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence9200""");
  }

  Future<void> speaksentence93(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence9300""");
  }

  Future<void> speaksentence94(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence9400""");
  }

  Future<void> speaksentence95(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence9500""");
  }

  Future<void> speaksentence96(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence9600""");
  }

  Future<void> speaksentence97(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence9700""");
  }

  Future<void> speaksentence98(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence9800""");
  }

  Future<void> speaksentence99(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence9900""");
  }

  Future<void> speaksentence100(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence__10000""");
  }

  Future<void> speaksentence101(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_10100""");
  }

  Future<void> speaksentence102(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_10200""");
  }

  Future<void> speaksentence103(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_10300""");
  }

  Future<void> speaksentence104(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_10400""");
  }

  Future<void> speaksentence105(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_10500""");
  }

  Future<void> speaksentence106(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_10600""");
  }

  Future<void> speaksentence107(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_10700""");
  }

  Future<void> speaksentence108(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_10800""");
  }

  Future<void> speaksentence109(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_10900""");
  }

  Future<void> speaksentence110(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_11000""");
  }

  Future<void> speaksentence111(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_11100""");
  }

  Future<void> speaksentence112(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_11200""");
  }

  Future<void> speaksentence113(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_11300""");
  }

  Future<void> speaksentence114(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_11400""");
  }

  Future<void> speaksentence115(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_11500""");
  }

  Future<void> speaksentence116(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_11600""");
  }

  Future<void> speaksentence117(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_11700""");
  }

  Future<void> speaksentence118(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_11800""");
  }

  Future<void> speaksentence119(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_11900""");
  }

  Future<void> speaksentence120(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_12000""");
  }

  @override
  Widget build(BuildContext context) {
    // 188888880002200000000000
    const String videoIdend = 'https://youtu.be/Dvkydwf2Gj8?t=32878';
    const double startSecondsend = 0;
    const String videoIdone = 'https://youtu.be/FS5enBswCLU?t=12';
    const double startSecondsone = 0;
    const String videoIdtwo = 'https://youtu.be/fVSvbhdY82o?t=71';
    const double startSecondstwo = 0;
    const String videoIdthree = 'https://youtu.be/OaXvEd5uu2w?t=89';
    const double startSecondsthree = 0;
    const String videoIdfour = 'https://youtu.be/zsDK94sZpXM?t=1351';
    const double startSecondsfour = 0;
    const String videoIdfive = 'https://youtu.be/AhwvMFlHbKw?t=623';
    const double startSecondsfive = 0;

    return DefaultTabController(
      length: 4,
      child: Scaffold(
        body: NestedScrollView(
          headerSliverBuilder: (context, innerBoxIsScrolled) {
            return [
              CustomSliverAppBar(
                flexibleSpace: FlexibleSpaceBar(
                  background: SingleChildScrollView(
                    child: EntryPageColumn(
                      word: """live""",
                      // alsoEnglishWord: "also: live",
                      britshText: """IpaUK: /lÉªv/""",
                      americanText: """IpaUS: /lÉªv/""",
                      onPressedBritish: () => speakheadword("en-GB"),
                      onPressedAmerican: () => speakheadword("en-US"),
                    ),
                  ),
                ),
                bottom: const CustomTabBarNew(
                  tabs: [
                    UkIconForTab(),
                    KurdIconForTab(),
                    SentencesIconForTab(),
                    VideoIconForTab(),
                  ],
                ),
              ),
            ];
          },
          body: TabBarView(
            children: [
              SingleChildScrollView(
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    EnglishButtonTTS(
                      onBritishPressed: (languageCode) =>
                          startSpeaking(languageCode, englishMeaningConst),
                      onAmericanPressed: (languageCode) =>
                          startSpeaking(languageCode, englishMeaningConst),
                      onStopPressed: stopSpeaking,
                    ),
                    englishMeaningConst,
                  ],
                ),
              ),
              SingleChildScrollView(
                child: CustomColumnWidget(
                  children: [
                    const KurdishVocabulary(text: """
Ú©ÙØ±Ø¯Û: Ø²ÛÙØ¯ÙÙØ Ø²ÛÙØ¯ÛØ Ø²ÙØ¯ÛØ ÙÛ Ø³ÛØ±ÛÙÛâØ¯Ø§Ø	Ú¯ÚÚ¯Ø±ØªÙÙØ ÙÛÚµØ¨ÙÙØ Ø³ÙÙØ±ÛÙÛØ¨ÙÙØ Ø¯ÛØ³ÙÙØªÛØ Ø¯Ø§Ú¯ÛØ±Ø³Ø§ÙØ	Ø¨ÛØªÛÙØ Ø¨ÛØªØ§ÙØ Ø¨ÛÚ¯ÙÚØ Ø¨ÛÚ©ÛÛÙØ	Ø³ÛØ±ÙØ¬âÚØ§Ú©ÛØ´Ø Ú¯ÛØ±ÙØ	Ø¦Ø§ÙØ§Ø¯Û Ø¨Û Ø¨ÛÚ©Ø§Ø±ÙÛÙØ§ÙØ Ø¯ÛØ³âÙÛÙÛØ¯Ø±Ø§ÙØ Ø¨ÛÚ©Ø§Ø±ÙÛÙÛÙØ±Ø§ÙØ ÙÛØ±Ø ØªØ§Ø²ÛØ Ú©ÛÙÛÙÛØ¨ÙÙØ	ÙÛØªÛÙÛÙÛÙÛÙØ§ØªÙÙØ Ø´ÛÚÛØ ÚØ§Ø³ØªÛØ Ø¬ÛÙÚ¯ÛØ Ø¯ÛØªÛÙÛØªÛÙÛØ	(ÙØ§ÛÛØ±) Ú©Ø§Ø±ÛØ¨Ø§Û ØªÛØ§ÛÛØ Ú©Ø§Ø±ÛØ¨Ø§ØªÛØ§Ø¨ÙÙØ	(Ø¨ÛØ±ÙØ§ÙÛ) Ø²ÛÙØ¯ÙÙØ Ø²ÙØ¯ÛØ ÚØ§Ø³ØªÛÙØ®ÛØ	(ÙÙØ³ÛÙØ§) Ø¨ÛØ¯Ø±ÛÚØ§ÛÛ Ú©ÛÙØ³ÛØ±ØªØ ÙÛ ÙÛ Ø³ØªÛØ¯ÛÛØ	(ÙØ§Ø³Øª) Ø³ÛØ±Ø¨Û ÙÛÙÛÙØ Ø³ÛØ±Ø¨Û Ø¦Ø§ÙÛØ§Ù ÛØ§Ù ÙØ§ÛÛØ Ø²ÛÙØ¯ÙÙØ Ø¨Û Ø´ÛÙÛÛÛÚ©Û ÚØ§Ø³ØªÛÙØ®Û
"""),
// With short examples define "live", please follow LX instructions
                    const DefinitionKurdish(
                        text: """Ù¡. (Ú©Ø±Ø¯Ø§Ø±) ÚÛØ§ÙÚ©Ø±Ø¯Ù ÙÛ Ø´ÙÛÙÛÚ©"""),
                    SentencesRow(
                      englishText: """We used to live in London.""",
                      kurdishText: """Ø¬Ø§Ø±Ø§Ù ÙÛ ÙÛÙØ¯ÛÙ Ø¯ÛÚÛØ§ÛÙ.""",
                      onPressedBritish: () => speaksentence1("en-GB"),
                      onPressedAmerican: () => speaksentence1("en-US"),
                    ),
                    Column(
                      children: [
                        MyExpansionTile(
                          children: [
                            SentencesRow(
                              englishText:
                                  """We live in a world where technological advance is the norm.""",
                              kurdishText:
                                  """ÙÛ Ø¬ÛÙØ§ÙÛÚ©Ø¯Ø§ Ø¯ÛÚÛÙ Ú©Û Ø¨ÛØ±ÛÙÙ¾ÛØ´ÚÙÙÙÛ ØªÛÚ©ÙÛÙÛÚÛ Ø¨ÛØ´ÛÚ©Û ÙÛ ÚÛØ§Ù.""",
                              englishNote:
                                  """This means society commonly experiences regular progress and innovation in technology as an expected standard.""",
                              onPressedBritish: () => speaksentence2("en-GB"),
                              onPressedAmerican: () => speaksentence2("en-US"),
                            ),
                            const DividerDefinition(),
                            const DefinitionKurdish(
                                text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                            const DividerSentences(),
                            SentencesRow(
                              englishText: """Where do you live?""",
                              kurdishText: """ÙÛ Ú©ÙÛ Ø¯ÛÚÛØªØ""",
                              onPressedBritish: () => speaksentence3("en-GB"),
                              onPressedAmerican: () => speaksentence3("en-US"),
                            ),
                            const DividerDefinition(),
                            const DefinitionKurdish(
                                text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                            const DividerSentences(),
                            SentencesRow(
                              englishText:
                                  """She needs to find somewhere to live.""",
                              kurdishText:
                                  """Ø¯ÛØ¨ÛØª Ø´ÙÛÙÛÚ© Ø¨Ø¯ÛØ²ÛØªÛÙÛ Ø¨Û ÚÛØ§Ù.""",
                              onPressedBritish: () => speaksentence4("en-GB"),
                              onPressedAmerican: () => speaksentence4("en-US"),
                            ),
                            const DividerDefinition(),
                            const DefinitionKurdish(
                                text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                            const DividerSentences(),
                            SentencesRow(
                              englishText: """It's a great place to live.""",
                              kurdishText: """Ø´ÙÛÙÛÚ©Û ÙØ§ÙØ§Ø²ÛÛÛ Ø¨Û ÚÛØ§Ù.""",
                              onPressedBritish: () => speaksentence5("en-GB"),
                              onPressedAmerican: () => speaksentence5("en-US"),
                            ),
                            const DividerDefinition(),
                            const DefinitionKurdish(
                                text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                            const DividerSentences(),
                            SentencesRow(
                              englishText:
                                  """Both her children still live at home.""",
                              kurdishText:
                                  """ÙÛØ±Ø¯ÙÙ ÙÙØ¯Ø§ÚµÛÚ©ÛÛ ÙÛØ´ØªØ§ ÙÛ ÙØ§ÚµÛÙÛ Ø¯ÛÚÛÙ.""",
                              onPressedBritish: () => speaksentence6("en-GB"),
                              onPressedAmerican: () => speaksentence6("en-US"),
                            ),
                            const DividerDefinition(),
                            const DefinitionKurdish(
                                text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                            const DividerSentences(),
                            SentencesRow(
                              englishText:
                                  """He lived and worked there until his death in 2015.""",
                              kurdishText:
                                  """ÙÛÙÛ ÚÛØ§ Ù Ú©Ø§Ø±Û Ú©Ø±Ø¯ ØªØ§ÙÛÚ©Ù ÙØ±Ø¯ÙÛ ÙÛ Ù¢Ù Ù¡Ù¥.""",
                              onPressedBritish: () => speaksentence7("en-GB"),
                              onPressedAmerican: () => speaksentence7("en-US"),
                            ),
                            const DividerDefinition(),
                            const DefinitionKurdish(
                                text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                            const DividerSentences(),
                            SentencesRow(
                              englishText: """She lives quite near here.""",
                              kurdishText:
                                  """ØªØ§ ÚØ§Ø¯ÛÛÛÚ©Û Ø²ÛØ± ÙØ²ÛÚ© ÙÛØ±Û Ø¯ÛÚÛ.""",
                              onPressedBritish: () => speaksentence8("en-GB"),
                              onPressedAmerican: () => speaksentence8("en-US"),
                            ),
                            const DividerDefinition(),
                            const DefinitionKurdish(
                                text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                            const DividerSentences(),
                            SentencesRow(
                              englishText: """He lives in Cape Town.""",
                              kurdishText: """ÙÛ Ú©ÛÛÙ¾ ØªØ§ÙÙ Ø¯ÛÚÛ.""",
                              onPressedBritish: () => speaksentence9("en-GB"),
                              onPressedAmerican: () => speaksentence9("en-US"),
                            ),
                            const DividerDefinition(),
                            const DefinitionKurdish(
                                text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                            const DividerSentences(),
                            SentencesRow(
                              englishText:
                                  """I'm not going to live here permanently.""",
                              kurdishText: """Ø¨Û ÙÛÙÛØ´Û ÙÛØ±Û ÙØ§ÚÛÙ.""",
                              onPressedBritish: () => speaksentence10("en-GB"),
                              onPressedAmerican: () => speaksentence10("en-US"),
                            ),
                          ],
                        ),
                      ],
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """Ù¢. (Ú©Ø±Ø¯Ø§Ø±) Ø¦ÛÙÛÛ Ú©Û ÙÛ Ú©ÛØ§ÙØ¯Ø§ Ø¨ÛØª"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """The doctors said he only had six months to live.""",
                      kurdishText: """Ù¾Ø²ÛØ´Ú©ÛÚ©Ø§Ù Ú¯ÙØªÛØ§Ù ØªÛÙÙØ§ Ø´ÛØ´ ÙØ§ÙÚ¯Û ÙØ§ÙÛ Ø¨ÚÛ.""",
                      onPressedBritish: () => speaksentence11("en-GB"),
                      onPressedAmerican: () => speaksentence11("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """Spiders can live for several days without food.""",
                      kurdishText: """Ø¬Ø§ÚµØ¬Ø§ÚµÛÚ©Û Ø¯ÛÚ©Ø±ÛØª Ø¨Û ÚÛÙØ¯ ÚÛÚÛÚ© Ø¨ÛØ¨Û Ø®ÙØ§Ø±Ø¯Ù Ø¨ÚÛÙ.""",
                      onPressedBritish: () => speaksentence12("en-GB"),
                      onPressedAmerican: () => speaksentence12("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """Women live longer than men in general.""",
                      kurdishText: """ÚÙØ§Ù Ø¨Û Ø´ÛÙÛÛÛÚ©Û Ú¯Ø´ØªÛ Ø²ÛØ§ØªØ± ÙÛ Ù¾ÛØ§ÙØ§Ù Ø¯ÛÚÛÙ.""",
                      onPressedBritish: () => speaksentence13("en-GB"),
                      onPressedAmerican: () => speaksentence13("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """Who wants to live forever? I don't.""",
                      kurdishText: """Ú©Û Ø¯ÛÛÛÙÛØª Ø¨Û ÙÛÙÛØ´Û Ø¨ÚÛØ ÙÙ ÙØ§ÙÛÙÛØª""",
                      onPressedBritish: () => speaksentence14("en-GB"),
                      onPressedAmerican: () => speaksentence14("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """Ù£. (Ú©Ø±Ø¯Ø§Ø±) Ø¦ÛÙÛÛ ÙÛ ÚÛØ§ÙØ¯Ø§Ø Ø¨Û ØªØ§ÛØ¨ÛØªÛ ÙÛ Ú©Ø§ØªÛÚ©Û Ø¯ÛØ§Ø±ÛÚ©Ø±Ø§ÙØ¯Ø§"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """When did Handel live?""",
                      kurdishText: """ÙØ§ÙØ¯Úµ Ú©ÛÛ ÚÛØ§Ø""",
                      onPressedBritish: () => speaksentence15("en-GB"),
                      onPressedAmerican: () => speaksentence15("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """He's the greatest player who ever lived.""",
                      kurdishText: """ÙÛØ²ÙØªØ±ÛÙ ÛØ§Ø±ÛØ²Ø§ÙÛ ØªØ§ Ø¦ÛØ³ØªØ§ ÚÛØ§ Ø¨ÛØª.""",
                      onPressedBritish: () => speaksentence16("en-GB"),
                      onPressedAmerican: () => speaksentence16("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """Ù¤. (Ú©Ø±Ø¯Ø§Ø±) Ø¨ÛØ³ÛØ±Ø¨Ø±Ø¯ÙÛ ÚÛØ§ÙØª Ø¨Û Ø´ÛÙÛÛÛÚ©Û Ø¯ÛØ§Ø±ÛÚ©Ø±Ø§Ù"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """He lived in poverty most of his life.""",
                      kurdishText: """Ø²ÛØ±ÛÙÛÛ ÚÛØ§ÙÛ ÙÛ ÙÛÚØ§Ø±ÛØ¯Ø§ ÚÛØ§.""",
                      onPressedBritish: () => speaksentence17("en-GB"),
                      onPressedAmerican: () => speaksentence17("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """She lived a very peaceful life.""",
                      kurdishText: """ÚÛØ§ÙÛÚ©Û Ø²ÛØ± Ø¨ÛâÚ©ÛØ´Û ÚÛØ§.""",
                      onPressedBritish: () => speaksentence18("en-GB"),
                      onPressedAmerican: () => speaksentence18("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """She lived and died a single woman.""",
                      kurdishText: """ÚÛØ§ Ù ÙØ±Ø¯ ÙÛÚ© ÚÙÛÚ©Û ØªÛÙÙØ§.""",
                      onPressedBritish: () => speaksentence19("en-GB"),
                      onPressedAmerican: () => speaksentence19("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """He was living quietly with his family.""",
                      kurdishText: """Ø¨ÛØ¯ÛÙÚ¯ ÙÛÚ¯ÛÚµ Ø®ÛØ²Ø§ÙÛÚ©ÛÛ Ø¯ÛÚÛØ§.""",
                      onPressedBritish: () => speaksentence20("en-GB"),
                      onPressedAmerican: () => speaksentence20("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """All she wanted was to get married and live happily ever after.""",
                      kurdishText: """ÙÛÙÙÙ Ø¦ÛÙÛÛ Ø¯ÛÛÙÛØ³Øª Ø¦ÛÙÛ Ø¨ÙÙ Ú©Û ÙØ§ÙØ³ÛØ±Ú¯ÛØ±Û Ø¨Ú©Ø§Øª Ù Ø¯ÙØ§ØªØ± Ø¨Û Ø®ÛØ´Û Ø¨Û ÙÛÙÛØ´Û Ø¨ÚÛ.""",
                      onPressedBritish: () => speaksentence21("en-GB"),
                      onPressedAmerican: () => speaksentence21("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """He's now living a life of luxury in Australia.""",
                      kurdishText: """Ø¦ÛØ³ØªØ§ ÚÛØ§ÙÛÚ©Û Ø¯ÛÙÚµÛÙÛÙØ¯Ø§ÙÛ ÙÛ Ø¦ÙØ³ØªØ±Ø§ÙÛØ§ Ø¯ÛÚÛ.""",
                      onPressedBritish: () => speaksentence22("en-GB"),
                      onPressedAmerican: () => speaksentence22("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """They'll have enough money to live comfortably.""",
                      kurdishText: """Ù¾Ø§Ø±ÛÛ Ù¾ÛÙÛØ³ØªÛØ§Ù Ø¯ÛØ¨ÛØª Ú©Û Ø¨Û Ø¦Ø§Ø±Ø§ÙÛ Ø¨ÚÛÙ.""",
                      onPressedBritish: () => speaksentence23("en-GB"),
                      onPressedAmerican: () => speaksentence23("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """Tonight she felt like living dangerously.""",
                      kurdishText: """Ø¦ÛÙØ´ÛÙ ÙÛÙØ§Û ÙÛØ³ØªØ¯ÛÚ©Ø±Ø¯ Ø¨Û ÙÛØªØ±Ø³ÛÛÛÙÛ Ø¯ÛÚÛ.""",
                      onPressedBritish: () => speaksentence24("en-GB"),
                      onPressedAmerican: () => speaksentence24("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """Ù¥. (Ú©Ø±Ø¯Ø§Ø±) Ø¦ÛÙÛÛ Ø¨ÛØ±Ø¯ÛÙØ§Ù Ø¨ÛØª ÙÛ Ø¨ÙÙÙ ÛØ§Ù ÙÛØ¨ÛØ±Û Ø®ÛÚµÚ©ÛØ¯Ø§ Ø¨ÛØª"""),
                    const AlsoEnglishckb(word: "Ú¾ÛØ±ÙÛÚ¾Ø§: remain"),
                    SentencesRow(
                      englishText: """This moment will live in our memory for many years to come.""",
                      kurdishText: """Ø¦ÛÙ Ø³Ø§ØªÛ ÙÛ ÛØ§Ø¯ÙØ§ Ø¯ÛÙÛÙÛØªÛÙÛ Ø¨Û ÚÛÙØ¯ÛÙ Ø³Ø§ÚµÛ Ø¯Ø§Ø¯Û.""",
                      onPressedBritish: () => speaksentence25("en-GB"),
                      onPressedAmerican: () => speaksentence25("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """Her words have lived with me all my life.""",
                      kurdishText: """ÙØ´ÛÚ©Ø§ÙÛ Ø¨Û ØªÛÙØ§ÙÛ ÚÛØ§ÙÙ ÙÛÚ¯ÛÚµÙ ÙØ§ÙÙ.""",
                      onPressedBritish: () => speaksentence26("en-GB"),
                      onPressedAmerican: () => speaksentence26("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """Ù¦. (Ú©Ø±Ø¯Ø§Ø±) ÙÛØ¨ÙÙÙÛ ÚÛØ§ÙÛÚ©Û ØªÛÙØ§Ù Ù Ø¨ÛØ¬ÛØ´"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """I don't want to be stuck in an office all my lifeâI want to live!""",
                      kurdishText: """ÙØ§ÙÛÙÛØª ÙÛÙÙÙ ÚÛØ§ÙÙ ÙÛ Ø¦ÛÙÛØ³ÛÚ©Ø¯Ø§ ÙÛØªÛØ³ Ø¨Ù Ù Ø¯ÛÙÛÙÛØª ÚÛØ§Ù Ø¨Ú©ÛÙ!""",
                      onPressedBritish: () => speaksentence27("en-GB"),
                      onPressedAmerican: () => speaksentence27("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """Ù§. (ÙØ§ÙÛÚµÙØ§Ù) Ú©Û ÙØ±Ø¯ÙÙ ÙÛÛÛ"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """I need to talk to a live person (= not a recording or computer).""",
                      kurdishText: """Ø¯ÛÙÛÙÛØª ÙØ³Û ÙÛÚ¯ÛÚµ ÙØ±ÛÚ¤ÛÚ©Û ÚØ§Ø³ØªÛ Ø¨Ú©ÛÙ.""",
                      onPressedBritish: () => speaksentence28("en-GB"),
                      onPressedAmerican: () => speaksentence28("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """We saw a real live shark!""",
                      kurdishText: """ÙØ±Ø´ÛÚ©Û ÚØ§Ø³ØªÛ Ø²ÛÙØ¯ÙÙÙØ§Ù Ø¯ÛØª.""",
                      onPressedBritish: () => speaksentence29("en-GB"),
                      onPressedAmerican: () => speaksentence29("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """Ù¨. (ÙØ§ÙÛÚµÙØ§Ù) Ú©Û ÚØ§Ø³ØªÛÙØ®Û ÚÙÙØ¯ÛØ¯Ø§Øª"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """You're looking at live pictures from a Las Vegas courtroom.""",
                      kurdishText: """Ø¦ÛÙÛÛ Ø¯ÛÛØ¨ÛÙÛØª ÙÛÙÛÛ ÚØ§Ø³ØªÛÙØ®ÛÛ ÚÙÙØ±Û Ø¯Ø§Ø¯Ú¯Ø§Û ÙØ§Ø³ Ú¤ÛÚ¯Ø§Ø³Û.""",
                      onPressedBritish: () => speaksentence30("en-GB"),
                      onPressedAmerican: () => speaksentence30("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """Is the show live or recorded?""",
                      kurdishText: """Ù¾ÚÛÚ¯Ø±Ø§ÙÛÚ©Û ÚØ§Ø³ØªÛÙØ®ÛÛÛ ÛØ§Ù ØªÛÙØ§Ø±Ú©Ø±Ø§ÙÛØ""",
                      onPressedBritish: () => speaksentence31("en-GB"),
                      onPressedAmerican: () => speaksentence31("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """Ù©. (ÙØ§ÙÛÚµÙØ§Ù) Ú©Û ÙÙØ§ÛØ´ÛÚ© ÚØ§Ø³ØªÛÙØ®ÛÛÛ Ù Ø¨ÛÙÛØ±Ø§Ù Ø®ÛÛØ§Ù ÙÛ Ø´ÙÛÙÛ ÚÙÙØ¯Ø§ÙÛÚ©ÛÙ"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """The club has live music most nights.""",
                      kurdishText: """ÛØ§ÙÛÚ©Û Ø²ÛØ± ÙÛÙØ²ÛÚ©Û ÚØ§Ø³ØªÛÙØ®ÛÛ ÙÛÛÛ.""",
                      onPressedBritish: () => speaksentence32("en-GB"),
                      onPressedAmerican: () => speaksentence32("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """It was the first interview I'd done in front of a live audience (= with people watching).""",
                      kurdishText: """Ø¦ÛÙÛ ÛÛÚ©ÛÙ ÚØ§ÙÙ¾ÛÚ©ÛÙØªÙ Ø¨ÙÙ Ø¦ÛÙØ¬Ø§ÙÙ Ø¯Ø§Ø¨ÛØª ÙÛ Ù¾ÛØ´ Ú¯ÙÛÚ¯Ø±Û Ø¦Ø§ÙØ§Ø¯Û.""",
                      onPressedBritish: () => speaksentence33("en-GB"),
                      onPressedAmerican: () => speaksentence33("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """Ù¡Ù . (ÙØ§ÙÛÚµÙØ§Ù) Ú©Û Ú©Ø§Ø±ÛØ¨Ø§Û ØªÛØ¯Ø§ÛÛ"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """Youâd better test the electric outlet first to see if itâs live.""",
                      kurdishText: """Ø¨Ø§Ø´ØªØ±Û Ø³ÛØ±ÛØªØ§ Ø³ÛÛØ±Û Ø¯ÛØ±ÚÛÛ Ú©Ø§Ø±ÛÚ©Ø§ ØªØ§ÙÛØ¨Ú©ÛÛØªÛÙÛ Ø¨Ø²Ø§ÙÛØª Ú©Û Ú©Ø§Ø±ÛØ¨Ø§Û ØªÛØ¯Ø§ÛÛ.""",
                      onPressedBritish: () => speaksentence34("en-GB"),
                      onPressedAmerican: () => speaksentence34("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """Ù¡Ù¡. (ÙØ§ÙÛÚµÙØ§Ù) Ú©Û ØªÙØ§ÙØ§Û ØªÛÙÛÙÛÙÛÛ ÙÛÛÛ"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """The army is using live ammunition on these maneuvers.""",
                      kurdishText: """Ø³ÙÙ¾Ø§ ØªÛÙÛÙÛÙÛ ÚØ§Ø³ØªÛ Ø¨ÛÚ©Ø§Ø±Ø¯ÛÙÛØª ÙÛÙ Ø¬ÙÙÚµØ§ÙÛØ¯Ø§.""",
                      onPressedBritish: () => speaksentence35("en-GB"),
                      onPressedAmerican: () => speaksentence35("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """Ù¡Ù¢. (ÙØ§ÙÛÚµÚ©Ø§Ø±) Ú©Û Ø¨Û Ù¾ÛØ®Ø´Û ÚØ§Ø³ØªÛÙØ®Û Ø¯ÛØ¨ÛØª"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """We'll be reporting live from Beijing.""",
                      kurdishText: """Ø¨Û Ø´ÛÙÛÛ ÚØ§Ø³ØªÛÙØ®Û ÙÛ Ø¨ÛÛØ¬ÛÙÚ¯ÛÙÛ Ù¾ÛØ®Ø´ Ø¯ÛÚ©ÛÛÙ.""",
                      onPressedBritish: () => speaksentence36("en-GB"),
                      onPressedAmerican: () => speaksentence36("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """The show is going out live.""",
                      kurdishText: """Ù¾ÚÛÚ¯Ø±Ø§ÙÛÚ©Û Ø¨Û Ø´ÛÙÛÛ ÚØ§Ø³ØªÛÙØ®Û Ø¯ÛØ³Øª Ù¾ÛØ¯ÛÚ©Ø§Øª.""",
                      onPressedBritish: () => speaksentence37("en-GB"),
                      onPressedAmerican: () => speaksentence37("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence3800""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence38("en-GB"),
                      onPressedAmerican: () => speaksentence38("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence3900""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence39("en-GB"),
                      onPressedAmerican: () => speaksentence39("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_4000""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence40("en-GB"),
                      onPressedAmerican: () => speaksentence40("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence4100""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence41("en-GB"),
                      onPressedAmerican: () => speaksentence41("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence4200""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence42("en-GB"),
                      onPressedAmerican: () => speaksentence42("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence4300""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence43("en-GB"),
                      onPressedAmerican: () => speaksentence43("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence4400""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence44("en-GB"),
                      onPressedAmerican: () => speaksentence44("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence4500""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence45("en-GB"),
                      onPressedAmerican: () => speaksentence45("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence4600""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence46("en-GB"),
                      onPressedAmerican: () => speaksentence46("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence4700""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence47("en-GB"),
                      onPressedAmerican: () => speaksentence47("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence4800""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence48("en-GB"),
                      onPressedAmerican: () => speaksentence48("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence4900""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence49("en-GB"),
                      onPressedAmerican: () => speaksentence49("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_5000""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence50("en-GB"),
                      onPressedAmerican: () => speaksentence50("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence5100""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence51("en-GB"),
                      onPressedAmerican: () => speaksentence51("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence5200""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence52("en-GB"),
                      onPressedAmerican: () => speaksentence52("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence5300""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence53("en-GB"),
                      onPressedAmerican: () => speaksentence53("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence5400""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence54("en-GB"),
                      onPressedAmerican: () => speaksentence54("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence5500""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence55("en-GB"),
                      onPressedAmerican: () => speaksentence55("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence5600""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence56("en-GB"),
                      onPressedAmerican: () => speaksentence56("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence5700""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence57("en-GB"),
                      onPressedAmerican: () => speaksentence57("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence5800""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence58("en-GB"),
                      onPressedAmerican: () => speaksentence58("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence5900""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence59("en-GB"),
                      onPressedAmerican: () => speaksentence59("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_6000""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence60("en-GB"),
                      onPressedAmerican: () => speaksentence60("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence6100""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence61("en-GB"),
                      onPressedAmerican: () => speaksentence61("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence6200""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence62("en-GB"),
                      onPressedAmerican: () => speaksentence62("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence6300""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence63("en-GB"),
                      onPressedAmerican: () => speaksentence63("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence6400""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence64("en-GB"),
                      onPressedAmerican: () => speaksentence64("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence6500""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence65("en-GB"),
                      onPressedAmerican: () => speaksentence65("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence6600""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence66("en-GB"),
                      onPressedAmerican: () => speaksentence66("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence6700""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence67("en-GB"),
                      onPressedAmerican: () => speaksentence67("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence6800""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence68("en-GB"),
                      onPressedAmerican: () => speaksentence68("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence6900""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence69("en-GB"),
                      onPressedAmerican: () => speaksentence69("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_7000""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence70("en-GB"),
                      onPressedAmerican: () => speaksentence70("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence7100""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence71("en-GB"),
                      onPressedAmerican: () => speaksentence71("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence7200""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence72("en-GB"),
                      onPressedAmerican: () => speaksentence72("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence7300""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence73("en-GB"),
                      onPressedAmerican: () => speaksentence73("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence7400""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence74("en-GB"),
                      onPressedAmerican: () => speaksentence74("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence7500""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence75("en-GB"),
                      onPressedAmerican: () => speaksentence75("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence7600""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence76("en-GB"),
                      onPressedAmerican: () => speaksentence76("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence7700""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence77("en-GB"),
                      onPressedAmerican: () => speaksentence77("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence7800""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence78("en-GB"),
                      onPressedAmerican: () => speaksentence78("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence7900""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence79("en-GB"),
                      onPressedAmerican: () => speaksentence79("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_8000""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence80("en-GB"),
                      onPressedAmerican: () => speaksentence80("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence8100""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence81("en-GB"),
                      onPressedAmerican: () => speaksentence81("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence8200""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence82("en-GB"),
                      onPressedAmerican: () => speaksentence82("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence8300""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence83("en-GB"),
                      onPressedAmerican: () => speaksentence83("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence8400""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence84("en-GB"),
                      onPressedAmerican: () => speaksentence84("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence8500""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence85("en-GB"),
                      onPressedAmerican: () => speaksentence85("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence8600""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence86("en-GB"),
                      onPressedAmerican: () => speaksentence86("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence8700""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence87("en-GB"),
                      onPressedAmerican: () => speaksentence87("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence8800""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence88("en-GB"),
                      onPressedAmerican: () => speaksentence88("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence8900""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence89("en-GB"),
                      onPressedAmerican: () => speaksentence89("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_9000""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence90("en-GB"),
                      onPressedAmerican: () => speaksentence90("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence9100""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence91("en-GB"),
                      onPressedAmerican: () => speaksentence91("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence9200""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence92("en-GB"),
                      onPressedAmerican: () => speaksentence92("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence9300""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence93("en-GB"),
                      onPressedAmerican: () => speaksentence93("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence9400""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence94("en-GB"),
                      onPressedAmerican: () => speaksentence94("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence9500""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence95("en-GB"),
                      onPressedAmerican: () => speaksentence95("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence9600""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence96("en-GB"),
                      onPressedAmerican: () => speaksentence96("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence9700""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence97("en-GB"),
                      onPressedAmerican: () => speaksentence97("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence9800""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence98("en-GB"),
                      onPressedAmerican: () => speaksentence98("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence9900""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence99("en-GB"),
                      onPressedAmerican: () => speaksentence99("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence__10000""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence100("en-GB"),
                      onPressedAmerican: () => speaksentence100("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_10100""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence101("en-GB"),
                      onPressedAmerican: () => speaksentence101("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_10200""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence102("en-GB"),
                      onPressedAmerican: () => speaksentence102("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_10300""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence103("en-GB"),
                      onPressedAmerican: () => speaksentence103("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_10400""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence104("en-GB"),
                      onPressedAmerican: () => speaksentence104("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_10500""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence105("en-GB"),
                      onPressedAmerican: () => speaksentence105("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_10600""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence106("en-GB"),
                      onPressedAmerican: () => speaksentence106("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_10700""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence107("en-GB"),
                      onPressedAmerican: () => speaksentence107("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_10800""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence108("en-GB"),
                      onPressedAmerican: () => speaksentence108("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_10900""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence109("en-GB"),
                      onPressedAmerican: () => speaksentence109("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_11000""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence110("en-GB"),
                      onPressedAmerican: () => speaksentence110("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_11100""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence111("en-GB"),
                      onPressedAmerican: () => speaksentence111("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_11200""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence112("en-GB"),
                      onPressedAmerican: () => speaksentence112("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_11300""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence113("en-GB"),
                      onPressedAmerican: () => speaksentence113("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_11400""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence114("en-GB"),
                      onPressedAmerican: () => speaksentence114("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_11500""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence115("en-GB"),
                      onPressedAmerican: () => speaksentence115("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_11600""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence116("en-GB"),
                      onPressedAmerican: () => speaksentence116("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_11700""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence117("en-GB"),
                      onPressedAmerican: () => speaksentence117("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_11800""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence118("en-GB"),
                      onPressedAmerican: () => speaksentence118("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_11900""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence119("en-GB"),
                      onPressedAmerican: () => speaksentence119("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (ÙØ§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_12000""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence120("en-GB"),
                      onPressedAmerican: () => speaksentence120("en-US"),
                    ),
                  ],
                ),
              ),
              Consumer(
                builder: (context, ref, child) {
                  if (filteredSentences.isEmpty) {
                    return const NoSentencesFromDatabase();
                  } else {
                    return ListView.builder(
                      itemCount: filteredSentences.length,
                      itemBuilder: (context, index) {
                        final sentence = filteredSentences[index];
                        final showDivider = filteredSentences.length > 1 &&
                            index != filteredSentences.length - 1;
                        return CustomSentenceWidget(
                          englishText: sentence['english'].toString(),
                          frenchText: sentence['french'].toString(),
                          keyword: keyword,
                          onPressedBritish: () => speakEnglish(
                            sentence['english'].toString(),
                            languageCode: "en-GB",
                          ),
                          onPressedAmerican: () => speakEnglish(
                            sentence['english'].toString(),
                            languageCode: "en-US",
                          ),
                          showDivider: showDivider,
                        );
                      },
                    );
                  }
                },
              ),
              const YouTubeScroller(
                children: [
                  YoutubeEmbeddingWidget(
                    key: ValueKey(videoIdend),
                    videoId: videoIdend,
                    startSeconds: startSecondsend,
                  ),
                  YoutubeEmbeddingWidget(
                    key: ValueKey(videoIdone),
                    videoId: videoIdone,
                    startSeconds: startSecondsone,
                  ),
                  YoutubeEmbeddingWidget(
                    key: ValueKey(videoIdtwo),
                    videoId: videoIdtwo,
                    startSeconds: startSecondstwo,
                  ),
                  YoutubeEmbeddingWidget(
                    key: ValueKey(videoIdthree),
                    videoId: videoIdthree,
                    startSeconds: startSecondsthree,
                  ),
                  YoutubeEmbeddingWidget(
                    key: ValueKey(videoIdfour),
                    videoId: videoIdfour,
                    startSeconds: startSecondsfour,
                  ),
                  YoutubeEmbeddingWidget(
                    key: ValueKey(videoIdfive),
                    videoId: videoIdfive,
                    startSeconds: startSecondsfive,
                  ),
                ],
              ),
            ],
          ),
        ),
      ),
    );
  }
}

// end WORD_WEB
// end live