import 'package:flutter/material.dart';
import 'package:flutter_tts/flutter_tts.dart';
import 'package:youtube_player_iframe/youtube_player_iframe.dart';
import 'package:zeetionary/constants.dart';

// More sentences is NOT done

// Define the word "back" and provide three example sentences for each meaning. Use Merriam Webster style. Provide at least 3 meanings.

// replace back - replace EnglishEntryback

// replace speakBack - /b√¶k/ - find WORD_WEB

enum TtsState { playing }

class EnglishEntryback extends StatelessWidget {
  // blank divider
  EnglishEntryback({super.key});
  // blank divider
  final FlutterTts flutterTts = FlutterTts();

  Future<void> speakA3(String languageCode) async {
    // DOPSUM: CHANGE speakA3
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(1.0);
    await flutterTts.setSpeechRate(0.5);
    await flutterTts.speak("back"); // DOPSUM: CHANGE TEXT
  }

  Future<void> speakA3s1(String languageCode) async {
    // DOPSUM: CHANGE speakA3
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(1.0);
    await flutterTts.setSpeechRate(0.5);
    await flutterTts
        .speak("He was lying on his back on the sofa."); // DOPSUM: CHANGE TEXT
  }

  Future<void> speakA3s2(String languageCode) async {
    // DOPSUM: CHANGE speakA3
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(1.0);
    await flutterTts.setSpeechRate(0.5);
    await flutterTts.speak(
        "She broke her back in a riding accident."); // DOPSUM: CHANGE TEXT
  }

  Future<void> speakA3s3(String languageCode) async {
    // DOPSUM: CHANGE speakA3
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(1.0);
    await flutterTts.setSpeechRate(0.5);
    await flutterTts.speak(
        "The man was refusing to go to the back of the queue."); // DOPSUM: CHANGE TEXT
  }

  Future<void> speakA3s4(String languageCode) async {
    // DOPSUM: CHANGE speakA3
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(1.0);
    await flutterTts.setSpeechRate(0.5);
    await flutterTts.speak(
        "Take a card and write your name on the back."); // DOPSUM: CHANGE TEXT
  }

  Future<void> speakA3s5(String languageCode) async {
    // DOPSUM: CHANGE speakA3
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(1.0);
    await flutterTts.setSpeechRate(0.5);
    await flutterTts.speak(
        "The arts page is usually towards the back of the newspaper."); // DOPSUM: CHANGE TEXT
  }

  Future<void> speakA3s6(String languageCode) async {
    // DOPSUM: CHANGE speakA3
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(1.0);
    await flutterTts.setSpeechRate(0.5);
    await flutterTts.speak(
        "He put his jacket on the back of his chair (= the part of the chair that you put your back against when you sit on it)."); // DOPSUM: CHANGE TEXT
  }

  Future<void> speakA3s7(String languageCode) async {
    // DOPSUM: CHANGE speakA3
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(1.0);
    await flutterTts.setSpeechRate(0.5);
    await flutterTts.speak("He plays at left back."); // DOPSUM: CHANGE TEXT
  }

  Future<void> speakA3s8(String languageCode) async {
    // DOPSUM: CHANGE speakA3
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(1.0);
    await flutterTts.setSpeechRate(0.5);
    await flutterTts
        .speak("We were sitting in the back row."); // DOPSUM: CHANGE TEXT
  }

  Future<void> speakA3s9(String languageCode) async {
    // DOPSUM: CHANGE speakA3
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(1.0);
    await flutterTts.setSpeechRate(0.5);
    await flutterTts.speak(
        "It was mentioned in a a back issue of the magazine."); // DOPSUM: CHANGE TEXT
  }

  Future<void> speakA3s10(String languageCode) async {
    // DOPSUM: CHANGE speakA3
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(1.0);
    await flutterTts.setSpeechRate(0.5);
    await flutterTts.speak(
        "They owe the staff several thousand in back pay."); // DOPSUM: CHANGE TEXT
  }

  Future<void> speakA3s11(String languageCode) async {
    // DOPSUM: CHANGE speakA3
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(1.0);
    await flutterTts.setSpeechRate(0.5);
    await flutterTts.speak("He'll be back on Monday."); // DOPSUM: CHANGE TEXT
  }

  Future<void> speakA3s12(String languageCode) async {
    // DOPSUM: CHANGE speakA3
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(1.0);
    await flutterTts.setSpeechRate(0.5);
    await flutterTts
        .speak("I moved back to let them pass."); // DOPSUM: CHANGE TEXT
  }

  Future<void> speakA3s13(String languageCode) async {
    // DOPSUM: CHANGE speakA3
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(1.0);
    await flutterTts.setSpeechRate(0.5);
    await flutterTts.speak(
        "We should have turned left five kilometres back."); // DOPSUM: CHANGE TEXT
  }

  Future<void> speakA3s14(String languageCode) async {
    // DOPSUM: CHANGE speakA3
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(1.0);
    await flutterTts.setSpeechRate(0.5);
    await flutterTts
        .speak("If he hits me, I'll hit him back."); // DOPSUM: CHANGE TEXT
  }

  Future<void> speakA3s15(String languageCode) async {
    // DOPSUM: CHANGE speakA3
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(1.0);
    await flutterTts.setSpeechRate(0.5);
    await flutterTts
        .speak("The barriers kept the crowd back."); // DOPSUM: CHANGE TEXT
  }

  Future<void> speakA3s16(String languageCode) async {
    // DOPSUM: CHANGE speakA3
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(1.0);
    await flutterTts.setSpeechRate(0.5);
    await flutterTts
        .speak("The cathedral dates back to 1123."); // DOPSUM: CHANGE TEXT
  }

  Future<void> speakA3s17(String languageCode) async {
    // DOPSUM: CHANGE speakA3
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(1.0);
    await flutterTts.setSpeechRate(0.5);
    await flutterTts.speak(
        "He could no longer hold back his tears."); // DOPSUM: CHANGE TEXT
  }

  Future<void> speakA3s18(String languageCode) async {
    // DOPSUM: CHANGE speakA3
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(1.0);
    await flutterTts.setSpeechRate(0.5);
    await flutterTts.speak("Beards are back."); // DOPSUM: CHANGE TEXT
  }

  Future<void> speakA3s19(String languageCode) async {
    // DOPSUM: CHANGE speakA3
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(1.0);
    await flutterTts.setSpeechRate(0.5);
    await flutterTts.speak(
        "Her parents backed her in her choice of career."); // DOPSUM: CHANGE TEXT
  }

  Future<void> speakA3s20(String languageCode) async {
    // DOPSUM: CHANGE speakA3
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(1.0);
    await flutterTts.setSpeechRate(0.5);
    await flutterTts.speak(
        "Doctors have backed plans to raise the tax on cigarettes."); // DOPSUM: CHANGE TEXT
  }

  Future<void> speakA3s21(String languageCode) async {
    // DOPSUM: CHANGE speakA3
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(1.0);
    await flutterTts.setSpeechRate(0.5);
    await flutterTts.speak(
        "All complaints must be backed by evidence."); // DOPSUM: CHANGE TEXT
  }

  Future<void> speakA3s22(String languageCode) async {
    // DOPSUM: CHANGE speakA3
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(1.0);
    await flutterTts.setSpeechRate(0.5);
    await flutterTts.speak(
        "I backed the winner and won fifty pounds."); // DOPSUM: CHANGE TEXT
  }

  Future<void> speakA3s23(String languageCode) async {
    // DOPSUM: CHANGE speakA3
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(1.0);
    await flutterTts.setSpeechRate(0.5);
    await flutterTts
        .speak("She backed into the garage."); // DOPSUM: CHANGE TEXT
  }

  Future<void> speakA3s24(String languageCode) async {
    // DOPSUM: CHANGE speakA3
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(1.0);
    await flutterTts.setSpeechRate(0.5);
    await flutterTts
        .speak("Each piece is backed with vinyl."); // DOPSUM: CHANGE TEXT
  }

  Future<void> speakA3s25(String languageCode) async {
    // DOPSUM: CHANGE speakA3
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(1.0);
    await flutterTts.setSpeechRate(0.5);
    await flutterTts
        .speak("The house is backed by fields."); // DOPSUM: CHANGE TEXT
  }

  Future<void> speakA3s26(String languageCode) async {
    // DOPSUM: CHANGE speakA3
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(1.0);
    await flutterTts.setSpeechRate(0.5);
    await flutterTts.speak("speakA3s2626"); // DOPSUM: CHANGE TEXT
  }

  Future<void> speakA3s27(String languageCode) async {
    // DOPSUM: CHANGE speakA3
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(1.0);
    await flutterTts.setSpeechRate(0.5);
    await flutterTts.speak("speakA3s2727"); // DOPSUM: CHANGE TEXT
  }

  @override
  Widget build(BuildContext context) {
    return DefaultTabController(
      length: 3, // 2 + VIDEOS FIND: FROM_YOUTUBE_BELOW
      child: Scaffold(
        appBar: const ZeetionaryAppbar(),
        body: Padding(
          padding:
              const EdgeInsets.only(left: 14, top: 4, right: 14, bottom: 4),
          // EdgeInsets.zero,
          child: Column(
            children: [
              SingleChildScrollView(
                child: Column(
                  children: [
                    Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        const Row(
                          children: [
                            EntryTitle(
                                word: "back"), // DOPSUM: CHANGE WORD ENTRY
                            // divvviiider
                          ],
                        ),
                        Row(
                          children: [
                            const IPAofEnglish(
                                text:
                                    "IpaUK: /b√¶k/"), // DOPSUM: WRITE IPA IN BRITISH ENGLISH
                            CustomIconButtonBritish(
                              onPressed: () => speakA3("en-GB"),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            const IPAofEnglish(
                                text:
                                    "IpaUS: /b√¶k/"), // DOPSUM: WRITE IPA IN AMERICAN ENGLISH - find WORD_WEB
                            CustomIconButtonAmerican(
                              onPressed: () => speakA3("en-US"),
                            ),
                          ],
                        ),
                      ],
                    ),
                  ],
                ),
              ),
              const CustomTabBar(
                tabs: [
                  UkIconForTab(),
                  KurdIconForTab(),
                  VideoIconForTab(), // 01
                ],
              ),
              Expanded(
                child: TabBarView(
                  children: [
                    const EnglishMeaning(), // DOPSUM: ENGLISH MEANING IS BELOW
                    SingleChildScrollView(
                      // DOPSUM: KURDISH MEANING
                      child: Column(
                        crossAxisAlignment: CrossAxisAlignment.end,
                        children: [
                          const DividerDefinition(),
                          const DefinitionKurdish(text: """
⁄©Ÿàÿ±ÿØ€å: Ÿæÿ¥ÿ™ÿå Ÿæÿß⁄µŸæÿ¥ÿ™ÿå ÿ¨€é⁄Øÿß€å Ÿæÿß⁄µ(ÿØÿßŸÜ€ïŸà€ï)ÿå ⁄Øÿßÿ≤ÿå ŸÖ€åÿßŸÜ€ïÿå Ÿæÿ¥ÿ™€ïŸà€ïÿå ÿØŸàÿßŸà€ïÿå Ÿæÿßÿ¥ÿå ÿ¶ÿßÿÆÿ±ÿå ÿØŸàÿßŸà€ïÿå ÿ®€ïÿ±⁄Øÿ±€å (ÿ™€ÜŸæ€éŸÜ)ÿå ÿ®ŸÜÿå ÿ¶ÿßÿÆÿ±ÿå ⁄©€Üÿ™ÿß€å€åÿå Ÿæ€éÿ¥ŸàŸàÿå Ÿæ€éÿ¥ÿ™ÿ±ÿå Ÿæ€éÿ¥€åŸÜÿå ⁄ïÿßÿ®ÿ±ÿØŸàŸàÿå ÿØŸàÿßŸà€ïÿå ÿØŸàÿßÿ™ÿ±ÿå Ÿæÿßÿ¥ÿ™ÿ±ÿå Ÿæÿ¥ÿ™€ïŸà€ïÿå ÿØŸàÿßŸà€ïÿå Ÿæ€éÿ¥ÿå ÿØŸàÿß⁄©€ïŸàÿ™ŸàŸàÿå Ÿæÿßÿ¥‚Äå⁄©€ïŸàÿ™ŸàŸàÿå (ÿØ€ïŸÜ⁄Ø‚ÄåŸÜÿßÿ≥€å) ÿØŸàÿßŸà€ïÿå Ÿæÿ¥ÿ™€ïŸà€ïÿå ŸÑ€ï ÿØŸàÿßŸà€ïÿå ŸÑ€ï Ÿæÿ¥ÿ™€ïŸà€ïÿå Ÿæ€éÿ¥ÿå Ÿæ€éÿ¥ÿ™ÿ±ÿå ŸÑ€ïŸà€ïŸæ€éÿ¥ÿå ÿØŸàŸàÿ®ÿßÿ±€ïÿå ÿØ€åÿ≥ÿßŸÜ

Ÿ°. (ŸÜÿßŸà) Ÿæÿ¥ÿ™€å ŸÖÿ±€Ü⁄§"""),
                          Row(
                            children: [
                              const Expanded(
                                child: Column(
                                  children: [
                                    ExampleSentenceEnglish(
                                        text:
                                            "He was lying on his back on the sofa."),
                                    ExampleSentenceKurdish(
                                        text:
                                            "ŸÑ€ïÿ≥€ïÿ± Ÿæÿ¥ÿ™€å ŸÑ€ïÿ≥€ïÿ± ŸÇ€ïŸÜ€ïŸÅ€ï⁄©€ï Ÿæÿß⁄µ⁄©€ïŸàÿ™ÿ®ŸàŸà."),
                                  ],
                                ),
                              ),
                              const CustomSizedBoxForTTS(),
                              Column(
                                children: [
                                  CustomIconButtonBritish(
                                    onPressed: () => speakA3s1("en-GB"),
                                  ),
                                  CustomIconButtonAmerican(
                                    onPressed: () => speakA3s1(// REPLACE: back
                                        "en-US"),
                                  ),
                                ],
                              ),
                            ],
                          ),
                          // const DividerSentences(),
                          const DividerDefinition(),
                          const DefinitionKurdish(text: """
Ÿ¢. (ŸÜÿßŸà) ŸÜÿßŸà€ï⁄ïÿßÿ≥ÿ™€å ÿ¶€éÿ≥⁄©€ï⁄©ÿßŸÜ ŸÑ€ï ŸÜÿßŸà€ï⁄ïÿßÿ≥ÿ™€å Ÿæÿ¥ÿ™"""),
                          Row(
                            children: [
                              const Expanded(
                                child: Column(
                                  children: [
                                    ExampleSentenceEnglish(
                                        text:
                                            "She broke her back in a riding accident."),
                                    ExampleSentenceKurdish(
                                        text:
                                            "Ÿæÿ¥ÿ™€å ÿ¥⁄©ÿß ŸÑ€ï ⁄ïŸàŸàÿØÿßŸà€é⁄©€å ÿ≥Ÿàÿßÿ±⁄Üÿß⁄©€åÿØÿß."),
                                  ],
                                ),
                              ),
                              const CustomSizedBoxForTTS(),
                              Column(
                                children: [
                                  CustomIconButtonBritish(
                                    onPressed: () => speakA3s2("en-GB"),
                                  ),
                                  CustomIconButtonAmerican(
                                    onPressed: () => speakA3s2(// REPLACE: back
                                        "en-US"),
                                  ),
                                ],
                              ),
                            ],
                          ),
                          // const DividerSentences(),
                          const DividerDefinition(),
                          const DefinitionKurdish(text: """
Ÿ£. (ŸÜÿßŸà) ÿ®€ïÿ¥€å ÿØŸàÿßŸà€ï€å ÿ¥Ÿà€éŸÜ€é⁄©ÿå ÿ¶€ïŸà ÿ®€ïÿ¥€ï€å ⁄©€ï ÿØŸàŸàÿ±ÿ™ÿ±€åŸÜ€ï ŸÑ€ï Ÿæ€éÿ¥€ïŸà€ï"""),
                          Row(
                            children: [
                              const Expanded(
                                child: Column(
                                  children: [
                                    ExampleSentenceEnglish(
                                        text:
                                            "The man was refusing to go to the back of the queue."),
                                    ExampleSentenceKurdish(
                                        text:
                                            "Ÿæ€åÿßŸà€ï⁄©€ï ⁄ï€ïÿ™€åÿØ€ï⁄©ÿ±ÿØ€ïŸà€ï ÿ®⁄Ü€éÿ™€ï ÿØŸàÿßŸà€ï€å ⁄ï€åÿ≤€ï⁄©€ï."),
                                  ],
                                ),
                              ),
                              const CustomSizedBoxForTTS(),
                              Column(
                                children: [
                                  CustomIconButtonBritish(
                                    onPressed: () => speakA3s3("en-GB"),
                                  ),
                                  CustomIconButtonAmerican(
                                    onPressed: () => speakA3s3(// REPLACE: back
                                        "en-US"),
                                  ),
                                ],
                              ),
                            ],
                          ),
                          // const DividerSentences(),
                          const DividerDefinition(),
                          const DefinitionKurdish(text: """
Ÿ§. (ŸÜÿßŸà) ÿ¶€ïŸà ÿ®€ïÿ¥€ï€å Ÿæ€ï⁄ï€ï€å€ï⁄© ⁄©€ï ÿØ€ï⁄©€ïŸà€éÿ™€ï Ÿæ€é⁄Ü€ïŸàÿßŸÜ€ï€å ÿ¶€ïŸà ÿ®€ïÿ¥€ï€å ⁄©€ï ⁄Øÿ±ŸÜ⁄Øÿ™ÿ±€åŸÜ ÿ≤ÿßŸÜ€åÿßÿ±€å ŸÑ€ïÿ≥€ïÿ±€ï"""),
                          Row(
                            children: [
                              const Expanded(
                                child: Column(
                                  children: [
                                    ExampleSentenceEnglish(
                                        text:
                                            "Take a card and write your name on the back."),
                                    ExampleSentenceKurdish(
                                        text:
                                            "⁄©ÿßÿ±ÿØ€é⁄© ÿØ€ïÿ±ÿ®⁄©€ï Ÿà ŸÜÿßŸàÿ™ ŸÑ€ï Ÿæÿ¥ÿ™€ïŸà€ïÿ™ ÿ®ŸÜŸàŸàÿ≥€ï."),
                                  ],
                                ),
                              ),
                              const CustomSizedBoxForTTS(),
                              Column(
                                children: [
                                  CustomIconButtonBritish(
                                    onPressed: () => speakA3s4("en-GB"),
                                  ),
                                  CustomIconButtonAmerican(
                                    onPressed: () => speakA3s4(// REPLACE: back
                                        "en-US"),
                                  ),
                                ],
                              ),
                            ],
                          ),
                          // const DividerSentences(),
                          const DividerDefinition(),
                          const DefinitionKurdish(text: """
Ÿ•. (ŸÜÿßŸà) Ÿæ€ï⁄ï€ï⁄©ÿßŸÜ€å ⁄©€Üÿ™ÿß€å€å ⁄©ÿ™€éÿ®€é⁄©ÿå ⁄ï€Ü⁄òŸÜÿßŸÖ€ï€å€ï⁄©ÿå ⁄æÿ™ÿØ"""),
                          Row(
                            children: [
                              const Expanded(
                                child: Column(
                                  children: [
                                    ExampleSentenceEnglish(
                                        text:
                                            "The arts page is usually towards the back of the newspaper."),
                                    ExampleSentenceKurdish(
                                        text:
                                            "Ÿæ€ï⁄ï€ï€å ⁄æŸàŸÜ€ïÿ± ÿ≤€Üÿ±ÿ¨ÿßÿ± ÿØ€ï⁄©€ïŸà€éÿ™€ï ⁄©€Üÿ™ÿß€å€å ⁄ï€Ü⁄òŸÜÿßŸÖ€ï⁄©€ï."),
                                  ],
                                ),
                              ),
                              const CustomSizedBoxForTTS(),
                              Column(
                                children: [
                                  CustomIconButtonBritish(
                                    onPressed: () => speakA3s5("en-GB"),
                                  ),
                                  CustomIconButtonAmerican(
                                    onPressed: () => speakA3s5(// REPLACE: back
                                        "en-US"),
                                  ),
                                ],
                              ),
                            ],
                          ),
                          // const DividerSentences(),
                          const DividerDefinition(),
                          const DefinitionKurdish(text: """
Ÿ¶. (ŸÜÿßŸà) ÿ¶€ïŸà ÿ®€ïÿ¥€ï€å ⁄©ŸàŸàÿ±ÿ≥€å€å€ï⁄© ⁄©€ï Ÿæÿ¥ÿ™€å Ÿæ€éŸà€ï ÿØ€ïÿØ€ï€åÿ™"""),
                          Row(
                            children: [
                              const Expanded(
                                child: Column(
                                  children: [
                                    ExampleSentenceEnglish(
                                        text:
                                            "He put his jacket on the back of his chair (= the part of the chair that you put your back against when you sit on it)."),
                                    ExampleSentenceKurdish(
                                        text:
                                            "⁄Üÿß⁄©€ïÿ™€ï⁄©€ï€å ÿÆÿ≥ÿ™€ï ÿ≥€ïÿ± Ÿæÿ¥ÿ™€å ⁄©ŸàŸàÿ±ÿ≥€å€ï⁄©€ï."),
                                  ],
                                ),
                              ),
                              const CustomSizedBoxForTTS(),
                              Column(
                                children: [
                                  CustomIconButtonBritish(
                                    onPressed: () => speakA3s6("en-GB"),
                                  ),
                                  CustomIconButtonAmerican(
                                    onPressed: () => speakA3s6(// REPLACE: back
                                        "en-US"),
                                  ),
                                ],
                              ),
                            ],
                          ),
                          // const DividerSentences(),
                          const DividerDefinition(),
                          const DefinitionKurdish(text: """
Ÿß. (ŸÜÿßŸà) €åÿßÿ±€åÿ≤ÿßŸÜ€å ÿ®€ïÿ±⁄Øÿ±€å⁄©ÿßÿ±"""),
                          Row(
                            children: [
                              const Expanded(
                                child: Column(
                                  children: [
                                    ExampleSentenceEnglish(
                                        text: "He plays at left back."),
                                    ExampleSentenceKurdish(
                                        text:
                                            "ŸÑ€ï ÿ®€ïÿ¥€å ⁄Ü€ïŸæ€å ÿ®€ïÿ±⁄Øÿ±€å €åÿßÿ±€å ÿØ€ï⁄©ÿßÿ™."),
                                  ],
                                ),
                              ),
                              const CustomSizedBoxForTTS(),
                              Column(
                                children: [
                                  CustomIconButtonBritish(
                                    onPressed: () => speakA3s7("en-GB"),
                                  ),
                                  CustomIconButtonAmerican(
                                    onPressed: () => speakA3s7(// REPLACE: back
                                        "en-US"),
                                  ),
                                ],
                              ),
                            ],
                          ),
                          // const DividerSentences(),
                          const DividerDefinition(),
                          const DefinitionKurdish(text: """
Ÿ®. (⁄æÿßŸà€ï⁄µŸÜÿßŸà) ⁄©€ïŸàÿ™ŸÜ€ï ÿ®€ïÿ¥€å Ÿæÿ¥ÿ™€ïŸà€ï"""),
                          Row(
                            children: [
                              const Expanded(
                                child: Column(
                                  children: [
                                    ExampleSentenceEnglish(
                                        text:
                                            "We were sitting in the back row."),
                                    ExampleSentenceKurdish(
                                        text: "ŸÑ€ï ⁄ï€åÿ≤€å ÿØŸàÿßŸà€ï ÿØÿßŸÜ€åÿ¥ÿ™ÿ®ŸàŸà€åŸÜ."),
                                  ],
                                ),
                              ),
                              const CustomSizedBoxForTTS(),
                              Column(
                                children: [
                                  CustomIconButtonBritish(
                                    onPressed: () => speakA3s8("en-GB"),
                                  ),
                                  CustomIconButtonAmerican(
                                    onPressed: () => speakA3s8(// REPLACE: back
                                        "en-US"),
                                  ),
                                ],
                              ),
                            ],
                          ),
                          // const DividerSentences(),
                          const DividerDefinition(),
                          const DefinitionKurdish(text: """
Ÿ©. (⁄æÿßŸà€ï⁄µŸÜÿßŸà) ŸÑ€ï ⁄ïÿßÿ®ÿ±ÿØŸàŸàÿØÿß"""),
                          Row(
                            children: [
                              const Expanded(
                                child: Column(
                                  children: [
                                    ExampleSentenceEnglish(
                                        text:
                                            "It was mentioned in a a back issue of the magazine."),
                                    ExampleSentenceKurdish(
                                        text:
                                            "ŸÑ€ï ⁄òŸÖÿßÿ±€ï€å€ï⁄©€å Ÿæ€éÿ¥ŸàŸàÿ™ÿ±€å ⁄Ø€Ü⁄§ÿßÿ±€ï⁄©€ïÿØÿß ÿ®ÿßÿ≥⁄©ÿ±ÿß."),
                                  ],
                                ),
                              ),
                              const CustomSizedBoxForTTS(),
                              Column(
                                children: [
                                  CustomIconButtonBritish(
                                    onPressed: () => speakA3s9("en-GB"),
                                  ),
                                  CustomIconButtonAmerican(
                                    onPressed: () => speakA3s9(// REPLACE: back
                                        "en-US"),
                                  ),
                                ],
                              ),
                            ],
                          ),
                          // const DividerSentences(),
                          const DividerDefinition(),
                          const DefinitionKurdish(text: """
Ÿ°Ÿ†. (⁄æÿßŸà€ï⁄µŸÜÿßŸà) ÿ®⁄ï€ï Ÿæÿßÿ±€ï€å€ï⁄© ⁄©€ï ÿØÿ±€ïŸÜ⁄Øÿ™ÿ± ŸÑ€ï ⁄©ÿßÿ™€å ÿÆ€Ü€å ÿØ€ïÿØÿ±€éÿ™"""),
                          Row(
                            children: [
                              const Expanded(
                                child: Column(
                                  children: [
                                    ExampleSentenceEnglish(
                                        text:
                                            "They owe the staff several thousand in back pay."),
                                    ExampleSentenceKurdish(
                                        text:
                                            "⁄Ü€ïŸÜÿØ ⁄æ€ïÿ≤ÿßÿ±€é⁄©€å ŸÖŸàŸà⁄Ü€ï€å ŸÜ€ïÿØÿ±ÿßŸà€å ÿ≥ÿ™ÿßŸÅ€ï⁄©€ï ŸÇ€ïÿ±ÿ≤ÿßÿ±ŸÜ."),
                                  ],
                                ),
                              ),
                              const CustomSizedBoxForTTS(),
                              Column(
                                children: [
                                  CustomIconButtonBritish(
                                    onPressed: () => speakA3s10("en-GB"),
                                  ),
                                  CustomIconButtonAmerican(
                                    onPressed: () => speakA3s10(// REPLACE: back
                                        "en-US"),
                                  ),
                                ],
                              ),
                            ],
                          ),
                          // const DividerSentences(),
                          const DividerDefinition(),
                          const DefinitionKurdish(text: """
Ÿ°Ÿ°. (⁄æÿßŸà€ï⁄µŸÜÿßŸà) ÿØ€ïŸÜ⁄Ø€é⁄© ⁄©€ï ÿØÿ±ŸàŸàÿ≥ÿ™‚ÄåÿØ€ï⁄©ÿ±€éÿ™ ÿ®€ïŸà€ï€å Ÿæÿ¥ÿ™€ïŸà€ï€å ÿ≤ŸÖÿßŸÜ ÿ®€ïÿ±ÿ≤ÿ™ÿ± ÿØ€ïÿ®€éÿ™ ŸÑ€ï Ÿæ€éÿ¥€ïŸà€ï€å ÿ≤ŸÖÿßŸÜÿå ÿ®€Ü ŸÜŸÖŸàŸàŸÜ€ï ÿØ€ïŸÜ⁄Ø€å /…ëÀê/ ŸÑ€ï ÿ¶€åŸÜ⁄ØŸÑ€åÿ≤€åÿØÿß"""),
                          const DividerDefinition(),
                          const DefinitionKurdish(text: """
Ÿ°Ÿ°. (⁄æÿßŸà€ï⁄µ⁄©ÿßÿ±) ⁄Ø€ï⁄ïÿßŸÜ€ïŸà€ï ÿ®€Ü ŸÇ€ÜŸÜÿßÿ∫ÿå ÿ¥Ÿà€éŸÜÿå ⁄ÜÿßŸÑÿß⁄©€åÿå €åÿßŸÜ ÿØ€ÜÿÆ€å Ÿæ€éÿ¥ŸàŸà"""),
                          Row(
                            children: [
                              const Expanded(
                                child: Column(
                                  children: [
                                    ExampleSentenceEnglish(
                                        text: "He'll be back on Monday."),
                                    ExampleSentenceKurdish(
                                        text: "⁄ï€Ü⁄ò€å ÿØŸàŸàÿ¥€ïŸÖŸÖ€ï ÿØ€ï⁄Ø€ï⁄ï€éÿ™€ïŸà€ï."),
                                  ],
                                ),
                              ),
                              const CustomSizedBoxForTTS(),
                              Column(
                                children: [
                                  CustomIconButtonBritish(
                                    onPressed: () => speakA3s11("en-GB"),
                                  ),
                                  CustomIconButtonAmerican(
                                    onPressed: () => speakA3s11(// REPLACE: back
                                        "en-US"),
                                  ),
                                ],
                              ),
                            ],
                          ),
                          // const DividerSentences(),
                          const DividerDefinition(),
                          const DefinitionKurdish(text: """
Ÿ°Ÿ£. (⁄æÿßŸà€ï⁄µ⁄©ÿßÿ±) ŸÑ€ï ÿØŸàÿßŸà€ï"""),
                          Row(
                            children: [
                              const Expanded(
                                child: Column(
                                  children: [
                                    ExampleSentenceEnglish(
                                        text: "I moved back to let them pass."),
                                    ExampleSentenceKurdish(
                                        text: "⁄æÿßÿ™ŸÖ€ï ÿØŸàÿßŸà€ï Ÿà ⁄ï€é⁄Ø€ïŸÖÿØÿß ÿ™€éŸæ€ï⁄ïŸÜ."),
                                  ],
                                ),
                              ),
                              const CustomSizedBoxForTTS(),
                              Column(
                                children: [
                                  CustomIconButtonBritish(
                                    onPressed: () => speakA3s12("en-GB"),
                                  ),
                                  CustomIconButtonAmerican(
                                    onPressed: () => speakA3s12(// REPLACE: back
                                        "en-US"),
                                  ),
                                ],
                              ),
                            ],
                          ),
                          // const DividerSentences(),
                          const DividerDefinition(),
                          const DefinitionKurdish(text: """
Ÿ°Ÿ§. (⁄æÿßŸà€ï⁄µ⁄©ÿßÿ±) ŸÑ€ï ÿ¥Ÿà€éŸÜ€é⁄©€å Ÿæ€éÿ¥ŸàŸàÿ™ÿ±"""),
                          Row(
                            children: [
                              const Expanded(
                                child: Column(
                                  children: [
                                    ExampleSentenceEnglish(
                                        text:
                                            "We should have turned left five kilometres back."),
                                    ExampleSentenceKurdish(
                                        text:
                                            "Ÿæ€éÿ¥ Ÿæ€éŸÜÿ¨ ⁄©€åŸÑ€ÜŸÖ€ïÿ™ÿ± ÿØ€ïÿ®ŸàŸà ÿ®€ï ⁄Ü€ïŸæÿØÿß ŸÑÿßŸÖÿßŸÜ ÿØÿßÿ®ÿß."),
                                  ],
                                ),
                              ),
                              const CustomSizedBoxForTTS(),
                              Column(
                                children: [
                                  CustomIconButtonBritish(
                                    onPressed: () => speakA3s13("en-GB"),
                                  ),
                                  CustomIconButtonAmerican(
                                    onPressed: () => speakA3s13(// REPLACE: back
                                        "en-US"),
                                  ),
                                ],
                              ),
                            ],
                          ),
                          // const DividerSentences(),
                          const DividerDefinition(),
                          const DefinitionKurdish(text: """
Ÿ°Ÿ•. (⁄æÿßŸà€ï⁄µ⁄©ÿßÿ±) ŸÑ€ï Ÿà€ï⁄µÿßŸÖÿØÿß"""),
                          Row(
                            children: [
                              const Expanded(
                                child: Column(
                                  children: [
                                    ExampleSentenceEnglish(
                                        text:
                                            "If he hits me, I'll hit him back."),
                                    ExampleSentenceKurdish(
                                        text: "ÿ¶€ï⁄Ø€ïÿ± ŸÑ€éŸÖÿØÿßÿå ŸÑ€é€åÿ¶€ïÿØ€ïŸÖ€ïŸà€ï."),
                                  ],
                                ),
                              ),
                              const CustomSizedBoxForTTS(),
                              Column(
                                children: [
                                  CustomIconButtonBritish(
                                    onPressed: () => speakA3s14("en-GB"),
                                  ),
                                  CustomIconButtonAmerican(
                                    onPressed: () => speakA3s14(// REPLACE: back
                                        "en-US"),
                                  ),
                                ],
                              ),
                            ],
                          ),
                          // const DividerSentences(),
                          const DividerDefinition(),
                          const DefinitionKurdish(text: """
Ÿ°Ÿ¶. (⁄æÿßŸà€ï⁄µ⁄©ÿßÿ±) ÿØŸàŸàÿ± ŸÑ€ï ÿ¥ÿ™€é⁄©"""),
                          Row(
                            children: [
                              const Expanded(
                                child: Column(
                                  children: [
                                    ExampleSentenceEnglish(
                                        text:
                                            "The barriers kept the crowd back."),
                                    ExampleSentenceKurdish(
                                        text:
                                            "ÿ®€ïÿ±ÿ®€ïÿ≥ÿ™€ï⁄©ÿßŸÜ ÿ¨€ïŸÖÿßŸà€ïÿ±€ï⁄©€ï€åÿßŸÜ ÿØŸàŸàÿ± ⁄æ€éÿ¥ÿ™ÿ®ŸàŸà€å€ïŸà€ï."),
                                  ],
                                ),
                              ),
                              const CustomSizedBoxForTTS(),
                              Column(
                                children: [
                                  CustomIconButtonBritish(
                                    onPressed: () => speakA3s15("en-GB"),
                                  ),
                                  CustomIconButtonAmerican(
                                    onPressed: () => speakA3s15(// REPLACE: back
                                        "en-US"),
                                  ),
                                ],
                              ),
                            ],
                          ),
                          // const DividerSentences(),
                          const DividerDefinition(),
                          const DefinitionKurdish(text: """
Ÿ°Ÿß. (⁄æÿßŸà€ï⁄µ⁄©ÿßÿ±) Ÿæ€éÿ¥ ÿ¶€éÿ≥ÿ™ÿß"""),
                          Row(
                            children: [
                              const Expanded(
                                child: Column(
                                  children: [
                                    ExampleSentenceEnglish(
                                        text:
                                            "The cathedral dates back to 1123."),
                                    ExampleSentenceKurdish(
                                        text:
                                            "⁄©⁄µ€éÿ≥ÿß⁄©€ï ÿ®€Ü ÿ≥ÿß⁄µ€å Ÿ°Ÿ°Ÿ¢Ÿ£ ÿØ€ï⁄Ø€ï⁄ï€éÿ™€ïŸà€ï."),
                                  ],
                                ),
                              ),
                              const CustomSizedBoxForTTS(),
                              Column(
                                children: [
                                  CustomIconButtonBritish(
                                    onPressed: () => speakA3s16("en-GB"),
                                  ),
                                  CustomIconButtonAmerican(
                                    onPressed: () => speakA3s16(// REPLACE: back
                                        "en-US"),
                                  ),
                                ],
                              ),
                            ],
                          ),
                          // const DividerSentences(),
                          const DividerDefinition(),
                          const DefinitionKurdish(text: """
Ÿ°Ÿ®. (⁄æÿßŸà€ï⁄µ⁄©ÿßÿ±) ŸÑ€ï⁄ò€éÿ± ⁄©€ÜŸÜÿ™ÿ±€Ü⁄µ"""),
                          Row(
                            children: [
                              const Expanded(
                                child: Column(
                                  children: [
                                    ExampleSentenceEnglish(
                                        text:
                                            "He could no longer hold back his tears."),
                                    ExampleSentenceKurdish(
                                        text:
                                            "⁄Ü€åÿ™ÿ± ŸÜ€ï€åÿØ€ïÿ™ŸàÿßŸÜ€å ŸÅÿ±ŸÖ€éÿ≥⁄©€ï⁄©ÿßŸÜ€å ⁄©€ÜŸÜÿ™ÿ±€Ü⁄µ ÿ®⁄©ÿßÿ™."),
                                  ],
                                ),
                              ),
                              const CustomSizedBoxForTTS(),
                              Column(
                                children: [
                                  CustomIconButtonBritish(
                                    onPressed: () => speakA3s17("en-GB"),
                                  ),
                                  CustomIconButtonAmerican(
                                    onPressed: () => speakA3s17(// REPLACE: back
                                        "en-US"),
                                  ),
                                ],
                              ),
                            ],
                          ),
                          // const DividerSentences(),
                          const DividerDefinition(),
                          const DefinitionKurdish(text: """
Ÿ°Ÿ©. (⁄æÿßŸà€ï⁄µ⁄©ÿßÿ±) ÿ¥ÿ™€é⁄© ⁄©€ï ÿØŸàŸàÿ®ÿßÿ±€ï ÿ®ŸàŸà€ï ÿ®€ï ŸÖ€ÜÿØ€ï"""),
                          Row(
                            children: [
                              const Expanded(
                                child: Column(
                                  children: [
                                    ExampleSentenceEnglish(
                                        text: "Beards are back."),
                                    ExampleSentenceKurdish(
                                        text: "⁄ï€åÿ¥ ÿØŸàŸàÿ®ÿßÿ±€ï ÿ®ŸàŸà€ï ÿ®€ï ÿ®ÿßŸà."),
                                  ],
                                ),
                              ),
                              const CustomSizedBoxForTTS(),
                              Column(
                                children: [
                                  CustomIconButtonBritish(
                                    onPressed: () => speakA3s18("en-GB"),
                                  ),
                                  CustomIconButtonAmerican(
                                    onPressed: () => speakA3s18(// REPLACE: back
                                        "en-US"),
                                  ),
                                ],
                              ),
                            ],
                          ),
                          // const DividerSentences(),
                          const DividerDefinition(),
                          const DefinitionKurdish(text: """
Ÿ¢Ÿ†. (⁄©ÿ±ÿØÿßÿ±) ⁄æÿßŸÜÿØÿßŸÜ €åÿßŸÜ €åÿßÿ±ŸÖ€ïÿ™€åÿØÿßŸÜ"""),
                          Row(
                            children: [
                              const Expanded(
                                child: Column(
                                  children: [
                                    ExampleSentenceEnglish(
                                        text:
                                            "Her parents backed her in her choice of career."),
                                    ExampleSentenceKurdish(
                                        text:
                                            "ÿØÿß€å⁄© Ÿà ÿ®ÿßŸà⁄©€å Ÿæÿß⁄µŸæÿ¥ÿ™€åÿßŸÜ ⁄©ÿ±ÿØ ŸÑ€ï ⁄æ€ï⁄µÿ®⁄òÿßÿ±ÿØŸÜ€å ⁄©ÿßÿ±€ï⁄©€ï€å."),
                                  ],
                                ),
                              ),
                              const CustomSizedBoxForTTS(),
                              Column(
                                children: [
                                  CustomIconButtonBritish(
                                    onPressed: () => speakA3s19("en-GB"),
                                  ),
                                  CustomIconButtonAmerican(
                                    onPressed: () => speakA3s19(// REPLACE: back
                                        "en-US"),
                                  ),
                                ],
                              ),
                            ],
                          ),
                          // const DividerSentences(),
                          const DividerDefinition(),
                          const DefinitionKurdish(text: """
Ÿ¢Ÿ°. (⁄©ÿ±ÿØÿßÿ±) Ÿæÿß⁄µŸæÿ¥ÿ™€å‚Äå⁄©ÿ±ÿØŸÜ Ÿà ⁄ïÿßÿ≤€åÿ®ŸàŸàŸÜ ŸÑ€ï⁄Ø€ï⁄µ ⁄©€ïÿ≥€é⁄© """),
                          Row(
                            children: [
                              const Expanded(
                                child: Column(
                                  children: [
                                    ExampleSentenceEnglish(
                                        text:
                                            "Doctors have backed plans to raise the tax on cigarettes."),
                                    ExampleSentenceKurdish(
                                        text:
                                            "Ÿæÿ≤€åÿ¥⁄©ÿßŸÜ Ÿæÿß⁄µŸæÿ¥ÿ™€å ŸæŸÑÿßŸÜ€å ÿ®€ïÿ±ÿ≤⁄©ÿ±ÿØŸÜ€ïŸà€ï€å ÿ®ÿßÿ¨ŸÜ ŸÑ€ïÿ≥€ïÿ± ÿ¨⁄Ø€ïÿ±€ï."),
                                  ],
                                ),
                              ),
                              const CustomSizedBoxForTTS(),
                              Column(
                                children: [
                                  CustomIconButtonBritish(
                                    onPressed: () => speakA3s20("en-GB"),
                                  ),
                                  CustomIconButtonAmerican(
                                    onPressed: () => speakA3s20(// REPLACE: back
                                        "en-US"),
                                  ),
                                ],
                              ),
                            ],
                          ),
                          // const DividerSentences(),
                          const DividerDefinition(),
                          const DefinitionKurdish(text: """
Ÿ¢Ÿ¢. (⁄©ÿ±ÿØÿßÿ±) €åÿßÿ±ŸÖ€ïÿ™€åÿØÿßŸÜ ŸÑ€ï ÿ≥€ïŸÑŸÖÿßŸÜÿØŸÜ€å ⁄ïÿßÿ≥ÿ™€å€å€ïÿ™€å ÿ¥ÿ™€é⁄© """),
                          Row(
                            children: [
                              const Expanded(
                                child: Column(
                                  children: [
                                    ExampleSentenceEnglish(
                                        text:
                                            "All complaints must be backed by evidence."),
                                    ExampleSentenceKurdish(
                                        text:
                                            "⁄æ€ïŸÖŸàŸà ŸÜÿß⁄ï€ïÿ≤ÿß€å€å€ï⁄© ÿØ€ïÿ®€éÿ™ ÿ®€ï⁄µ⁄Ø€ï€å Ÿæÿ¥ÿ™€åŸàÿßŸÜ€å ⁄æ€ïÿ®€éÿ™."),
                                  ],
                                ),
                              ),
                              const CustomSizedBoxForTTS(),
                              Column(
                                children: [
                                  CustomIconButtonBritish(
                                    onPressed: () => speakA3s21("en-GB"),
                                  ),
                                  CustomIconButtonAmerican(
                                    onPressed: () => speakA3s21(// REPLACE: back
                                        "en-US"),
                                  ),
                                ],
                              ),
                            ],
                          ),
                          // const DividerSentences(),
                          const DividerDefinition(),
                          const DefinitionKurdish(text: """
Ÿ¢Ÿ£. (⁄©ÿ±ÿØÿßÿ±) ÿÆÿ≥ÿ™ŸÜ€ï ⁄Øÿ±€ïŸà€å Ÿæÿßÿ±€ï ŸÑ€ï ÿ®€ïÿ±⁄ò€ïŸà€ïŸÜÿØ€å ÿ¶€ïÿ≥Ÿæ€é⁄© ŸÑ€ï Ÿæ€éÿ¥ÿ®⁄ï⁄©€é€å€ï⁄©ÿØÿß €åÿßŸÜ ÿ™€åŸÖ€é⁄© ŸÑ€ï Ÿæÿß⁄µ€ïŸàÿßŸÜ€éÿ™€å€å€ï⁄©ÿØÿß"""),
                          Row(
                            children: [
                              const Expanded(
                                child: Column(
                                  children: [
                                    ExampleSentenceEnglish(
                                        text:
                                            "I backed the winner and won fifty pounds."),
                                    ExampleSentenceKurdish(
                                        text:
                                            "⁄Øÿ±€ïŸàŸÖ ŸÑ€ïÿ≥€ïÿ± ÿ®ÿ±ÿßŸà€ï⁄©€ï ⁄©ÿ±ÿØ Ÿà Ÿæ€ïŸÜÿ¨ÿß ŸæÿßŸà€ïŸÜÿØŸÖ ÿ®ÿ±ÿØ€ïŸà€ï."),
                                  ],
                                ),
                              ),
                              const CustomSizedBoxForTTS(),
                              Column(
                                children: [
                                  CustomIconButtonBritish(
                                    onPressed: () => speakA3s22("en-GB"),
                                  ),
                                  CustomIconButtonAmerican(
                                    onPressed: () => speakA3s22(// REPLACE: back
                                        "en-US"),
                                  ),
                                ],
                              ),
                            ],
                          ),
                          // const DividerSentences(),
                          const DividerDefinition(),
                          const DefinitionKurdish(text: """
Ÿ¢Ÿ§. (⁄©ÿ±ÿØÿßÿ±) Ÿàÿß ŸÑ€ï ÿ¥ÿ™€é⁄© ÿ®⁄©€ï€åÿ™ ÿ®€Ü ÿØŸàÿßŸà€ï ÿ®ÿ¨ŸàŸà⁄µ€éÿ™"""),
                          Row(
                            children: [
                              const Expanded(
                                child: Column(
                                  children: [
                                    ExampleSentenceEnglish(
                                        text: "She backed into the garage."),
                                    ExampleSentenceKurdish(
                                        text: "ÿ®€ï⁄©€å ⁄©ÿ±ÿØ€ï ⁄Ø€ïÿ±ÿßÿ¨€ï⁄©€ï."),
                                  ],
                                ),
                              ),
                              const CustomSizedBoxForTTS(),
                              Column(
                                children: [
                                  CustomIconButtonBritish(
                                    onPressed: () => speakA3s23("en-GB"),
                                  ),
                                  CustomIconButtonAmerican(
                                    onPressed: () => speakA3s23(// REPLACE: back
                                        "en-US"),
                                  ),
                                ],
                              ),
                            ],
                          ),
                          // const DividerSentences(),
                          const DividerDefinition(),
                          const DefinitionKurdish(text: """
Ÿ¢Ÿ•. (⁄©ÿ±ÿØÿßÿ±) ÿØÿßŸæ€Üÿ¥€åŸÜ€å Ÿæÿ¥ÿ™€ïŸà€ï€å ÿ¥ÿ™€é⁄© ÿ®€Ü Ÿæÿßÿ±ÿßÿ≥ÿ™ŸÜ€å"""),
                          Row(
                            children: [
                              const Expanded(
                                child: Column(
                                  children: [
                                    ExampleSentenceEnglish(
                                        text:
                                            "Each piece is backed with vinyl."),
                                    ExampleSentenceKurdish(
                                        text:
                                            "⁄æ€ïÿ± Ÿæÿßÿ±⁄Ü€ï€å€ï⁄© ÿ®€ï ⁄§€åŸÜ€åŸÑ ÿØÿßŸæ€Üÿ¥ÿ±ÿßŸà€ï."),
                                  ],
                                ),
                              ),
                              const CustomSizedBoxForTTS(),
                              Column(
                                children: [
                                  CustomIconButtonBritish(
                                    onPressed: () => speakA3s24("en-GB"),
                                  ),
                                  CustomIconButtonAmerican(
                                    onPressed: () => speakA3s24(// REPLACE: back
                                        "en-US"),
                                  ),
                                ],
                              ),
                            ],
                          ),
                          // const DividerSentences(),
                          const DividerDefinition(),
                          const DefinitionKurdish(text: """
Ÿ¢Ÿ¶. (⁄©ÿ±ÿØÿßÿ±) ÿ®ŸàŸàŸÜ ŸÑ€ï Ÿæÿ¥ÿ™€ïŸà€ï€å ÿ¥ÿ™€é⁄©"""),
                          Row(
                            children: [
                              const Expanded(
                                child: Column(
                                  children: [
                                    ExampleSentenceEnglish(
                                        text: "The house is backed by fields."),
                                    ExampleSentenceKurdish(
                                        text: "ÿÆÿßŸÜŸàŸà€ï⁄©€ï ⁄©€é⁄µ⁄Ø€ï€å ŸÑ€ï Ÿæÿ¥ÿ™€ïŸà€ï€å€ï."),
                                  ],
                                ),
                              ),
                              const CustomSizedBoxForTTS(),
                              Column(
                                children: [
                                  CustomIconButtonBritish(
                                    onPressed: () => speakA3s25("en-GB"),
                                  ),
                                  CustomIconButtonAmerican(
                                    onPressed: () => speakA3s25(// REPLACE: back
                                        "en-US"),
                                  ),
                                ],
                              ),
                            ],
                          ),
                          // const DividerSentences(),
                          // const DividerDefinition(),
                        ],
                      ),
                    ),
                    YouTubeScroller(
                      children: [
                        YoutubeEmbeddedone(), // DOPSUM: DOPSUM_WRITE_A_SENTENCE
                        YoutubeEmbeddedtwo(),
                        YoutubeEmbeddedthree(),
                        YoutubeEmbeddedfour(),
                        YoutubeEmbeddedfive(),
                        YoutubeEmbeddedsix(), // FIND: VideoIconForTab
                        YoutubeEmbeddedseven(),
                        YoutubeEmbeddedeight(),
                        YoutubeEmbeddednine(),
                        YoutubeEmbeddedten(),
                        YoutubeEmbeddedeleven(),
                        YoutubeEmbeddedtwelve(),
                        // YoutubeEmbeddedthirteen(),
                        // YoutubeEmbeddeddfourteen(),
                        // YoutubeEmbeddedfifteen(),
                      ],
                    ),
                  ],
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

// DOPSUM: ENGLISH MEANING

class EnglishMeaning extends StatefulWidget {
  const EnglishMeaning({super.key});

  @override
  State<EnglishMeaning> createState() => _EnglishMeaningState();
}

class _EnglishMeaningState extends State<EnglishMeaning> {
  FlutterTts flutterTts = FlutterTts();
  bool isSpeaking = false;

  Future<void> startSpeaking(
      String languageCode, EnglishMeaningConst englishMeaningConst) async {
    // Extract text from EnglishMeaningConst and store it in textToSpeak
    String textToSpeak = """
${englishMeaningConst.text}
""";

    await flutterTts.setLanguage(languageCode);
    await flutterTts.speak(textToSpeak);

    // Update the state to reflect that TTS is in progress
    setState(() {
      isSpeaking = true;
    });
  }

  // Function to stop TTS
  Future<void> stopSpeaking() async {
    await flutterTts.stop();

    // Update the state to reflect that TTS is stopped
    setState(() {
      isSpeaking = false;
    });
  }

  // Create an instance of EnglishMeaningConst with the desired text
  final EnglishMeaningConst englishMeaningConst = const EnglishMeaningConst(
    text: """
- Noun: back
1. The posterior part of a human (or animal) body from the neck to the end of the spine (= dorsum)
"his back was nicely tanned";
 
2. The side that goes last or is not normally seen (= rear)
"he wrote the date on the back of the photograph";
 
3. The part of something that is furthest from the normal viewer (= rear)
"he stood at the back of the stage";
 
4. (football) a person who plays in the backfield
 
5. The series of vertebrae forming the axis of the skeleton and protecting the spinal cord (= spinal column, vertebral column, spine, backbone, rachis [technical])
"the fall broke his back";
 
6. The protective covering on the front, back, and spine of a book (= binding, book binding, cover)
 
7. The part of a garment that covers the back of your body
"they pinned a 'kick me' sign on his back"
 
8. A support that you can lean against while sitting (= backrest)
"the back of the dental chair was adjustable";
 
9. (American football) the position of a player on a football team who is stationed behind the line of scrimmage

- Adverb: back
1. In, to or toward a former location
"she went back to her parents' house"
 
2. At or to or toward the back or rear (= backward, backwards, rearward, rearwards)
"he moved back";
 
3. In, to or toward an original condition
"he went back to sleep"
 
4. In, to or toward a past time (= backward)
"set the clocks back an hour"; "never look back";
 
5. In reply
"he wrote back three days later"
 
6. In repayment or retaliation
"we paid back everything we had borrowed"; "he hit me and I hit him back"; "I was kept in after school for talking back to the teacher"

- Verb: back (derived forms: backing, backs, backed)
1. Pick one person to give support and approval to in a particular role (= endorse, indorse, plump for, plunk for, support)
"I backed Kennedy in 1960";
 
2. Travel backward
"back into the driveway"; "The car backed up and hit the tree"
 
3. Give support or one's approval to (= second, endorse, indorse)
"I can't back this plan";
 
4. Cause to travel backward
"back the car into the parking spot"
 
5. Support financial backing for
"back this enterprise"
 
6. Be in back of
"My garage backs their yard"
 
7. Gamble on something (= bet on, gage [archaic], stake, game, punt)
"Which horse are you backing?";
 
8. Shift to a counterclockwise direction
"the wind backed"
 
9. Establish as valid or genuine (= back up)
"Can you back up your claims?";
 
10. Strengthen by providing with a back or backing

- Adjective: back
1. Related to or located at the back
"the back yard"; "the back entrance"
 
2. Located at or near the back of an animal (= hind, hinder)
"back legs";
 
3. Of an earlier date
"back issues of the magazine"
 
4. Far from the main area or way
"she knows a back route"
""",
  );

  @override
  Widget build(BuildContext context) {
    return SingleChildScrollView(
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          const DividerDefinition(),
          // Using the EnglishButtonTTS class
          EnglishButtonTTS(
            onBritishPressed: (languageCode) =>
                startSpeaking(languageCode, englishMeaningConst),
            onAmericanPressed: (languageCode) =>
                startSpeaking(languageCode, englishMeaningConst),
            onStopPressed: stopSpeaking,
          ),
          // Speaker icon for American English
          englishMeaningConst,
        ],
      ),
    );
  }
}

// DOPSUM: FIRST YOUTUBE VIDEO

class YoutubeEmbeddedone extends StatelessWidget {
  YoutubeEmbeddedone({super.key});

  final _controller = YoutubePlayerController.fromVideoId(
    videoId: '21Z4RIOFhMA',
    // startSeconds: 222222222222222,
    autoPlay: true,
    params: const YoutubePlayerParams(
      enableCaption: true,
      captionLanguage: 'en',
      showControls: false,
      strictRelatedVideos: true,
    ),
  );

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SingleChildScrollView(
        child: YouTubeContainerDesignNew(controller: _controller),
      ),
    );
  }
}

class YoutubeEmbeddedtwo extends StatelessWidget {
  YoutubeEmbeddedtwo({super.key});

  final _controller = YoutubePlayerController.fromVideoId(
    videoId: 'idWpZ63isMo',
    startSeconds: 14,
    autoPlay: true,
    params: const YoutubePlayerParams(
      enableCaption: true,
      captionLanguage: 'en',
      showControls: false,
      strictRelatedVideos: true,
    ),
  );

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SingleChildScrollView(
        child: YouTubeContainerDesignNew(controller: _controller),
      ),
    );
  }
}

class YoutubeEmbeddedthree extends StatelessWidget {
  YoutubeEmbeddedthree({super.key});

  final _controller = YoutubePlayerController.fromVideoId(
    videoId: 'RNg3Z21BQo0',
    startSeconds: 13,
    autoPlay: true,
    params: const YoutubePlayerParams(
      enableCaption: true,
      captionLanguage: 'en',
      showControls: false,
      strictRelatedVideos: true,
    ),
  );

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SingleChildScrollView(
        child: YouTubeContainerDesignNew(controller: _controller),
      ),
    );
  }
}

class YoutubeEmbeddedfour extends StatelessWidget {
  YoutubeEmbeddedfour({super.key});

  final _controller = YoutubePlayerController.fromVideoId(
    videoId: 'LrWv8-NEwV8',
    startSeconds: 55,
    autoPlay: true,
    params: const YoutubePlayerParams(
      enableCaption: true,
      captionLanguage: 'en',
      showControls: false,
      strictRelatedVideos: true,
    ),
  );

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SingleChildScrollView(
        child: YouTubeContainerDesignNew(controller: _controller),
      ),
    );
  }
}

class YoutubeEmbeddedfive extends StatelessWidget {
  YoutubeEmbeddedfive({super.key});

  final _controller = YoutubePlayerController.fromVideoId(
    videoId: '7jD5Gkh4K34',
    startSeconds: 258,
    autoPlay: true,
    params: const YoutubePlayerParams(
      enableCaption: true,
      captionLanguage: 'en',
      showControls: false,
      strictRelatedVideos: true,
    ),
  );

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SingleChildScrollView(
        child: YouTubeContainerDesignNew(controller: _controller),
      ),
    );
  }
}

class YoutubeEmbeddedsix extends StatelessWidget {
  YoutubeEmbeddedsix({super.key});

  final _controller = YoutubePlayerController.fromVideoId(
    videoId: 'IqDbCsldMx0',
    startSeconds: 253,
    autoPlay: true,
    params: const YoutubePlayerParams(
      enableCaption: true,
      captionLanguage: 'en',
      showControls: false,
      strictRelatedVideos: true,
    ),
  );

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SingleChildScrollView(
        child: YouTubeContainerDesignNew(controller: _controller),
      ),
    );
  }
}

class YoutubeEmbeddedseven extends StatelessWidget {
  YoutubeEmbeddedseven({super.key});

  final _controller = YoutubePlayerController.fromVideoId(
    videoId: 'uhIdijSrnVc',
    startSeconds: 287,
    autoPlay: true,
    params: const YoutubePlayerParams(
      enableCaption: true,
      captionLanguage: 'en',
      showControls: false,
      strictRelatedVideos: true,
    ),
  );

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SingleChildScrollView(
        child: YouTubeContainerDesignNew(controller: _controller),
      ),
    );
  }
}

class YoutubeEmbeddedeight extends StatelessWidget {
  YoutubeEmbeddedeight({super.key});

  final _controller = YoutubePlayerController.fromVideoId(
    videoId: 'X3-gKPNyrTA',
    startSeconds: 17,
    autoPlay: true,
    params: const YoutubePlayerParams(
      enableCaption: true,
      captionLanguage: 'en',
      showControls: false,
      strictRelatedVideos: true,
    ),
  );

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SingleChildScrollView(
        child: YouTubeContainerDesignNew(controller: _controller),
      ),
    );
  }
}

class YoutubeEmbeddednine extends StatelessWidget {
  YoutubeEmbeddednine({super.key});

  final _controller = YoutubePlayerController.fromVideoId(
    videoId: 'PlBaIvxsqys',
    // startSeconds: 222222222222222,
    autoPlay: true,
    params: const YoutubePlayerParams(
      enableCaption: true,
      captionLanguage: 'en',
      showControls: false,
      strictRelatedVideos: true,
    ),
  );

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SingleChildScrollView(
        child: YouTubeContainerDesignNew(controller: _controller),
      ),
    );
  }
}

class YoutubeEmbeddedten extends StatelessWidget {
  YoutubeEmbeddedten({super.key});

  final _controller = YoutubePlayerController.fromVideoId(
    videoId: 'ZVJ5oLS74mc',
    startSeconds: 96,
    autoPlay: true,
    params: const YoutubePlayerParams(
      enableCaption: true,
      captionLanguage: 'en',
      showControls: false,
      strictRelatedVideos: true,
    ),
  );

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SingleChildScrollView(
        child: YouTubeContainerDesignNew(controller: _controller),
      ),
    );
  }
}

class YoutubeEmbeddedeleven extends StatelessWidget {
  YoutubeEmbeddedeleven({super.key});

  final _controller = YoutubePlayerController.fromVideoId(
    videoId: 'bMLbnsKGRfo',
    startSeconds: 156,
    autoPlay: true,
    params: const YoutubePlayerParams(
      enableCaption: true,
      captionLanguage: 'en',
      showControls: false,
      strictRelatedVideos: true,
    ),
  );

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SingleChildScrollView(
        child: YouTubeContainerDesignNew(controller: _controller),
      ),
    );
  }
}

class YoutubeEmbeddedtwelve extends StatelessWidget {
  YoutubeEmbeddedtwelve({super.key});

  final _controller = YoutubePlayerController.fromVideoId(
    videoId: 'A7afwIxo5lE',
    startSeconds: 41,
    autoPlay: true,
    params: const YoutubePlayerParams(
      enableCaption: true,
      captionLanguage: 'en',
      showControls: false,
      strictRelatedVideos: true,
    ),
  );

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SingleChildScrollView(
        child: YouTubeContainerDesignNew(controller: _controller),
      ),
    );
  }
}



// end

// end back // TODO Implement this library.
