import 'package:flutter/material.dart';
import 'package:flutter_tts/flutter_tts.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:zeetionary/constants.dart';

enum TtsState { playing }

class EnglishEntryjust extends StatefulWidget {
  const EnglishEntryjust({super.key});

  @override
  State<EnglishEntryjust> createState() => _EnglishEntryjustState();
}

class _EnglishEntryjustState extends State<EnglishEntryjust> {
  @override
  void initState() {
    super.initState();
    flutterTts = FlutterTts();
    flutterTts.setLanguage("en-GB");
    flutterTts.setLanguage("en-US");
    fetchSentences();
  }

  FlutterTts flutterTts = FlutterTts();

  bool isSpeaking = false;

  Future<void> startSpeaking(
      String languageCode, EnglishMeaningConst englishMeaningConst) async {
    String textToSpeak = """
${englishMeaningConst.text}
""";

    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak(textToSpeak);

    setState(() {
      isSpeaking = true;
    });
  }

  Future<void> stopSpeaking() async {
    await flutterTts.stop();

    setState(() {
      isSpeaking = false;
    });
  }

  final EnglishMeaningConst englishMeaningConst = const EnglishMeaningConst(
    text: """
- Adverb: just
1. And nothing more (- merely, simply, only, but)
"just a scratch";
 
2. Indicating exactness or preciseness (- precisely, exactly, properly)
"he was doing just what she had told him to do"; "it was just as he said--the jewel was gone"; "it has just enough salt";
 
3. Only a moment ago (- just now)
"he has just arrived"; "the sun just now came out";
 
4. (used for emphasis) absolutely (- simply)
"I just can't take it anymore"; "he was just grand as Romeo";
 
5. Only a very short time before (- barely, hardly, scarcely, scarce)
 
6. Possibly (indicating a slight chance of something being true)
"it might just happen"
 
7. Exactly at this moment or the moment described
"we've just finished painting the walls, so don't touch them"
 
8. By a little (- barely)
"I only just caught the bus"; "he finished the marathon in just under 3 hours"; "the batter just missed being hit";

- Adjective: just (Derived forms: juster, justest)
1. Used especially of what is legally or ethically right or proper or fitting
"a just and lasting peace"; "a kind and just man"; "a just reward"; "his just inheritance"
 
2. Fair to all parties as dictated by reason and conscience (- equitable)
"just treatment of all citizens";
 
3. Free from favouritism or self-interest or bias or deception; conforming with established standards or rules (- fair)
"a just referee";
 
4. Of moral excellence (- good, upright)
"a just cause";
""",
  );

  final String keyword = "just";
  List<Map<String, dynamic>> filteredSentences = [];

  Future<void> fetchSentences() async {
    final sentences =
        await DatabaseUtils.instance.fetchFilteredSentences(keyword: keyword);
    setState(() {
      filteredSentences = sentences;
    });
  }

  void speakEnglish(String text, {String? languageCode}) async {
    await flutterTts.setLanguage(languageCode ?? "en-GB");
    await flutterTts.speak(text);
  }

  Future<void> speakheadword(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""just""");
  }

  Future<void> speaksentence1(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""There is just one method that might work.""");
  }

  Future<void> speaksentence2(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""I decided to learn Japanese just for fun.""");
  }

  Future<void> speaksentence3(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""I waited an hour just to see you.""");
  }

  Future<void> speaksentence4(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""It was just an ordinary day.""");
  }

  Future<void> speaksentence5(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""I just want to help.""");
  }

  Future<void> speaksentence6(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""I just think you should wait a bit.""");
  }

  Future<void> speaksentence7(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""We'll just have to hope for the best.""");
  }

  Future<void> speaksentence8(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""I'm just saying there are risks involved.""");
  }

  Future<void> speaksentence9(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""I'm just glad you're OK.""");
  }

  Future<void> speaksentence10(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""That's just plain stupid.""");
  }

  Future<void> speaksentence11(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""This essay is just not good enough.""");
  }

  Future<void> speaksentence12(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak(
        """I didn't mean to upset you. It's just that I had to tell somebody.""");
  }

  Future<void> speaksentence13(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""You've just missed her.""");
  }

  Future<void> speaksentence14(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""I only just caught the train.""");
  }

  Future<void> speaksentence15(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""Inflation fell to just over 4 per cent.""");
  }

  Future<void> speaksentence16(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""The painting sold for just under Â£6 million.""");
  }

  Future<void> speaksentence17(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""I got here just after nine.""");
  }

  Future<void> speaksentence18(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""They must have got there just before I did.""");
  }

  Future<void> speaksentence19(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""He visited Guatemala just prior to his death.""");
  }

  Future<void> speaksentence20(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""I've just heard the news.""");
  }

  Future<void> speaksentence21(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""When you arrived, he had only just left.""");
  }

  Future<void> speaksentence22(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts
        .speak("""She has just been telling us about her trip to Rome.""");
  }

  Future<void> speaksentence23(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""I just saw him a moment ago.""");
  }

  Future<void> speaksentence24(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""She was just here.""");
  }

  Future<void> speaksentence25(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts
        .speak("""Just last week it was snowing and now it's 25 degrees.""");
  }

  Future<void> speaksentence26(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""I'm just finishing my book.""");
  }

  Future<void> speaksentence27(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak(
        """I was just beginning to enjoy myself when we had to leave.""");
  }

  Future<void> speaksentence28(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""I'm just off.""");
  }

  Future<void> speaksentence29(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""This jacket is just my size.""");
  }

  Future<void> speaksentence30(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts
        .speak("""With him, everything always has to be just right.""");
  }

  Future<void> speaksentence31(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak(
        """This gadget is just the thing for getting those nails out.""");
  }

  Future<void> speaksentence32(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""Just my luck. My phone needs recharging.""");
  }

  Future<void> speaksentence33(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""You're just in time.""");
  }

  Future<void> speaksentence34(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""She looks just like her mother.""");
  }

  Future<void> speaksentence35(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""It's just what I wanted!""");
  }

  Future<void> speaksentence36(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""It's just as I thought.""");
  }

  Future<void> speaksentence37(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""It's just on six.""");
  }

  Future<void> speaksentence38(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""The clock struck six just as I arrived.""");
  }

  Future<void> speaksentence39(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""She's just as smart as her sister.""");
  }

  Future<void> speaksentence40(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""You can get there just as cheaply by plane.""");
  }

  Future<void> speaksentence41(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""The water's just about to boil.""");
  }

  Future<void> speaksentence42(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts
        .speak("""I was just going to tell you when you interrupted.""");
  }

  Future<void> speaksentence43(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""The food was just wonderful!""");
  }

  Future<void> speaksentence44(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""The trip was just amazing!""");
  }

  Future<void> speaksentence45(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""I can just imagine his reaction.""");
  }

  Future<void> speaksentence46(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""Just listen to what I'm saying, will you!""");
  }

  Future<void> speaksentence47(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""Could you just help me with this box, please?""");
  }

  Future<void> speaksentence48(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""I've just got a few things to do first.""");
  }

  Future<void> speaksentence49(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts
        .speak("""Try asking Mikeâhe might just know the answer.""");
  }

  Future<void> speaksentence50(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""I think it was a just decision.""");
  }

  Future<void> speaksentence51(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts
        .speak("""Of course we all strive for a just and humane society.""");
  }

  Future<void> speaksentence52(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""The law must be seen to be just.""");
  }

  Future<void> speaksentence53(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""People trust the just to make fair decisions.""");
  }

  Future<void> speaksentence54(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""I think she got her just deserts.""");
  }

  Future<void> speaksentence55(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""They're campaigning for a just settlement.""");
  }

  Future<void> speaksentence56(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence5600""");
  }

  Future<void> speaksentence57(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence5700""");
  }

  Future<void> speaksentence58(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence5800""");
  }

  Future<void> speaksentence59(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence5900""");
  }

  Future<void> speaksentence60(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_6000""");
  }

  Future<void> speaksentence61(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence6100""");
  }

  Future<void> speaksentence62(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence6200""");
  }

  Future<void> speaksentence63(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence6300""");
  }

  Future<void> speaksentence64(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence6400""");
  }

  Future<void> speaksentence65(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence6500""");
  }

  Future<void> speaksentence66(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence6600""");
  }

  Future<void> speaksentence67(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence6700""");
  }

  Future<void> speaksentence68(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence6800""");
  }

  Future<void> speaksentence69(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence6900""");
  }

  Future<void> speaksentence70(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_7000""");
  }

  Future<void> speaksentence71(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence7100""");
  }

  Future<void> speaksentence72(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence7200""");
  }

  Future<void> speaksentence73(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence7300""");
  }

  Future<void> speaksentence74(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence7400""");
  }

  Future<void> speaksentence75(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence7500""");
  }

  Future<void> speaksentence76(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence7600""");
  }

  Future<void> speaksentence77(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence7700""");
  }

  Future<void> speaksentence78(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence7800""");
  }

  Future<void> speaksentence79(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence7900""");
  }

  Future<void> speaksentence80(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_8000""");
  }

  Future<void> speaksentence81(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence8100""");
  }

  Future<void> speaksentence82(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence8200""");
  }

  Future<void> speaksentence83(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence8300""");
  }

  Future<void> speaksentence84(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence8400""");
  }

  Future<void> speaksentence85(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence8500""");
  }

  Future<void> speaksentence86(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence8600""");
  }

  Future<void> speaksentence87(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence8700""");
  }

  Future<void> speaksentence88(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence8800""");
  }

  Future<void> speaksentence89(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence8900""");
  }

  Future<void> speaksentence90(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_9000""");
  }

  Future<void> speaksentence91(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence9100""");
  }

  Future<void> speaksentence92(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence9200""");
  }

  Future<void> speaksentence93(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence9300""");
  }

  Future<void> speaksentence94(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence9400""");
  }

  Future<void> speaksentence95(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence9500""");
  }

  Future<void> speaksentence96(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence9600""");
  }

  Future<void> speaksentence97(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence9700""");
  }

  Future<void> speaksentence98(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence9800""");
  }

  Future<void> speaksentence99(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence9900""");
  }

  Future<void> speaksentence100(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence__10000""");
  }

  Future<void> speaksentence101(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_10100""");
  }

  Future<void> speaksentence102(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_10200""");
  }

  Future<void> speaksentence103(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_10300""");
  }

  Future<void> speaksentence104(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_10400""");
  }

  Future<void> speaksentence105(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_10500""");
  }

  Future<void> speaksentence106(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_10600""");
  }

  Future<void> speaksentence107(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_10700""");
  }

  Future<void> speaksentence108(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_10800""");
  }

  Future<void> speaksentence109(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_10900""");
  }

  Future<void> speaksentence110(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_11000""");
  }

  Future<void> speaksentence111(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_11100""");
  }

  Future<void> speaksentence112(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_11200""");
  }

  Future<void> speaksentence113(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_11300""");
  }

  Future<void> speaksentence114(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_11400""");
  }

  Future<void> speaksentence115(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_11500""");
  }

  Future<void> speaksentence116(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_11600""");
  }

  Future<void> speaksentence117(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_11700""");
  }

  Future<void> speaksentence118(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_11800""");
  }

  Future<void> speaksentence119(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_11900""");
  }

  Future<void> speaksentence120(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_12000""");
  }

  @override
  Widget build(BuildContext context) {
    // 188888880002200000000000
    const String videoIdend = 'https://youtu.be/_Z0ZQT0FttM?t=1403';
    const double startSecondsend = 0;
    const String videoIdone = 'https://youtu.be/zI1w05Uzi5s?t=81';
    const double startSecondsone = 0;
    const String videoIdtwo = 'https://youtu.be/CpyoNaR2vfs?t=317';
    const double startSecondstwo = 0;
    const String videoIdthree = 'https://youtu.be/jtoq3S48Pgk?t=508';
    const double startSecondsthree = 0;
    const String videoIdfour = 'https://youtu.be/ecEoMQnmklI?t=199';
    const double startSecondsfour = 0;
    const String videoIdfive = 'https://youtu.be/nHW6Mu_2tZ0?t=3';
    const double startSecondsfive = 0;

    return DefaultTabController(
      length: 4,
      child: Scaffold(
        body: NestedScrollView(
          headerSliverBuilder: (context, innerBoxIsScrolled) {
            return [
              CustomSliverAppBar(
                flexibleSpace: FlexibleSpaceBar(
                  background: SingleChildScrollView(
                    child: EntryPageColumn(
                      word: """just""",
                      // alsoEnglishWord: "also: just",
                      britshText: """IpaUK: /dÊÊst/""",
                      americanText: """IpaUS: /dÊÊst/""",
                      onPressedBritish: () => speakheadword("en-GB"),
                      onPressedAmerican: () => speakheadword("en-US"),
                    ),
                  ),
                ),
                bottom: const CustomTabBarNew(
                  tabs: [
                    UkIconForTab(),
                    KurdIconForTab(),
                    SentencesIconForTab(),
                    VideoIconForTab(),
                  ],
                ),
              ),
            ];
          },
          body: TabBarView(
            children: [
              SingleChildScrollView(
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    EnglishButtonTTS(
                      onBritishPressed: (languageCode) =>
                          startSpeaking(languageCode, englishMeaningConst),
                      onAmericanPressed: (languageCode) =>
                          startSpeaking(languageCode, englishMeaningConst),
                      onStopPressed: stopSpeaking,
                    ),
                    englishMeaningConst,
                  ],
                ),
              ),
              SingleChildScrollView(
                child: CustomColumnWidget(
                  children: [
                    const KurdishVocabulary(text: """
Ú©ÙØ±Ø¯Û: Ø¯Ø§Ø¯Ù¾ÛØ±ÙÛØ±Ø Ø¯Ø§Ø¯Ú¯ÛØ±Ø Ø¨ÛØ¯Ø§Ø¯Ø Ø¯Ø§Ø¯ÙÛÙØ¯Ø Ø¯Ø§Ø¯Ú¯ÛØ±Ø§ÙÛØ ÙØ§ÙÛÚ¯Ø±Ø§ÙÛØ Ø¨ÛâÙØ§ÛÛÙØ§ÙÛØ Ø¯Ø§Ø¯Ù¾ÛØ±ÙÛØ±Ø§ÙÛØ Ø¯Ø§Ø¯ÙÛÙØ¯Ø§ÙÛØ ÚÛÙØ§Ø Ø¨ÛØ±Ø­ÛÙØ Ø¨Û Ø­ÛÙØ Ø¬ÛÛ Ø®ÛÛØ Ø´ÛØ§ÙØ Ø¨ÛØ¬ÛØ Ù¾ÚØ¨ÛÙ¾ÛØ³ØªØ ÚÛØ±Ø§ÙÛØ ÙÛÚÛÚ©ÛØ Ø¦Ø§ÙÚµØ§ÙÛØ Ø¯Ø±ÙØ³ØªØ ÚØ§Ø³ØªØ	Ø¯Ø±ÙØ³ØªØ ÙÛØ± Ø¦ÛØ³ØªØ§Ø ÙÛÙ Ú©Ø§ØªÛØ¯Ø§Ø ØªØ§Ø²ÛØ Ø¦ÛØ³ØªØ§Ø ÙÙÙÚ©ÛØ	Ú©ÛÙÛØ Ø¨ÚÛØ Ú©ÛÙÛ ÙÛÙÛ Ù¾ÛØ´Ø Ø¨ÚÛ ÙÛÙÛ Ù¾ÛØ´Ø Ø¯ÛØ³Ø¨ÛØ¬ÛØ ÙÛÚÛÙÛØ	ØªÛÙÛØ§Ø ÙÛÙÛØªØ ØªÛÙÛØ	Ø¨Û Ø³ÛØ®ØªÛØ Ø¨Û Ø²ÛØ­ÙÛØªØ	Ø¨Û Ø²ÛØ±Ø ÙØ²ÛÚ© Ø¨ÛØ ÙØ²ÛÚ©ÛÛØ ÙÛ Ø¯ÛÙØ±ÙØ¨ÛØ±ÛØ Ø¨ÛÙØ§Û ÙØ²ÛÚ©ÛâÛÛÙÛØ	Ø¨Û ÚØ§Ø³ØªÛØ Ø¨ÛÚØ§Ø³Øª
"""),
// With short examples define "just", please follow LX instructions
                    const DefinitionKurdish(text: """Ù¡. (Ú¾Ø§ÙÛÚµÚ©Ø§Ø±) ØªÛÙÙØ§"""),
                    SentencesRow(
                      englishText:
                          """There is just one method that might work.""",
                      kurdishText: """ØªÛÙÙØ§ ÛÛÚ© ÙÛÛÛ Ø¦ÛÚ¯ÛØ±Û ÙÛØ¨ÛØª Ú©Ø§Ø± Ø¨Ú©Ø§Øª.""",
                      onPressedBritish: () => speaksentence1("en-GB"),
                      onPressedAmerican: () => speaksentence1("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText:
                          """I decided to learn Japanese just for fun.""",
                      kurdishText: """Ø¨ÚÛØ§Ø±ÙØ¯Ø§ ÙÛØ±Û ÚØ§Ù¾ÛÙÛ Ø¨Ù ØªÛÙÙØ§ Ø¨Û Ø®ÛØ´Û.""",
                      onPressedBritish: () => speaksentence2("en-GB"),
                      onPressedAmerican: () => speaksentence2("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """I waited an hour just to see you.""",
                      kurdishText: """ÛÛÚ© Ú©Ø§ØªÚÙÛØ± ÙÛØ³ØªØ§Ù ØªÛÙÙØ§ Ø¨Û Ø¨ÛÙÛÙØª.""",
                      onPressedBritish: () => speaksentence3("en-GB"),
                      onPressedAmerican: () => speaksentence3("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(
                        text: """Ù¢. (Ú¾Ø§ÙÛÚµÚ©Ø§Ø±) Ø¨Û Ø³Ø§Ø¯ÛÛÛ"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """It was just an ordinary day.""",
                      kurdishText: """ØªÛÙÙØ§ ÚÛÚÛÚ©Û Ø¦Ø§Ø³Ø§ÛÛ Ø¨ÙÙ.""",
                      onPressedBritish: () => speaksentence4("en-GB"),
                      onPressedAmerican: () => speaksentence4("en-US"),
                    ),
                    Column(
                      children: [
                        MyExpansionTile(
                          children: [
                            const DividerDefinition(),
                            const DefinitionKurdish(
                                text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                            const DividerSentences(),
                            SentencesRow(
                              englishText: """I just want to help.""",
                              kurdishText: """ØªÛÙÙØ§ Ø¯ÛÙÛÙÛØª ÛØ§Ø±ÙÛØªÛ Ø¨Ø¯ÛÙ.""",
                              onPressedBritish: () => speaksentence5("en-GB"),
                              onPressedAmerican: () => speaksentence5("en-US"),
                            ),
                            const DividerDefinition(),
                            const DefinitionKurdish(
                                text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                            const DividerSentences(),
                            SentencesRow(
                              englishText:
                                  """I just think you should wait a bit.""",
                              kurdishText:
                                  """ØªÛÙÙØ§ Ù¾ÛÙÙØ§ÛÛ Ø¯ÛØ¨ÛØª Ú©ÛÙÛÚ© ÚØ§ÙÛÚÛ Ø¨ÛØª.""",
                              onPressedBritish: () => speaksentence6("en-GB"),
                              onPressedAmerican: () => speaksentence6("en-US"),
                            ),
                            const DividerDefinition(),
                            const DefinitionKurdish(
                                text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                            const DividerSentences(),
                            SentencesRow(
                              englishText:
                                  """We'll just have to hope for the best.""",
                              kurdishText:
                                  """ØªÛÙÙØ§ Ø¯ÛØ¨ÛØª ÙÛÙØ§Û Ø¨Ø§Ø´ØªØ±ÛÙ Ø¨Ø®ÙØ§Ø²ÛÙ.""",
                              onPressedBritish: () => speaksentence7("en-GB"),
                              onPressedAmerican: () => speaksentence7("en-US"),
                            ),
                            const DividerDefinition(),
                            const DefinitionKurdish(
                                text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                            const DividerSentences(),
                            SentencesRow(
                              englishText:
                                  """I'm just saying there are risks involved.""",
                              kurdishText: """ØªÛÙÙØ§ Ø¯ÛÚµÛÙ ÙÛØªØ±Ø³ÛÛ ÙÛÚ¯ÛÚµÛ.""",
                              onPressedBritish: () => speaksentence8("en-GB"),
                              onPressedAmerican: () => speaksentence8("en-US"),
                            ),
                            const DividerDefinition(),
                            const DefinitionKurdish(
                                text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                            const DividerSentences(),
                            SentencesRow(
                              englishText: """I'm just glad you're OK.""",
                              kurdishText: """ØªÛÙÙØ§ Ø¯ÚµØ®ÛØ´Ù Ú©Û Ø¨Ø§Ø´ÛØª.""",
                              onPressedBritish: () => speaksentence9("en-GB"),
                              onPressedAmerican: () => speaksentence9("en-US"),
                            ),
                            const DividerDefinition(),
                            const DefinitionKurdish(
                                text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                            const DividerSentences(),
                            SentencesRow(
                              englishText: """That's just plain stupid.""",
                              kurdishText: """Ø¦ÛÙÛ ØªÛÙÙØ§ Ú¯ÛÙÚÛÛÛÛ.""",
                              onPressedBritish: () => speaksentence10("en-GB"),
                              onPressedAmerican: () => speaksentence10("en-US"),
                            ),
                            const DividerDefinition(),
                            const DefinitionKurdish(
                                text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                            const DividerSentences(),
                            SentencesRow(
                              englishText:
                                  """This essay is just not good enough.""",
                              kurdishText:
                                  """Ø¯Ø§ÚØ´ØªÙÛÚ©Û ÙÛØ± Ø¦ÛÙÛÛÛ Ø²ÛØ± Ø¨Ø§Ø´ ÙÛÛÛ.""",
                              onPressedBritish: () => speaksentence11("en-GB"),
                              onPressedAmerican: () => speaksentence11("en-US"),
                            ),
                            const DividerDefinition(),
                            const DefinitionKurdish(
                                text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                            const DividerSentences(),
                            SentencesRow(
                              englishText:
                                  """I didn't mean to upset you. It's just that I had to tell somebody.""",
                              kurdishText:
                                  """ÙÛÙØ¯ÛÙÛØ³Øª Ø¨ÛØ²Ø§Ø±Øª Ø¨Ú©ÛÙ. ØªÛÙÙØ§ Ø¦ÛÙÛ Ø¨ÙÙ Ø¯ÛØ¨ÙÙ Ø¨Û Ú©ÛØ³ÛÚ©Ù Ú¯ÙØªØ¨Ø§.""",
                              onPressedBritish: () => speaksentence12("en-GB"),
                              onPressedAmerican: () => speaksentence12("en-US"),
                            ),
                          ],
                        ),
                      ],
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(
                        text: """Ù£. (Ú¾Ø§ÙÛÚµÚ©Ø§Ø±) Ø¨Û ÚÛÚÛÛÛÚ©Û Ú©ÛÙ"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """You've just missed her.""",
                      kurdishText: """ØªÛÙÙØ§ Ú©ÛÙÛÚ© Ø¨ÛØ±Øª Ú©Ø±Ø¯ÙÙÛ.""",
                      onPressedBritish: () => speaksentence13("en-GB"),
                      onPressedAmerican: () => speaksentence13("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """I only just caught the train.""",
                      kurdishText:
                          """ØªÛÙÙØ§ Ø¨Û Ø¦Ø§Ø³ØªÛÙÚ¯ Ú¯ÛØ´ØªÙ Ø¨Û Ø´ÛÙÛÙØ¯ÛÙÛØ±ÛÚ©Û.""",
                      onPressedBritish: () => speaksentence14("en-GB"),
                      onPressedAmerican: () => speaksentence14("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText:
                          """Inflation fell to just over 4 per cent.""",
                      kurdishText: """ÙÛÚµØ§ÙØ³Ø§Ù Ú©ÛÙØªÛ Ø®ÙØ§Ø± ØªÛÙÙØ§ ÚÙØ§Ø± ÙÛ Ø³ÛØ¯.""",
                      onPressedBritish: () => speaksentence15("en-GB"),
                      onPressedAmerican: () => speaksentence15("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText:
                          """The painting sold for just under Â£6 million.""",
                      kurdishText:
                          """ØªØ§Ø¨ÙÛÚ©Û ÙØ±ÛØ´Ø±Ø§ Ø¨Û ØªÛÙÙØ§ Ú©ÛÙÛÚ© ÙÛ Ø´ÛØ´ ÙÙÛÛÙ Ù¾Ø§ÙÛÙØ¯.""",
                      onPressedBritish: () => speaksentence16("en-GB"),
                      onPressedAmerican: () => speaksentence16("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """I got here just after nine.""",
                      kurdishText: """ØªÛÙÙØ§ Ú©ÛÙÛÚ© Ø¯ÙØ§Û ÙÛ Ú¯ÛØ´ØªÙ.""",
                      onPressedBritish: () => speaksentence17("en-GB"),
                      onPressedAmerican: () => speaksentence17("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText:
                          """They must have got there just before I did.""",
                      kurdishText: """Ø¯ÛØ¨ÛØª Ù¾ÛØ´ ØªÛÙÙØ§ Ú©ÛÙÛÚ© Ù¾ÛØ´ Ø¦ÛÙÛ Ú¯ÛØ´ØªØ¨Ù.""",
                      onPressedBritish: () => speaksentence18("en-GB"),
                      onPressedAmerican: () => speaksentence18("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText:
                          """He visited Guatemala just prior to his death.""",
                      kurdishText: """Ú¯ÛØ´ØªÛ Ú¯ÙØ§ØªÛÙØ§ÙØ§ ØªÛÙÙØ§ Ú©ÛÙÛÚ© Ù¾ÛØ´ ÙÛØ±Ú¯Û.""",
                      onPressedBritish: () => speaksentence19("en-GB"),
                      onPressedAmerican: () => speaksentence19("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(
                        text:
                            """Ù¤. (Ú¾Ø§ÙÛÚµÚ©Ø§Ø±) Ø¨ÛÚ©Ø§Ø±Ø¯ÛØª Ø¨Û Ú¯ÙØªÙÛ Ø¦ÛÙÛÛ ØªÛ/Ú©ÛØ³ÛÚ© Ø´ØªÛÚ©Øª Ú©Ø±Ø¯ ÛØ§Ù Ø´ØªÛÚ© ÚÙÙÛØ¯Ø§ ØªÛÙÙØ§ Ù¾ÛØ´ ÙØ§ÙÛÛÛÚ©Û Ú©ÛÙ"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """I've just heard the news.""",
                      kurdishText: """ØªØ§Ø²Û ÙÛÙØ§ÚµÛÚ©ÛÙ Ø¨ÛØ³ØªÙÙÛ.""",
                      onPressedBritish: () => speaksentence20("en-GB"),
                      onPressedAmerican: () => speaksentence20("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText:
                          """When you arrived, he had only just left.""",
                      kurdishText: """Ú©Û ØªÛ Ú¯ÛØ´ØªÛØªØ Ø¦ÛÙ ØªØ§Ø²Û ÚÙÙØ¨ÙÙ.""",
                      onPressedBritish: () => speaksentence21("en-GB"),
                      onPressedAmerican: () => speaksentence21("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText:
                          """She has just been telling us about her trip to Rome.""",
                      kurdishText:
                          """ØªÛÙÙØ§ ØªØ§Ø²Û Ù¾ÛÙØ§ÙÛ Ú¯ÙÙØªØ¨ÙÙ ÙÛØ³ÛØ± Ú¯ÛØ´ØªÛÚ©ÛÛ Ø¨Û ÚÛÙØ§.""",
                      onPressedBritish: () => speaksentence22("en-GB"),
                      onPressedAmerican: () => speaksentence22("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """I just saw him a moment ago.""",
                      kurdishText: """ØªÛÙÙØ§ Ø³Ø§ØªÛÚ© Ù¾ÛØ´ Ø¦ÛØ³ØªØ§ Ø¯ÛÙ.""",
                      onPressedBritish: () => speaksentence23("en-GB"),
                      onPressedAmerican: () => speaksentence23("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """She was just here.""",
                      kurdishText: """Ú©ÛÙÛÚ© Ù¾ÛØ´ Ø¦ÛØ³ØªØ§ ÙÛØ±Û Ø¨ÙÙ.""",
                      onPressedBritish: () => speaksentence24("en-GB"),
                      onPressedAmerican: () => speaksentence24("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText:
                          """Just last week it was snowing and now it's 25 degrees.""",
                      kurdishText:
                          """ØªÛÙÙØ§ ÙÛÙØªÛÛ Ù¾ÛØ´ÙÙ Ø¨ÙÙ Ú©Û Ø¨ÛÙØ± Ø¨Ø§Ø±ÛÙ Ø¨ÙÙ Ù Ø¦ÛØ³ØªØ§ Ù¢Ù¥ Ù¾ÙÛÛÛ.""",
                      onPressedBritish: () => speaksentence25("en-GB"),
                      onPressedAmerican: () => speaksentence25("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(
                        text: """Ù¥. (Ú¾Ø§ÙÛÚµÚ©Ø§Ø±) Ø¦ÛØ³ØªØ§Ø ÙÛÙ/ÙÛÙ Ú©Ø§ØªÛØ¯Ø§"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """I'm just finishing my book.""",
                      kurdishText: """Ø¦ÛØ³ØªØ§ Ú©ØªÛØ¨ÛÚ©ÛÙ ØªÛÙØ§Ù Ø¯ÛÚ©ÛÙ.""",
                      onPressedBritish: () => speaksentence26("en-GB"),
                      onPressedAmerican: () => speaksentence26("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText:
                          """I was just beginning to enjoy myself when we had to leave.""",
                      kurdishText:
                          """ØªÛÙÙØ§ ØªØ§Ø²Û Ø®ÛØ±ÛÚ© Ø¨ÙÙ ÚÛÚ Ø¨Ø¨ÛÙÙ Ú©Û Ù¾ÛÙÛØ³Øª Ø¨ÙÙ Ø¨ÚÛÙ.""",
                      onPressedBritish: () => speaksentence27("en-GB"),
                      onPressedAmerican: () => speaksentence27("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """I'm just off (= I am leaving now).""",
                      kurdishText: """Ø¦ÛØ³ØªØ§ Ø¯ÛÚÙ.""",
                      onPressedBritish: () => speaksentence28("en-GB"),
                      onPressedAmerican: () => speaksentence28("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """Ù¦. (Ú¾Ø§ÙÛÚµÚ©Ø§Ø±) ÚÛÚ©"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """This jacket is just my size.""",
                      kurdishText: """Ø¦ÛÙ ÚØ§Ú©ÛØªÛÚ©Û ÚÛÚ© ÙÛ ÙÛØ¨Ø§Ø±ÛÛ ÙÙÛ.""",
                      onPressedBritish: () => speaksentence29("en-GB"),
                      onPressedAmerican: () => speaksentence29("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText:
                          """With him, everything always has to be just right.""",
                      kurdishText:
                          """ÙÛÚ¯ÛÚµ Ø¦ÛÙØ ÙÛÙÙÙ Ø´Øª ÙÛÙÛØ´Û Ø¯ÛØ¨ÛØª ÚÛÚ© Ø¨Ù.""",
                      onPressedBritish: () => speaksentence30("en-GB"),
                      onPressedAmerican: () => speaksentence30("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText:
                          """This gadget is just the thing for getting those nails out.""",
                      kurdishText:
                          """Ú©ÛØ±ÛØ³ØªÛÚ©Û ÚÛÚ© Ø¦ÛÙ Ø´ØªÛÛÛÚ© Ø¨Û Ø¯ÛØ±ÙÛÙØ§ÙÛ Ø¦ÛÙ Ø¨Ø²ÙØ§Ø±Ø§ÙÛ.""",
                      onPressedBritish: () => speaksentence31("en-GB"),
                      onPressedAmerican: () => speaksentence31("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText:
                          """Just my luck (= the sort of bad luck I usually have). My phone needs recharging.""",
                      kurdishText:
                          """ÚÛÚ© ÙÛ Ø¨ÛØ®ØªÛ ÙÙ. ÙÙØ¨Ø§ÛÙÛÚ©ÛÙ Ù¾ÛÙÛØ³ØªÛ Ø¨Û Ø´ÛØ­Ù Ú©Ø±Ø¯ÙÛÙÛÛÛ.""",
                      onPressedBritish: () => speaksentence32("en-GB"),
                      onPressedAmerican: () => speaksentence32("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """You're just in time.""",
                      kurdishText: """ÚÛÚ© ÙÛ Ú©Ø§ØªÛ Ø®ÛÛÛØª.""",
                      onPressedBritish: () => speaksentence33("en-GB"),
                      onPressedAmerican: () => speaksentence33("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """She looks just like her mother.""",
                      kurdishText: """ÚÛÚ© ÙÛ Ø¯Ø§ÛÚ©Û Ø¯ÛÚÛØª.""",
                      onPressedBritish: () => speaksentence34("en-GB"),
                      onPressedAmerican: () => speaksentence34("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """It's just what I wanted!""",
                      kurdishText: """ÚÛÚ© Ø¦ÛÙÛÛÛ Ú©Û Ø¯ÛÙÙÛØ³Øª!""",
                      onPressedBritish: () => speaksentence35("en-GB"),
                      onPressedAmerican: () => speaksentence35("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """It's just as I thought.""",
                      kurdishText: """ÚÛÚ© Ø¦ÛÙÛÛÛ Ø¨ÛØ±Ù ÙÛØ¯ÛÚ©Ø±Ø¯ÛÙÛ.""",
                      onPressedBritish: () => speaksentence36("en-GB"),
                      onPressedAmerican: () => speaksentence36("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText:
                          """It's just on six (= exactly six o'clock).""",
                      kurdishText: """ÚÛÚ© Ú©Ø§ØªÚÙÛØ± Ø´ÛØ´Û.""",
                      onPressedBritish: () => speaksentence37("en-GB"),
                      onPressedAmerican: () => speaksentence37("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(
                        text: """Ù§. (Ú¾Ø§ÙÛÚµÚ©Ø§Ø±) ÚÛÚ© ÙÛ ÙÛÙØ§Ù Ú©Ø§ØªÛ ..."""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText:
                          """The clock struck six just as I arrived.""",
                      kurdishText: """Ú©Ø§ØªÚÙÛØ±ÛÚ©Û Ø¨ÙÙ Ø¨Û Ø´ÛØ´ ÚÛÚ© Ú©Û Ú¯ÛØ´ØªÙ.""",
                      onPressedBritish: () => speaksentence38("en-GB"),
                      onPressedAmerican: () => speaksentence38("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(
                        text:
                            """Ù¨. (Ú¾Ø§ÙÛÚµÚ©Ø§Ø±) Ú©ÛÙØªØ± ÙØ§ ÙÛ Ø´ØªÛÚ©Ø ÚÛÚ© ÙÛÚ© Ø´ØªÛÚ©"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """She's just as smart as her sister.""",
                      kurdishText: """ÚÛÚ© ÙÛÚ© Ø®ÙØ´Ú©ÛÚ©ÛÛ Ø²ÛØ±ÛÚ©Û.""",
                      onPressedBritish: () => speaksentence39("en-GB"),
                      onPressedAmerican: () => speaksentence39("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText:
                          """You can get there just as cheaply by plane.""",
                      kurdishText:
                          """Ø¯ÛØªÙØ§ÙÛØª Ø¨Ú¯ÛÛØª Ø¨Û Ø¦ÛÙÛ ÙÛØ± Ø¨Û ÙÛÙØ§Ù ÙÛØ±Ø²Ø§ÙÛ Ø¨Û ÙÚÛÚ©Û.""",
                      onPressedBritish: () => speaksentence40("en-GB"),
                      onPressedAmerican: () => speaksentence40("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(
                        text:
                            """Ù©. (Ú¾Ø§ÙÛÚµÚ©Ø§Ø±) Ú©Ø±Ø¯ÙÛ Ø´ØªÛÚ© ØªÛÙÙØ§ Ø¯ÙØ§Û Ú©ÛÙÛÚ© ÙÛ Ø¦ÛØ³ØªØ§ÙÛ ÛØ§Ù Ú©Ø§ØªÛÚ©Û ÚØ§Ø¨Ø±Ø¯ÙÙ"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """The water's just about to boil.""",
                      kurdishText: """Ø¦Ø§ÙÛÚ©Û ÙØ§ Ø®ÛØ±ÛÚ©Û Ø¨Ú©ÙÚµÛØª.""",
                      onPressedBritish: () => speaksentence41("en-GB"),
                      onPressedAmerican: () => speaksentence41("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText:
                          """I was just going to tell you when you interrupted.""",
                      kurdishText: """ÙØ§ Ø®ÛØ±ÛÚ© Ø¨ÙÙ Ù¾ÛØªÛ Ø¨ÚµÛÙ Ú©Û Ù¾ÚÚØ§ÙØ¯ÙØª.""",
                      onPressedBritish: () => speaksentence42("en-GB"),
                      onPressedAmerican: () => speaksentence42("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(
                        text: """Ù¡Ù . (Ú¾Ø§ÙÛÚµÚ©Ø§Ø±) Ø¨ÛÚØ§Ø³ØªÛØ Ø¨Û ØªÛÙØ§ÙÛ"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """The food was just wonderful!""",
                      kurdishText: """Ø®ÙØ§Ø±Ø¯ÙÛÚ©Û ØªÛÙØ§Ù Ø®ÛØ´ Ø¨ÙÙ!""",
                      onPressedBritish: () => speaksentence43("en-GB"),
                      onPressedAmerican: () => speaksentence43("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """The trip was just amazing!""",
                      kurdishText: """Ú¯ÛØ´ØªÛÚ©Û ØªÛÙØ§Ù ÙØ§ÙØ§Ø²Û Ø¨ÙÙ.""",
                      onPressedBritish: () => speaksentence44("en-GB"),
                      onPressedAmerican: () => speaksentence44("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """I can just imagine his reaction.""",
                      kurdishText: """ÚÛÚ© Ø¯ÛØªÙØ§ÙÙ ÙÛÙØ§Û Ú©Ø§Ø±Ø¯Ø§ÙÛÙÛÛ Ø¨Ú©ÛÙ.""",
                      onPressedBritish: () => speaksentence45("en-GB"),
                      onPressedAmerican: () => speaksentence45("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(
                        text:
                            """Ù¡Ù¡. (Ú¾Ø§ÙÛÚµÚ©Ø§Ø±) Ø¨ÛÚ©Ø§Ø±Ø¯ÛØª Ø¨Û Ø¨ÛØ¯ÛØ³ØªÙÛÙØ§ÙÛ Ø³ÛØ±ÙØ¬Û Ú©ÛØ³ÛÚ©Ø Ù¾ÛØ¯Ø§ÙÛ ÙÛÚµÛØªØ ÙØªØ¯"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText:
                          """Just listen to what I'm saying, will you!""",
                      kurdishText: """ØªÛÙÙØ§ Ú¯ÙÛØ¨Ú¯Ø±Û ÙÛÙÛÛ Ø¯ÛÛÚµÛÙØ Ø¨Ø§Ø´Û!.""",
                      onPressedBritish: () => speaksentence46("en-GB"),
                      onPressedAmerican: () => speaksentence46("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(
                        text:
                            """Ù¡Ù¢. (Ú¾Ø§ÙÛÚµÚ©Ø§Ø±) Ø¨Û Ø¦ÛÙØ¬Ø§ÙØ¯Ø§ÙÛ Ø¯Ø§ÙØ§ÛÛÚ©Û Ø¨ÛÚÛØ²Ø§ÙÛØ ÙÛÙØ§ÙÛÙÛÛ Ø¨ÛØ§ÙÙÙÛÛÚ©Ø ÙØªØ¯"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText:
                          """Could you just help me with this box, please?""",
                      kurdishText:
                          """Ø¯ÛØªÙØ§ÙÛØª ÙÛØ± Ø¦ÛÙÛÙØ¯Û ÙÛÚ¯ÛÚµ Ø¦ÛÙ Ø³ÙØ¯ÙÙÙÛ ÛØ§Ø±ÙÛØªÛÙ Ø¨Ø¯ÛÛØªØ""",
                      onPressedBritish: () => speaksentence47("en-GB"),
                      onPressedAmerican: () => speaksentence47("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText:
                          """I've just got a few things to do first.""",
                      kurdishText: """ØªÛÙÙØ§ ÚÛÙØ¯ Ø´ØªÛÚ©Ù ÙÛÛÛ Ø³ÛØ±ÛØªØ§ Ø¨ÛÚ©ÛÙ.""",
                      onPressedBritish: () => speaksentence48("en-GB"),
                      onPressedAmerican: () => speaksentence48("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(
                        text:
                            """Ù¡Ù£. (Ú¾Ø§ÙÛÚµÚ©Ø§Ø±) Ø¨Û Ù¾ÛØ´Ø§ÙØ¯Ø§ÙÛ Ø¦ÛÚ¯ÛØ±ÛÚ©Û Ú©ÛÙÛ Ø¦ÛÙÛÛ Ø´ØªÛÚ© ÚØ§Ø³ØªÛ ÛØ§Ù ÚÙÙØ¯ÛØ¯Ø§Øª"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText:
                          """Try asking Mikeâhe might just know the answer.""",
                      kurdishText:
                          """ÙÛÙÚµ Ø¨Ø¯Û ÙÛ ÙØ§ÛÚ© Ø¨Ù¾Ø±Ø³Û Ù Ø¦ÛÙ Ø¦ÛÚ¯ÛØ±ÛÚ©Û ÙÛÛÛ ÙÛÚµØ§ÙÛÚ©Û Ø¨Ø²Ø§ÙÛØª.""",
                      onPressedBritish: () => speaksentence49("en-GB"),
                      onPressedAmerican: () => speaksentence49("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(
                        text:
                            """Ù¡Ù¤. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ú©Û Ø²ÛØ±ÛÙÛÛ Ø®ÛÚµÚ©Û ÙÛ ÚÙÙÛ Ø¦ÛØ®ÙØ§ÙÛÛÛÙÛ Ø¨Û Ø¯Ø§Ø¯Ù¾ÛØ±ÙÛØ±Û Ù Ú¯ÙÙØ¬Ø§ÙÛ Ø¯ÛØ²Ø§ÙÙ"""),
                    const AlsoEnglishckb(word: "Ú¾ÛØ±ÙÛÚ¾Ø§: fair"),
                    SentencesRow(
                      englishText: """I think it was a just decision.""",
                      kurdishText: """Ù¾ÛÙÙØ§ÛÛ Ø¨ÚÛØ§Ø±ÛÚ©Û Ø¯Ø§Ø¯Ú¯ÛØ±Ø§ÙÛ Ø¨ÙÙ.""",
                      onPressedBritish: () => speaksentence50("en-GB"),
                      onPressedAmerican: () => speaksentence50("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText:
                          """Of course we all strive for a just and humane society.""",
                      kurdishText:
                          """Ø¨ÛØ¯ÚµÙÛØ§ÛÛÛÙÛ ÙÛÙÙÙÙØ§Ù ÙÛÙÚµ Ø¯ÛØ¯ÛÛÙ Ø¨Û Ú©ÛÙÛÚµÚ¯ÛÛÛÚ©Û Ø¯Ø§Ø¯Ú¯ÛØ± Ù ÙØ±ÛÚ¤Ø§ÙÛ.""",
                      onPressedBritish: () => speaksentence51("en-GB"),
                      onPressedAmerican: () => speaksentence51("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """The law must be seen to be just.""",
                      kurdishText: """ÛØ§Ø³Ø§ Ø¯ÛØ¨ÛØª ÙÛÚ© Ø¯Ø§Ø¯Ú¯ÛØ± Ø¨Ø¨ÛÙØ¯Ø±ÛØª.""",
                      onPressedBritish: () => speaksentence52("en-GB"),
                      onPressedAmerican: () => speaksentence52("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(
                        text: """Ù¡Ù¥. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ø¦ÛÙ Ú©ÛØ³Ø§ÙÛÛ Ø¯Ø§Ø¯Ù¾ÛØ±ÙÛØ±Ù"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText:
                          """People trust the just to make fair decisions.""",
                      kurdishText:
                          """Ø®ÛÚµÚ©Û Ø¨Ø§ÙÛÚÛØ§Ù Ø¨Û Ø¯Ø§Ø¯Ú¯ÛØ±Ø§Ù ÙÛÛÛ Ø¨ÚÛØ§Ø±Û Ø¯Ø§Ø¯Ù¾ÛØ±ÙÛØ±Ø§ÙÛ Ø¨Ø¯ÛÙ.""",
                      onPressedBritish: () => speaksentence53("en-GB"),
                      onPressedAmerican: () => speaksentence53("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(
                        text: """Ù¡Ù¦. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ú¯ÙÙØ¬Ø§Ù ÙÛ Ø¯ÛØ®ÛÚ©Û Ø¯ÛØ§Ø±ÛÚ©Ø±Ø§Ù"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText:
                          """I think she got her just deserts (= what she deserved).""",
                      kurdishText: """Ù¾ÛÙ ÙØ§ÛÛ Ø¦ÛÙ Ø³Ø²Ø§Û Ø´ÛØ§ÙÛ Ø®ÛÛ ÙÛØ±Ú¯Ø±Øª.""",
                      onPressedBritish: () => speaksentence54("en-GB"),
                      onPressedAmerican: () => speaksentence54("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText:
                          """They're campaigning for a just settlement.""",
                      kurdishText: """ÙÛÙÚµ Ø¨Û ÚØ§Ø±ÛØ³ÛØ±ÛÚ©Û Ú¯ÙÙØ¬Ø§Ù Ø¯ÛØ¯ÛÙ.""",
                      onPressedBritish: () => speaksentence55("en-GB"),
                      onPressedAmerican: () => speaksentence55("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence5600""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence56("en-GB"),
                      onPressedAmerican: () => speaksentence56("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence5700""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence57("en-GB"),
                      onPressedAmerican: () => speaksentence57("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence5800""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence58("en-GB"),
                      onPressedAmerican: () => speaksentence58("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence5900""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence59("en-GB"),
                      onPressedAmerican: () => speaksentence59("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_6000""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence60("en-GB"),
                      onPressedAmerican: () => speaksentence60("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence6100""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence61("en-GB"),
                      onPressedAmerican: () => speaksentence61("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence6200""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence62("en-GB"),
                      onPressedAmerican: () => speaksentence62("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence6300""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence63("en-GB"),
                      onPressedAmerican: () => speaksentence63("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence6400""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence64("en-GB"),
                      onPressedAmerican: () => speaksentence64("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence6500""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence65("en-GB"),
                      onPressedAmerican: () => speaksentence65("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence6600""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence66("en-GB"),
                      onPressedAmerican: () => speaksentence66("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence6700""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence67("en-GB"),
                      onPressedAmerican: () => speaksentence67("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence6800""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence68("en-GB"),
                      onPressedAmerican: () => speaksentence68("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence6900""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence69("en-GB"),
                      onPressedAmerican: () => speaksentence69("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_7000""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence70("en-GB"),
                      onPressedAmerican: () => speaksentence70("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence7100""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence71("en-GB"),
                      onPressedAmerican: () => speaksentence71("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence7200""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence72("en-GB"),
                      onPressedAmerican: () => speaksentence72("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence7300""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence73("en-GB"),
                      onPressedAmerican: () => speaksentence73("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence7400""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence74("en-GB"),
                      onPressedAmerican: () => speaksentence74("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence7500""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence75("en-GB"),
                      onPressedAmerican: () => speaksentence75("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence7600""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence76("en-GB"),
                      onPressedAmerican: () => speaksentence76("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence7700""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence77("en-GB"),
                      onPressedAmerican: () => speaksentence77("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence7800""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence78("en-GB"),
                      onPressedAmerican: () => speaksentence78("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence7900""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence79("en-GB"),
                      onPressedAmerican: () => speaksentence79("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_8000""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence80("en-GB"),
                      onPressedAmerican: () => speaksentence80("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence8100""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence81("en-GB"),
                      onPressedAmerican: () => speaksentence81("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence8200""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence82("en-GB"),
                      onPressedAmerican: () => speaksentence82("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence8300""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence83("en-GB"),
                      onPressedAmerican: () => speaksentence83("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence8400""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence84("en-GB"),
                      onPressedAmerican: () => speaksentence84("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence8500""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence85("en-GB"),
                      onPressedAmerican: () => speaksentence85("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence8600""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence86("en-GB"),
                      onPressedAmerican: () => speaksentence86("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence8700""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence87("en-GB"),
                      onPressedAmerican: () => speaksentence87("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence8800""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence88("en-GB"),
                      onPressedAmerican: () => speaksentence88("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence8900""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence89("en-GB"),
                      onPressedAmerican: () => speaksentence89("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_9000""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence90("en-GB"),
                      onPressedAmerican: () => speaksentence90("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence9100""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence91("en-GB"),
                      onPressedAmerican: () => speaksentence91("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence9200""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence92("en-GB"),
                      onPressedAmerican: () => speaksentence92("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence9300""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence93("en-GB"),
                      onPressedAmerican: () => speaksentence93("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence9400""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence94("en-GB"),
                      onPressedAmerican: () => speaksentence94("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence9500""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence95("en-GB"),
                      onPressedAmerican: () => speaksentence95("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence9600""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence96("en-GB"),
                      onPressedAmerican: () => speaksentence96("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence9700""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence97("en-GB"),
                      onPressedAmerican: () => speaksentence97("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence9800""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence98("en-GB"),
                      onPressedAmerican: () => speaksentence98("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence9900""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence99("en-GB"),
                      onPressedAmerican: () => speaksentence99("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence__10000""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence100("en-GB"),
                      onPressedAmerican: () => speaksentence100("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_10100""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence101("en-GB"),
                      onPressedAmerican: () => speaksentence101("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_10200""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence102("en-GB"),
                      onPressedAmerican: () => speaksentence102("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_10300""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence103("en-GB"),
                      onPressedAmerican: () => speaksentence103("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_10400""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence104("en-GB"),
                      onPressedAmerican: () => speaksentence104("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_10500""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence105("en-GB"),
                      onPressedAmerican: () => speaksentence105("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_10600""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence106("en-GB"),
                      onPressedAmerican: () => speaksentence106("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_10700""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence107("en-GB"),
                      onPressedAmerican: () => speaksentence107("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_10800""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence108("en-GB"),
                      onPressedAmerican: () => speaksentence108("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_10900""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence109("en-GB"),
                      onPressedAmerican: () => speaksentence109("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_11000""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence110("en-GB"),
                      onPressedAmerican: () => speaksentence110("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_11100""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence111("en-GB"),
                      onPressedAmerican: () => speaksentence111("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_11200""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence112("en-GB"),
                      onPressedAmerican: () => speaksentence112("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_11300""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence113("en-GB"),
                      onPressedAmerican: () => speaksentence113("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_11400""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence114("en-GB"),
                      onPressedAmerican: () => speaksentence114("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_11500""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence115("en-GB"),
                      onPressedAmerican: () => speaksentence115("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_11600""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence116("en-GB"),
                      onPressedAmerican: () => speaksentence116("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_11700""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence117("en-GB"),
                      onPressedAmerican: () => speaksentence117("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_11800""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence118("en-GB"),
                      onPressedAmerican: () => speaksentence118("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_11900""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence119("en-GB"),
                      onPressedAmerican: () => speaksentence119("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """ÚÙÙØ±. (Ú¾Ø§ÙÛÚµÙØ§Ù) Ù¾ÙÙØ³Û"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_12000""",
                      kurdishText: """Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ_Ø±Ø³ØªÛ.""",
                      onPressedBritish: () => speaksentence120("en-GB"),
                      onPressedAmerican: () => speaksentence120("en-US"),
                    ),
                  ],
                ),
              ),
              Consumer(
                builder: (context, ref, child) {
                  if (filteredSentences.isEmpty) {
                    return const NoSentencesFromDatabase();
                  } else {
                    return ListView.builder(
                      itemCount: filteredSentences.length,
                      itemBuilder: (context, index) {
                        final sentence = filteredSentences[index];
                        final showDivider = filteredSentences.length > 1 &&
                            index != filteredSentences.length - 1;
                        return CustomSentenceWidget(
                          englishText: sentence['english'].toString(),
                          frenchText: sentence['french'].toString(),
                          keyword: keyword,
                          onPressedBritish: () => speakEnglish(
                            sentence['english'].toString(),
                            languageCode: "en-GB",
                          ),
                          onPressedAmerican: () => speakEnglish(
                            sentence['english'].toString(),
                            languageCode: "en-US",
                          ),
                          showDivider: showDivider,
                        );
                      },
                    );
                  }
                },
              ),
              const YouTubeScroller(
                children: [
                  YoutubeEmbeddingWidget(
                    key: ValueKey(videoIdend),
                    videoId: videoIdend,
                    startSeconds: startSecondsend,
                  ),
                  YoutubeEmbeddingWidget(
                    key: ValueKey(videoIdone),
                    videoId: videoIdone,
                    startSeconds: startSecondsone,
                  ),
                  YoutubeEmbeddingWidget(
                    key: ValueKey(videoIdtwo),
                    videoId: videoIdtwo,
                    startSeconds: startSecondstwo,
                  ),
                  YoutubeEmbeddingWidget(
                    key: ValueKey(videoIdthree),
                    videoId: videoIdthree,
                    startSeconds: startSecondsthree,
                  ),
                  YoutubeEmbeddingWidget(
                    key: ValueKey(videoIdfour),
                    videoId: videoIdfour,
                    startSeconds: startSecondsfour,
                  ),
                  YoutubeEmbeddingWidget(
                    key: ValueKey(videoIdfive),
                    videoId: videoIdfive,
                    startSeconds: startSecondsfive,
                  ),
                ],
              ),
            ],
          ),
        ),
      ),
    );
  }
}

// end WORD_WEB
// end just