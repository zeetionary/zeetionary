import 'package:flutter/material.dart';
import 'package:flutter_tts/flutter_tts.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:zeetionary/constants.dart';

enum TtsState { playing }

class EnglishEntryhouse extends StatefulWidget {
  const EnglishEntryhouse({super.key});

  @override
  State<EnglishEntryhouse> createState() => _EnglishEntryhouseState();
}

class _EnglishEntryhouseState extends State<EnglishEntryhouse> {
  @override
  void initState() {
    super.initState();
    flutterTts = FlutterTts();
    flutterTts.setLanguage("en-GB");
    flutterTts.setLanguage("en-US");
    fetchSentences();
  }

  FlutterTts flutterTts = FlutterTts();

  bool isSpeaking = false;

  Future<void> startSpeaking(
      String languageCode, EnglishMeaningConst englishMeaningConst) async {
    String textToSpeak = """
${englishMeaningConst.text}
""";

    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak(textToSpeak);

    setState(() {
      isSpeaking = true;
    });
  }

  Future<void> stopSpeaking() async {
    await flutterTts.stop();

    setState(() {
      isSpeaking = false;
    });
  }

  final EnglishMeaningConst englishMeaningConst = const EnglishMeaningConst(
    text: """
- Noun: house (Derived forms: houses)
1. A dwelling that serves as living quarters for one or more families
"he has a house on Cape Cod"; "she felt she had to get out of the house"
 
2. The members of a business organization that owns or operates one or more establishments (- firm, business firm)
"he worked for a brokerage house";
 
3. The members of a religious community living together
 
4. The audience gathered together in a theatre or cinema
"the house applauded"; "he counted the house"
 
5. An official assembly having legislative powers
"a bicameral legislature has two houses"
 
6. Aristocratic family line
"the House of York"
 
7. Play in which children take the roles of father, mother or children and pretend to interact like adults
"the children were playing house"
 
8. (astrology) one of 12 equal areas into which the zodiac is divided (- sign of the zodiac, star sign, sign, mansion, planetary house)
 
9. The management of a gambling house or casino
"the house gets a percentage of every bet"
 
10. A social unit living together (- family, household, home, m√©nage)
"I waited until the whole house was asleep";
 
11. (dramaturgy) a building where theatrical performances or motion-picture shows can be presented (- theater [US], theatre)
"the house was full";
 
12. A building in which something is sheltered or located
"they had a large carriage house"

- Verb: house (Derived forms: housing, houses, housed)
1. Contain or cover
"This box houses the gears"
 
2. Provide someone with accomodation (- put up, domiciliate)
"The immigrants were housed in a new development outside the town";
""",
  );

  final String keyword = "house";
  List<Map<String, dynamic>> filteredSentences = [];

  Future<void> fetchSentences() async {
    final sentences =
        await DatabaseUtils.instance.fetchFilteredSentences(keyword: keyword);
    setState(() {
      filteredSentences = sentences;
    });
  }

  void speakEnglish(String text, {String? languageCode}) async {
    await flutterTts.setLanguage(languageCode ?? "en-GB");
    await flutterTts.speak(text);
  }

  Future<void> speakheadword(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""house""");
  }

  Future<void> speaksentence1(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""It was so hot outside we stayed in the house.""");
  }

  Future<void> speaksentence2(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""He went into the house.""");
  }

  Future<void> speaksentence3(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""I had to get out of the house.""");
  }

  Future<void> speaksentence4(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""A light was on inside the house.""");
  }

  Future<void> speaksentence5(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts
        .speak("""There was a police van parked outside the house.""");
  }

  Future<void> speaksentence6(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""Let's have a party at my house.""");
  }

  Future<void> speaksentence7(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts
        .speak("""Investors were buying houses to rent them out.""");
  }

  Future<void> speaksentence8(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts
        .speak("""What time do you leave the house in the morning?""");
  }

  Future<void> speaksentence9(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""We're moving house.""");
  }

  Future<void> speaksentence10(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""House prices in London are still rising.""");
  }

  Future<void> speaksentence11(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts
        .speak("""They went from house to house, begging for food.""");
  }

  Future<void> speaksentence12(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""Be quiet or you'll wake the whole house!""");
  }

  Future<void> speaksentence13(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""We built a new henhouse for the chickens.""");
  }

  Future<void> speaksentence14(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts
        .speak("""Their offices are on the second floor of Chester House.""");
  }

  Future<void> speaksentence15(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak(
        """The publishing house made its name by encouraging first-time writers.""");
  }

  Future<void> speaksentence16(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""We met at the coffee house downtown.""");
  }

  Future<void> speaksentence17(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak(
        """Legislation requires approval by both houses of parliament.""");
  }

  Future<void> speaksentence18(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""I urge the house to vote against the motion.""");
  }

  Future<void> speaksentence19(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts
        .speak("""The government is committed to housing the refugees.""");
  }

  Future<void> speaksentence20(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak(
        """He can barely afford to feed, clothe and house his family.""");
  }

  Future<void> speaksentence21(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak(
        """The losers in this society are people who are homeless or badly housed.""");
  }

  Future<void> speaksentence22(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""The rabbits were housed individually.""");
  }

  Future<void> speaksentence23(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts
        .speak("""The library houses a collection of 15‚Äâ000 books.""");
  }

  Future<void> speaksentence24(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""The gallery houses 2‚Äâ000 works of modern art.""");
  }

  Future<void> speaksentence25(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts
        .speak("""The new offices will house 600 administration staff.""");
  }

  Future<void> speaksentence26(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence2600""");
  }

  Future<void> speaksentence27(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence2700""");
  }

  Future<void> speaksentence28(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence2800""");
  }

  Future<void> speaksentence29(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence2900""");
  }

  Future<void> speaksentence30(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_3000""");
  }

  Future<void> speaksentence31(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence3100""");
  }

  Future<void> speaksentence32(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence3200""");
  }

  Future<void> speaksentence33(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence3300""");
  }

  Future<void> speaksentence34(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence3400""");
  }

  Future<void> speaksentence35(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence3500""");
  }

  Future<void> speaksentence36(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence3600""");
  }

  Future<void> speaksentence37(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence3700""");
  }

  Future<void> speaksentence38(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence3800""");
  }

  Future<void> speaksentence39(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence3900""");
  }

  Future<void> speaksentence40(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_4000""");
  }

  Future<void> speaksentence41(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence4100""");
  }

  Future<void> speaksentence42(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence4200""");
  }

  Future<void> speaksentence43(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence4300""");
  }

  Future<void> speaksentence44(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence4400""");
  }

  Future<void> speaksentence45(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence4500""");
  }

  Future<void> speaksentence46(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence4600""");
  }

  Future<void> speaksentence47(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence4700""");
  }

  Future<void> speaksentence48(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence4800""");
  }

  Future<void> speaksentence49(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence4900""");
  }

  Future<void> speaksentence50(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_5000""");
  }

  Future<void> speaksentence51(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence5100""");
  }

  Future<void> speaksentence52(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence5200""");
  }

  Future<void> speaksentence53(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence5300""");
  }

  Future<void> speaksentence54(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence5400""");
  }

  Future<void> speaksentence55(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence5500""");
  }

  Future<void> speaksentence56(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence5600""");
  }

  Future<void> speaksentence57(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence5700""");
  }

  Future<void> speaksentence58(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence5800""");
  }

  Future<void> speaksentence59(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence5900""");
  }

  Future<void> speaksentence60(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_6000""");
  }

  Future<void> speaksentence61(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence6100""");
  }

  Future<void> speaksentence62(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence6200""");
  }

  Future<void> speaksentence63(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence6300""");
  }

  Future<void> speaksentence64(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence6400""");
  }

  Future<void> speaksentence65(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence6500""");
  }

  Future<void> speaksentence66(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence6600""");
  }

  Future<void> speaksentence67(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence6700""");
  }

  Future<void> speaksentence68(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence6800""");
  }

  Future<void> speaksentence69(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence6900""");
  }

  Future<void> speaksentence70(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_7000""");
  }

  Future<void> speaksentence71(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence7100""");
  }

  Future<void> speaksentence72(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence7200""");
  }

  Future<void> speaksentence73(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence7300""");
  }

  Future<void> speaksentence74(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence7400""");
  }

  Future<void> speaksentence75(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence7500""");
  }

  Future<void> speaksentence76(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence7600""");
  }

  Future<void> speaksentence77(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence7700""");
  }

  Future<void> speaksentence78(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence7800""");
  }

  Future<void> speaksentence79(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence7900""");
  }

  Future<void> speaksentence80(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_8000""");
  }

  Future<void> speaksentence81(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence8100""");
  }

  Future<void> speaksentence82(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence8200""");
  }

  Future<void> speaksentence83(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence8300""");
  }

  Future<void> speaksentence84(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence8400""");
  }

  Future<void> speaksentence85(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence8500""");
  }

  Future<void> speaksentence86(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence8600""");
  }

  Future<void> speaksentence87(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence8700""");
  }

  Future<void> speaksentence88(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence8800""");
  }

  Future<void> speaksentence89(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence8900""");
  }

  Future<void> speaksentence90(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_9000""");
  }

  Future<void> speaksentence91(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence9100""");
  }

  Future<void> speaksentence92(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence9200""");
  }

  Future<void> speaksentence93(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence9300""");
  }

  Future<void> speaksentence94(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence9400""");
  }

  Future<void> speaksentence95(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence9500""");
  }

  Future<void> speaksentence96(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence9600""");
  }

  Future<void> speaksentence97(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence9700""");
  }

  Future<void> speaksentence98(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence9800""");
  }

  Future<void> speaksentence99(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence9900""");
  }

  Future<void> speaksentence100(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence__10000""");
  }

  Future<void> speaksentence101(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_10100""");
  }

  Future<void> speaksentence102(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_10200""");
  }

  Future<void> speaksentence103(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_10300""");
  }

  Future<void> speaksentence104(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_10400""");
  }

  Future<void> speaksentence105(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_10500""");
  }

  Future<void> speaksentence106(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_10600""");
  }

  Future<void> speaksentence107(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_10700""");
  }

  Future<void> speaksentence108(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_10800""");
  }

  Future<void> speaksentence109(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_10900""");
  }

  Future<void> speaksentence110(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_11000""");
  }

  Future<void> speaksentence111(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_11100""");
  }

  Future<void> speaksentence112(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_11200""");
  }

  Future<void> speaksentence113(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_11300""");
  }

  Future<void> speaksentence114(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_11400""");
  }

  Future<void> speaksentence115(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_11500""");
  }

  Future<void> speaksentence116(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_11600""");
  }

  Future<void> speaksentence117(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_11700""");
  }

  Future<void> speaksentence118(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_11800""");
  }

  Future<void> speaksentence119(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_11900""");
  }

  Future<void> speaksentence120(String languageCode) async {
    await flutterTts.setLanguage(languageCode);
    await flutterTts.setPitch(ttsPitch);
    await flutterTts.setSpeechRate(ttsSpeechRate);
    await flutterTts.speak("""speaksentence_12000""");
  }

  @override
  Widget build(BuildContext context) {
    // 188888880002200
    const String videoIdend = 'https://youtu.be/hTqtGJwsJVE?t=';
    const double startSecondsend = 000000000000000000000000000889;
    const String videoIdone = 'https://youtu.be/hFZFjoX2cGg?t=';
    const double startSecondsone = 000000000000000000000000000653;
    const String videoIdtwo = 'https://youtu.be/NCLZi2Rn_ug?t=';
    const double startSecondstwo = 00000000000000000000000000046;
    const String videoIdthree = 'https://youtu.be/Pto9L7kjuSM';
    const double startSecondsthree = 0;
    const String videoIdfour = 'https://youtu.be/QtrRtGC3G_I?t=';
    const double startSecondsfour = 000000000000000000000000000148;
    const String videoIdfive = 'https://youtu.be/_spuxXnul0U?t=';
    const double startSecondsfive = 000000000000000000000000000493;

    return DefaultTabController(
      length: 4,
      child: Scaffold(
        appBar: const ZeetionaryAppbar(),
        body: NestedScrollView(
          headerSliverBuilder: (context, innerBoxIsScrolled) {
            return [
              CustomSliverAppBar(
                flexibleSpace: FlexibleSpaceBar(
                  background: SingleChildScrollView(
                    child: EntryPageColumn(
                      word: """house""",
                      // alsoEnglishWord: "also: house",
                      britshText: """IpaUK: /ha äs/""",
                      americanText: """IpaUS: /ha äs/""",
                      onPressedBritish: () => speakheadword("en-GB"),
                      onPressedAmerican: () => speakheadword("en-US"),
                    ),
                  ),
                ),
                bottom: const CustomTabBarNew(
                  tabs: [
                    UkIconForTab(),
                    KurdIconForTab(),
                    SentencesIconForTab(),
                    VideoIconForTab(),
                  ],
                ),
              ),
            ];
          },
          body: TabBarView(
            children: [
              SingleChildScrollView(
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    EnglishButtonTTS(
                      onBritishPressed: (languageCode) =>
                          startSpeaking(languageCode, englishMeaningConst),
                      onAmericanPressed: (languageCode) =>
                          startSpeaking(languageCode, englishMeaningConst),
                      onStopPressed: stopSpeaking,
                    ),
                    englishMeaningConst,
                  ],
                ),
              ),
              SingleChildScrollView(
                child: CustomColumnWidget(
                  children: [
                    const KurdishVocabulary(text: """
⁄©Ÿàÿ±ÿØ€å: ÿÆÿßŸÜŸàŸàÿå ŸÖÿß⁄µÿå ÿÆÿßŸÜ€ïÿå ÿÆÿßŸÜÿå €åÿßŸÜ€ïÿå ÿ¨€é⁄Øÿßÿå ŸÖ€ïŸÜÿ≤⁄µÿå ÿ®ŸÜ€ïŸÖÿß⁄µ€ïÿå (ÿÆÿßŸàŸà)ÿÆ€éÿ≤ÿßŸÜÿå ⁄©€ïÿ≥ÿßŸÜ€é ŸÖÿß⁄µ€éÿå	ÿ®€ïÿ±€ï €åÿßŸÜ ÿÆ€éÿ≤ÿßŸÜ€å Ÿæÿßÿ™ÿ¥ÿß€å€åÿå	Ÿá€Ü⁄µÿå ÿ≥ÿß⁄µ€ÜŸÜÿå	ÿ¶€ïŸÜÿ¨ŸàŸÖ€ïŸÜ (ŸÑ€ï ÿ®ÿ±€åÿ™ÿßŸÜ€åÿßÿå ÿ¶€ïŸÜÿ¨ŸàŸÖ€ïŸÜ€å ⁄Øÿ¥ÿ™€å €åÿßŸÜ ⁄ò€éÿ±€åŸÜÿå ÿ¶€ïŸÜÿ¨ŸàŸÖ€ïŸÜ€å Ÿá€ï⁄µÿ®⁄ò€éÿ±ÿßŸàÿßŸÜ €åÿßŸÜ ⁄òŸàŸàÿ±€åŸÜÿõ ÿ¶€ïŸÜÿ¨ŸàŸÖ€ïŸÜ€å ŸÜŸà€éŸÜ€ïÿ±ÿßŸÜÿå ŸÑ€ï ÿ¶€ïŸÖÿ±€å⁄©ÿß)ÿå	ÿØ€ï€åÿ±ÿå ÿ™€ï⁄©€å€ïÿå ⁄ï€ïÿ®€ïŸÜ⁄Ø€ïÿå	(ÿÆŸà€éŸÜÿØŸÜ⁄Øÿß) ÿ™€åŸÖÿå ÿ™€åŸæÿå ÿØ€ïÿ≥ÿ™€ïÿå	⁄©€ÜŸÖŸæÿßŸÜ€åÿå ŸÜÿßŸà⁄©€Ü€å€åÿå ÿØÿßŸÖ€ïÿ≤ÿ±ÿßŸà€ï€å ⁄©ÿßÿ±ÿØÿßÿ±€åÿå ŸÜŸàŸàÿ≥€åŸÜ⁄Ø€ïÿå ÿÆÿßŸÜ€ï€å ÿ®ÿßÿ≤ÿ±⁄ØÿßŸÜ€åÿå	ÿ®€åŸÜ€ïÿ±ÿßŸÜ€å ÿ™€åÿßÿ™ÿ±ÿå Ÿæ€éÿ±ŸÅ€Üÿ±ŸÖÿßŸÜÿ≥ ŸÑ€ï ÿ¥ÿßŸÜ€ÜÿØÿßÿå	(ŸÅ€ïŸÑ€ï⁄©ŸÜÿßÿ≥€å) ⁄©€ïŸÑŸàŸàÿå ÿ®ÿ±ÿ¨
"""),
// With short examples define "house", please follow LX instructions
                    const DefinitionKurdish(
                        text: """Ÿ°. (ŸÜÿßŸà) ÿÆÿßŸÜŸàŸà/ŸÖÿß⁄µ ÿ®€Ü ⁄ò€åÿßŸÜ"""),
                    SentencesRow(
                      englishText:
                          """It was so hot outside we stayed in the house.""",
                      kurdishText:
                          """ÿ≤€Üÿ± ⁄Ø€ïÿ±ŸÖ ÿ®ŸàŸà ŸÑ€ï ÿØ€ïÿ±€ïŸà€ï ⁄©€ï ŸÑ€ï ŸÖÿß⁄µ€ïŸà€ï ŸÖÿß€åŸÜ€ïŸà€ï.""",
                      onPressedBritish: () => speaksentence1("en-GB"),
                      onPressedAmerican: () => speaksentence1("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """He went into the house.""",
                      kurdishText: """⁄ÜŸàŸà€ï ŸÖÿß⁄µ€ï⁄©€ï€ïŸà.""",
                      onPressedBritish: () => speaksentence2("en-GB"),
                      onPressedAmerican: () => speaksentence2("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """I had to get out of the house.""",
                      kurdishText: """Ÿæ€éŸà€åÿ≥ÿ™ ÿ®ŸàŸà ŸÑ€ï ÿÆÿßŸÜŸàŸà€ï⁄©€ï ÿ®€éŸÖ€ï ÿØ€ïÿ±€ïŸà€ï.""",
                      onPressedBritish: () => speaksentence3("en-GB"),
                      onPressedAmerican: () => speaksentence3("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """A light was on inside the house.""",
                      kurdishText: """⁄ï€Üÿ¥ŸÜÿß€å€å€ï⁄© Ÿá€ï⁄µ⁄©ÿ±ÿßÿ®ŸàŸà ŸÑ€ïŸÜÿßŸà ÿÆÿßŸÜŸàŸà€ï⁄©€ï.""",
                      onPressedBritish: () => speaksentence4("en-GB"),
                      onPressedAmerican: () => speaksentence4("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText:
                          """There was a police van parked outside the house.""",
                      kurdishText:
                          """⁄§ÿßŸÜ€é⁄©€å Ÿæ€ÜŸÑ€åÿ≥ Ÿà€ïÿ≥ÿ™€éŸÜÿ±ÿßÿ®ŸàŸà ŸÑ€ï ÿØ€ïÿ±€ïŸà€ï€å ÿÆÿßŸÜŸàŸà€ï⁄©€ï.""",
                      onPressedBritish: () => speaksentence5("en-GB"),
                      onPressedAmerican: () => speaksentence5("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """Let's have a party at my house.""",
                      kurdishText: """ÿ®ÿß ÿ¶ÿßŸá€ïŸÜ⁄Ø€é⁄© ÿ≥ÿßÿ≤ ÿ®⁄©€ï€åŸÜ ŸÑ€ï ŸÖÿß⁄µ€ï⁄©€ïŸÖ.""",
                      onPressedBritish: () => speaksentence6("en-GB"),
                      onPressedAmerican: () => speaksentence6("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText:
                          """Investors were buying houses to rent them out.""",
                      kurdishText:
                          """Ÿà€ïÿ®€ïÿ±Ÿá€éŸÜ€ïÿ±ÿßŸÜ ÿÆÿßŸÜŸàŸà€åÿßŸÜ ÿØ€ï⁄©⁄ï€å ÿ™ÿßŸà€ï⁄©Ÿà ÿ®€åÿßŸÜÿØ€ïŸÜ ÿ®€ï ⁄©ÿ±€é.""",
                      onPressedBritish: () => speaksentence7("en-GB"),
                      onPressedAmerican: () => speaksentence7("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText:
                          """What time do you leave the house in the morning (= to go to work)?""",
                      kurdishText: """⁄©€ï€å ŸÖÿß⁄µ€ïŸà€ï ÿ¨€éÿØ€ïŸá€é⁄µ€åÿ™ ŸÑ€ï ÿ®€ï€åÿßŸÜ€åÿØÿßÿü""",
                      onPressedBritish: () => speaksentence8("en-GB"),
                      onPressedAmerican: () => speaksentence8("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText:
                          """We're moving house (= leaving our house and going to live in a different one).""",
                      kurdishText: """ŸÖÿß⁄µ ÿ®ÿßÿ± ÿ¶€ï⁄©€ï€åŸÜ.""",
                      onPressedBritish: () => speaksentence9("en-GB"),
                      onPressedAmerican: () => speaksentence9("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText:
                          """House prices (= prices of houses and flats) in London are still rising.""",
                      kurdishText:
                          """ŸÜÿ±ÿÆ€å ÿÆÿßŸÜŸàŸà ŸÑ€ï ŸÑ€ïŸÜÿØ€ïŸÜ Ÿá€éÿ¥ÿ™ÿß ÿ®€ïÿ±ÿ≤ ÿØ€ïÿ®ŸÜ€ïŸà€ï.""",
                      onPressedBritish: () => speaksentence10("en-GB"),
                      onPressedAmerican: () => speaksentence10("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText:
                          """They went from house to house, begging for food.""",
                      kurdishText:
                          """ÿÆÿßŸÜŸàŸà ÿ®€ï ÿÆÿßŸÜŸàŸà ÿØ€ï⁄Ø€ï⁄ïÿßŸÜÿå ÿ≥Ÿàÿß⁄µ€åÿßŸÜ ÿ®€Ü ÿÆŸàÿßÿ±ÿØŸÜ ÿØ€ï⁄©ÿ±ÿØ.""",
                      onPressedBritish: () => speaksentence11("en-GB"),
                      onPressedAmerican: () => speaksentence11("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(
                        text:
                            """Ÿ¢. (ŸÜÿßŸà) ÿ™€ïŸàÿßŸà€å ÿ¶€ïŸà ⁄©€ïÿ≥ÿßŸÜ€ï€å ŸÑ€ï ÿÆÿßŸÜŸàŸà€å€ï⁄© ÿØ€ï⁄ò€åŸÜ"""),
                    const AlsoEnglishckb(word: "⁄æ€ïÿ±Ÿà€ï⁄æÿß: household"),
                    SentencesRow(
                      englishText:
                          """Be quiet or you'll wake the whole house!""",
                      kurdishText:
                          """ÿ®€é‚ÄåÿØ€ïŸÜ⁄Ø ÿ®€ï ÿ¶€ï⁄Ø€ïÿ±ŸÜÿß ÿ™€ïŸàÿßŸà€å ŸÖÿß⁄µ€ïŸà€ï ÿÆ€ïÿ®€ïÿ± ÿØ€ï⁄©€ï€åÿ™€ïŸà€ï.""",
                      onPressedBritish: () => speaksentence12("en-GB"),
                      onPressedAmerican: () => speaksentence12("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(
                        text:
                            """Ÿ£. (ŸÜÿßŸà) ÿ®€åŸÜÿß€å€ï⁄© ⁄©€ï ÿ®€Ü ŸÖ€ïÿ®€ïÿ≥ÿ™€é⁄©€å ÿ™ÿß€åÿ®€ïÿ™€å ÿ®€ï⁄©ÿßÿ±ÿØ€éÿ™"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText:
                          """We built a new henhouse for the chickens.""",
                      kurdishText:
                          """⁄©ŸàŸÑÿßŸÜ€ï€å€ï⁄©€å ÿ™ÿßÿ≤€ïŸÖÿßŸÜ ÿ®€Ü ŸÖÿ±€åÿ¥⁄©€ï⁄©ÿßŸÜ ÿØÿ±ŸàŸàÿ≥ÿ™⁄©ÿ±ÿØ.""",
                      onPressedBritish: () => speaksentence13("en-GB"),
                      onPressedAmerican: () => speaksentence13("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(
                        text: """Ÿ§. (ŸÜÿßŸà) ŸÑ€ï ŸÜÿßŸà€å ÿ®€åŸÜÿß€å ÿ¶€ÜŸÅ€åÿ≥ÿØÿß ÿ®€ï⁄©ÿßÿ±ÿØ€éÿ™"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText:
                          """Their offices are on the second floor of Chester House.""",
                      kurdishText:
                          """ÿ¶€ÜŸÅ€åÿ≥€ï⁄©ÿßŸÜ€åÿßŸÜ ŸÑ€ïÿ≥€ïÿ± ŸÜŸá€ÜŸÖ€å ÿØŸàŸà€ïŸÖ€å ÿ®€åŸÜÿß€å ⁄Ü€éÿ≥ÿ™€ïÿ±ŸÜ.""",
                      onPressedBritish: () => speaksentence14("en-GB"),
                      onPressedAmerican: () => speaksentence14("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(
                        text:
                            """Ÿ§. (ŸÜÿßŸà) ⁄©€ÜŸÖŸæÿßŸÜ€åÿß€å€ï⁄© ⁄©€ï ÿ¨€Üÿ±€ï ÿ®ÿßÿ≤ÿ±⁄ØÿßŸÜ€å€å€ï⁄©€å ÿØ€åÿßÿ±€å⁄©ÿ±ÿßŸà ÿ¶€ïŸÜÿ¨ÿßŸÖ ÿØ€ïÿØÿßÿ™"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText:
                          """The publishing house made its name by encouraging first-time writers.""",
                      kurdishText:
                          """ÿÆÿßŸÜ€ï ÿ®⁄µÿßŸà⁄©ÿßÿ±€ï⁄©€ï ŸÜÿßŸàÿ®ÿßŸÜ⁄Ø€å ÿØ€ïÿ±⁄©ÿ±ÿØ ÿ®€ï ŸáÿßŸÜÿØÿßŸÜ€å ŸÜŸàŸàÿ≥€ïÿ±€ï ÿ™ÿßÿ≤€ï⁄©ÿßŸÜ.""",
                      onPressedBritish: () => speaksentence15("en-GB"),
                      onPressedAmerican: () => speaksentence15("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(
                        text: """Ÿ¶. (ŸÜÿßŸà) ⁄Ü€éÿ¥ÿ™ÿÆÿßŸÜ€ï€å€ï⁄© €åÿßŸÜ ŸÇÿßŸà€ïÿÆÿßŸÜ€ï/⁄ÜÿßÿÆÿßŸÜ€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """We met at the coffee house downtown.""",
                      kurdishText:
                          """ŸÑ€ï ŸÇÿßŸà€ïÿÆÿßŸÜ€ï⁄©€ï€å ŸÜÿßŸàÿ¨€ïÿ±⁄Ø€ï€å ÿ¥ÿßÿ± €å€ï⁄©ŸÖÿßŸÜ ÿØ€å.""",
                      onPressedBritish: () => speaksentence16("en-GB"),
                      onPressedAmerican: () => speaksentence16("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(
                        text:
                            """Ÿß. (ŸÜÿßŸà) ⁄©€ÜŸÖ€ï⁄µ€ï ⁄©€ïÿ≥€é⁄© ⁄©€ï ⁄©€ÜÿØ€ïÿ®ŸÜ€ïŸà€ï Ÿà €åÿßÿ≥ÿß⁄©ÿßŸÜ€å Ÿà⁄µÿßÿ™€é⁄©€å ÿØ€åÿßÿ±€å⁄©ÿ±ÿßŸà ÿØÿßÿØ€ïŸÜ€éŸÜÿõ ŸÑ€ï ÿ®€ïÿ±€åÿ™ÿßŸÜ€åÿß Ÿá€ïÿ± €å€ï⁄© ŸÑ€ï ÿØŸàŸà ÿÆÿßŸÜ€ï⁄©€ï€å Ÿæ€ïÿ±ŸÑ€ïŸÖÿßŸÜ€ïÿõ ŸÑ€ï ÿ¶€ïŸÖÿ±€å⁄©ÿß ÿ¶€ïŸÜÿ¨ŸàŸàŸÖ€ïŸÜ€å ŸÜŸà€éŸÜ€ïÿ±ÿßŸÜ€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText:
                          """Legislation requires approval by both houses of parliament.""",
                      kurdishText:
                          """€åÿßÿ≥ÿßÿØÿßŸÜÿßŸÜ Ÿæ€éŸà€åÿ≥ÿ™€å ÿ®€ï Ÿæ€ïÿ≥€ïŸÜÿØ⁄©ÿ±ÿØŸÜ€å Ÿá€ïÿ±ÿØŸàŸà ÿÆÿßŸÜ€ï€å Ÿæ€ïÿ±ŸÑ€ïŸÖÿßŸÜ Ÿá€ï€å€ï.""",
                      onPressedBritish: () => speaksentence17("en-GB"),
                      onPressedAmerican: () => speaksentence17("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(
                        text:
                            """Ÿ®. (ŸÜÿßŸà) ⁄©€ÜŸÖ€ï⁄µ€ï ⁄©€ïÿ≥€é⁄© ⁄©€ï ÿ®ÿßÿ≥ ŸÑ€ï ÿ¥ÿ™€é⁄© ÿØ€ï⁄©€ïŸÜ ŸÑ€ï ÿØ€åÿ®€ï€åÿ™€é⁄©€å ŸÅ€ïÿ±ŸÖ€å"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText:
                          """I urge the house to vote against the motion.""",
                      kurdishText:
                          """ŸáÿßŸÜ€å ÿ®€ï⁄ï€éÿ≤ÿßŸÜ ÿØ€ïÿØ€ïŸÖ ÿØ€ïŸÜ⁄Ø ÿØ⁄ò ÿ®€ï Ÿæ€éÿ¥ŸÜ€åÿßÿ±€ï⁄©€ï ÿ®ÿØ€ïŸÜ.""",
                      onPressedBritish: () => speaksentence18("en-GB"),
                      onPressedAmerican: () => speaksentence18("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(
                        text:
                            """Ÿ©. (⁄©ÿ±ÿØÿßÿ±) ÿØÿßÿ®€åŸÜ⁄©ÿ±ÿØŸÜ€å ÿ¥Ÿà€éŸÜ€å ŸÖÿßŸÜ€ïŸà€ï ÿ®€Ü ⁄©€ïÿ≥ €åÿßŸÜ ÿ¶ÿß⁄ò€ï⁄µ€é⁄©"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText:
                          """The government is committed to housing the refugees.""",
                      kurdishText:
                          """ÿ≠⁄©ŸàŸÖ€ïÿ™ Ÿæÿßÿ®€ïŸÜÿØ€ï ÿ®€ï Ÿæ€éÿØÿßŸÜ€å ÿ¥Ÿà€éŸÜ ÿ®€ï Ÿæ€ïŸÜÿßÿ®€ïÿ±ÿßŸÜ.""",
                      onPressedBritish: () => speaksentence19("en-GB"),
                      onPressedAmerican: () => speaksentence19("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText:
                          """He can barely afford to feed, clothe and house his family.""",
                      kurdishText:
                          """ÿ®€ï ÿ¶ÿßÿ≥ÿ™€ïŸÜ⁄Ø ÿØ€ïÿ™ŸàÿßŸÜ€éÿ™ ÿÆ€éÿ≤ÿßŸÜ€ï⁄©€ï€å ÿ™€éÿ± ÿ®⁄©ÿßÿ™ Ÿà ÿ¨ŸÑ Ÿà ÿ¨€é⁄Øÿß€å ŸÖÿßŸÜ€ïŸà€ï€åÿßŸÜ ÿ®€Ü ÿØÿßÿ®€åŸÜ ÿ®⁄©ÿßÿ™.""",
                      onPressedBritish: () => speaksentence20("en-GB"),
                      onPressedAmerican: () => speaksentence20("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText:
                          """The losers in this society are people who are homeless or badly housed.""",
                      kurdishText:
                          """ÿØ€Ü⁄ïÿßŸà€ï⁄©ÿßŸÜ€å ⁄©€ÜŸÖ€ï⁄µ⁄Øÿß ÿ¶€ïŸà ⁄©€ïÿ≥ÿßŸÜ€ïŸÜ ⁄©€ï ÿ®€é‚ÄåŸÑÿßŸÜ€ïŸÜ €åÿßŸÜ ÿ®€ï ÿÆÿ±ÿßŸæ€å ÿÆÿßŸÜŸàŸà€åÿßŸÜ Ÿá€ï€å€ï.""",
                      onPressedBritish: () => speaksentence21("en-GB"),
                      onPressedAmerican: () => speaksentence21("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """The rabbits were housed individually.""",
                      kurdishText:
                          """⁄©€ïÿ±Ÿà€éÿ¥⁄©€ï⁄©ÿßŸÜ €å€ï⁄© ÿ®€ï €å€ï⁄© ÿ¨€é⁄Øÿß€åÿßŸÜ Ÿæ€éÿØ€ïÿØÿ±ÿß.""",
                      onPressedBritish: () => speaksentence22("en-GB"),
                      onPressedAmerican: () => speaksentence22("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(
                        text:
                            """Ÿ°Ÿ†. (⁄©ÿ±ÿØÿßÿ±) ÿ®ŸàŸàŸÜ ÿ®€ïŸà ÿ¥Ÿà€éŸÜ€ï€å ⁄©€ï ÿ¥ÿ™€é⁄© Ÿá€ï⁄µÿØ€ï⁄Ø€åÿ±€éÿ™ €åÿßŸÜ ÿ¥ÿ™€é⁄© ŸÑ€é€å€ïŸà€ï ⁄©ÿßÿ± ÿØ€ï⁄©ÿßÿ™"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText:
                          """The library houses a collection of 15‚Äâ000 books.""",
                      kurdishText:
                          """Ÿæ€ïÿ±ÿ™ŸàŸà⁄©ÿÆÿßŸÜ€ï⁄©€ï ⁄©€Ü⁄©ÿ±ÿßŸà€ï€å Ÿ°Ÿ•Ÿ†Ÿ†Ÿ† ⁄©ÿ™€éÿ®€å ŸÑ€é€å€ï.""",
                      onPressedBritish: () => speaksentence23("en-GB"),
                      onPressedAmerican: () => speaksentence23("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText:
                          """The gallery houses 2‚Äâ000 works of modern art.""",
                      kurdishText:
                          """Ÿæ€éÿ¥ÿßŸÜ⁄Øÿß⁄©€ï Ÿ¢Ÿ†Ÿ†Ÿ† ⁄©ÿßÿ±€å ŸáŸàŸÜ€ïÿ±€å ŸÖ€ÜÿØ€éÿ±ŸÜ€å ŸÑ€é€å€ï.""",
                      onPressedBritish: () => speaksentence24("en-GB"),
                      onPressedAmerican: () => speaksentence24("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText:
                          """The new offices will house 600 administration staff.""",
                      kurdishText:
                          """ÿ¶€ÜŸÅ€åÿ≥€ï ÿ™ÿßÿ≤€ï⁄©ÿßŸÜ Ÿ¶Ÿ†Ÿ† ÿ≥ÿ™ÿßŸÅ€å ÿ®€ï⁄ï€éŸà€ïÿ®ÿ±ÿØŸÜ ŸÑ€ïÿÆ€Ü ÿØ€ï⁄Øÿ±ŸÜ.""",
                      onPressedBritish: () => speaksentence25("en-GB"),
                      onPressedAmerican: () => speaksentence25("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence2600""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence26("en-GB"),
                      onPressedAmerican: () => speaksentence26("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence2700""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence27("en-GB"),
                      onPressedAmerican: () => speaksentence27("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence2800""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence28("en-GB"),
                      onPressedAmerican: () => speaksentence28("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence2900""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence29("en-GB"),
                      onPressedAmerican: () => speaksentence29("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_3000""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence30("en-GB"),
                      onPressedAmerican: () => speaksentence30("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence3100""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence31("en-GB"),
                      onPressedAmerican: () => speaksentence31("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence3200""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence32("en-GB"),
                      onPressedAmerican: () => speaksentence32("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence3300""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence33("en-GB"),
                      onPressedAmerican: () => speaksentence33("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence3400""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence34("en-GB"),
                      onPressedAmerican: () => speaksentence34("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence3500""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence35("en-GB"),
                      onPressedAmerican: () => speaksentence35("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence3600""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence36("en-GB"),
                      onPressedAmerican: () => speaksentence36("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence3700""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence37("en-GB"),
                      onPressedAmerican: () => speaksentence37("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence3800""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence38("en-GB"),
                      onPressedAmerican: () => speaksentence38("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence3900""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence39("en-GB"),
                      onPressedAmerican: () => speaksentence39("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_4000""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence40("en-GB"),
                      onPressedAmerican: () => speaksentence40("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence4100""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence41("en-GB"),
                      onPressedAmerican: () => speaksentence41("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence4200""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence42("en-GB"),
                      onPressedAmerican: () => speaksentence42("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence4300""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence43("en-GB"),
                      onPressedAmerican: () => speaksentence43("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence4400""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence44("en-GB"),
                      onPressedAmerican: () => speaksentence44("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence4500""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence45("en-GB"),
                      onPressedAmerican: () => speaksentence45("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence4600""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence46("en-GB"),
                      onPressedAmerican: () => speaksentence46("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence4700""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence47("en-GB"),
                      onPressedAmerican: () => speaksentence47("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence4800""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence48("en-GB"),
                      onPressedAmerican: () => speaksentence48("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence4900""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence49("en-GB"),
                      onPressedAmerican: () => speaksentence49("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_5000""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence50("en-GB"),
                      onPressedAmerican: () => speaksentence50("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence5100""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence51("en-GB"),
                      onPressedAmerican: () => speaksentence51("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence5200""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence52("en-GB"),
                      onPressedAmerican: () => speaksentence52("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence5300""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence53("en-GB"),
                      onPressedAmerican: () => speaksentence53("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence5400""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence54("en-GB"),
                      onPressedAmerican: () => speaksentence54("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence5500""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence55("en-GB"),
                      onPressedAmerican: () => speaksentence55("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence5600""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence56("en-GB"),
                      onPressedAmerican: () => speaksentence56("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence5700""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence57("en-GB"),
                      onPressedAmerican: () => speaksentence57("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence5800""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence58("en-GB"),
                      onPressedAmerican: () => speaksentence58("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence5900""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence59("en-GB"),
                      onPressedAmerican: () => speaksentence59("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_6000""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence60("en-GB"),
                      onPressedAmerican: () => speaksentence60("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence6100""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence61("en-GB"),
                      onPressedAmerican: () => speaksentence61("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence6200""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence62("en-GB"),
                      onPressedAmerican: () => speaksentence62("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence6300""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence63("en-GB"),
                      onPressedAmerican: () => speaksentence63("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence6400""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence64("en-GB"),
                      onPressedAmerican: () => speaksentence64("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence6500""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence65("en-GB"),
                      onPressedAmerican: () => speaksentence65("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence6600""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence66("en-GB"),
                      onPressedAmerican: () => speaksentence66("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence6700""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence67("en-GB"),
                      onPressedAmerican: () => speaksentence67("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence6800""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence68("en-GB"),
                      onPressedAmerican: () => speaksentence68("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence6900""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence69("en-GB"),
                      onPressedAmerican: () => speaksentence69("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_7000""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence70("en-GB"),
                      onPressedAmerican: () => speaksentence70("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence7100""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence71("en-GB"),
                      onPressedAmerican: () => speaksentence71("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence7200""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence72("en-GB"),
                      onPressedAmerican: () => speaksentence72("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence7300""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence73("en-GB"),
                      onPressedAmerican: () => speaksentence73("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence7400""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence74("en-GB"),
                      onPressedAmerican: () => speaksentence74("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence7500""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence75("en-GB"),
                      onPressedAmerican: () => speaksentence75("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence7600""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence76("en-GB"),
                      onPressedAmerican: () => speaksentence76("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence7700""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence77("en-GB"),
                      onPressedAmerican: () => speaksentence77("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence7800""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence78("en-GB"),
                      onPressedAmerican: () => speaksentence78("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence7900""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence79("en-GB"),
                      onPressedAmerican: () => speaksentence79("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_8000""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence80("en-GB"),
                      onPressedAmerican: () => speaksentence80("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence8100""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence81("en-GB"),
                      onPressedAmerican: () => speaksentence81("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence8200""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence82("en-GB"),
                      onPressedAmerican: () => speaksentence82("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence8300""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence83("en-GB"),
                      onPressedAmerican: () => speaksentence83("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence8400""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence84("en-GB"),
                      onPressedAmerican: () => speaksentence84("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence8500""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence85("en-GB"),
                      onPressedAmerican: () => speaksentence85("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence8600""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence86("en-GB"),
                      onPressedAmerican: () => speaksentence86("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence8700""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence87("en-GB"),
                      onPressedAmerican: () => speaksentence87("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence8800""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence88("en-GB"),
                      onPressedAmerican: () => speaksentence88("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence8900""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence89("en-GB"),
                      onPressedAmerican: () => speaksentence89("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_9000""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence90("en-GB"),
                      onPressedAmerican: () => speaksentence90("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence9100""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence91("en-GB"),
                      onPressedAmerican: () => speaksentence91("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence9200""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence92("en-GB"),
                      onPressedAmerican: () => speaksentence92("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence9300""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence93("en-GB"),
                      onPressedAmerican: () => speaksentence93("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence9400""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence94("en-GB"),
                      onPressedAmerican: () => speaksentence94("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence9500""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence95("en-GB"),
                      onPressedAmerican: () => speaksentence95("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence9600""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence96("en-GB"),
                      onPressedAmerican: () => speaksentence96("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence9700""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence97("en-GB"),
                      onPressedAmerican: () => speaksentence97("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence9800""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence98("en-GB"),
                      onPressedAmerican: () => speaksentence98("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence9900""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence99("en-GB"),
                      onPressedAmerican: () => speaksentence99("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence__10000""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence100("en-GB"),
                      onPressedAmerican: () => speaksentence100("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_10100""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence101("en-GB"),
                      onPressedAmerican: () => speaksentence101("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_10200""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence102("en-GB"),
                      onPressedAmerican: () => speaksentence102("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_10300""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence103("en-GB"),
                      onPressedAmerican: () => speaksentence103("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_10400""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence104("en-GB"),
                      onPressedAmerican: () => speaksentence104("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_10500""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence105("en-GB"),
                      onPressedAmerican: () => speaksentence105("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_10600""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence106("en-GB"),
                      onPressedAmerican: () => speaksentence106("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_10700""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence107("en-GB"),
                      onPressedAmerican: () => speaksentence107("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_10800""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence108("en-GB"),
                      onPressedAmerican: () => speaksentence108("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_10900""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence109("en-GB"),
                      onPressedAmerican: () => speaksentence109("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_11000""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence110("en-GB"),
                      onPressedAmerican: () => speaksentence110("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_11100""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence111("en-GB"),
                      onPressedAmerican: () => speaksentence111("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_11200""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence112("en-GB"),
                      onPressedAmerican: () => speaksentence112("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_11300""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence113("en-GB"),
                      onPressedAmerican: () => speaksentence113("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_11400""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence114("en-GB"),
                      onPressedAmerican: () => speaksentence114("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_11500""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence115("en-GB"),
                      onPressedAmerican: () => speaksentence115("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_11600""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence116("en-GB"),
                      onPressedAmerican: () => speaksentence116("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_11700""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence117("en-GB"),
                      onPressedAmerican: () => speaksentence117("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_11800""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence118("en-GB"),
                      onPressedAmerican: () => speaksentence118("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_11900""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence119("en-GB"),
                      onPressedAmerican: () => speaksentence119("en-US"),
                    ),
                    const DividerDefinition(),
                    const DefinitionKurdish(text: """⁄òŸÖŸÖÿ±. (⁄©ÿ±ÿØÿßÿ±) ŸæŸÜŸÜÿ≥€ï"""),
                    const DividerSentences(),
                    SentencesRow(
                      englishText: """speaksentence_12000""",
                      kurdishText: """ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï_ÿ±ÿ≥ÿ™€ï.""",
                      onPressedBritish: () => speaksentence120("en-GB"),
                      onPressedAmerican: () => speaksentence120("en-US"),
                    ),
                  ],
                ),
              ),
              Consumer(
                builder: (context, ref, child) {
                  if (filteredSentences.isEmpty) {
                    return const NoSentencesFromDatabase();
                  } else {
                    return ListView.builder(
                      itemCount: filteredSentences.length,
                      itemBuilder: (context, index) {
                        final sentence = filteredSentences[index];
                        final showDivider = filteredSentences.length > 1 &&
                            index != filteredSentences.length - 1;
                        return CustomSentenceWidget(
                          englishText: sentence['english'].toString(),
                          frenchText: sentence['french'].toString(),
                          keyword: keyword,
                          onPressedBritish: () => speakEnglish(
                            sentence['english'].toString(),
                            languageCode: "en-GB",
                          ),
                          onPressedAmerican: () => speakEnglish(
                            sentence['english'].toString(),
                            languageCode: "en-US",
                          ),
                          showDivider: showDivider,
                        );
                      },
                    );
                  }
                },
              ),
              const YouTubeScroller(
                children: [
                  YoutubeEmbeddingWidget(
                    key: ValueKey(videoIdend),
                    videoId: videoIdend,
                    startSeconds: startSecondsend,
                  ),
                  YoutubeEmbeddingWidget(
                    key: ValueKey(videoIdone),
                    videoId: videoIdone,
                    startSeconds: startSecondsone,
                  ),
                  YoutubeEmbeddingWidget(
                    key: ValueKey(videoIdtwo),
                    videoId: videoIdtwo,
                    startSeconds: startSecondstwo,
                  ),
                  YoutubeEmbeddingWidget(
                    key: ValueKey(videoIdthree),
                    videoId: videoIdthree,
                    startSeconds: startSecondsthree,
                  ),
                  YoutubeEmbeddingWidget(
                    key: ValueKey(videoIdfour),
                    videoId: videoIdfour,
                    startSeconds: startSecondsfour,
                  ),
                  YoutubeEmbeddingWidget(
                    key: ValueKey(videoIdfive),
                    videoId: videoIdfive,
                    startSeconds: startSecondsfive,
                  ),
                ],
              ),
            ],
          ),
        ),
      ),
    );
  }
}

// end WORD_WEB